2024-07-10 08:36:13 - HV000001: Hibernate Validator 8.0.1.Final
2024-07-10 08:36:13 - Starting SpringThymeleafApplication using Java 17.0.7 with PID 4644 (C:\Users\fernando.correa\Documents\GitHub\workspace2023\app-devceasa01.2003\target\classes started by fernando.correa in C:\Users\fernando.correa\Documents\GitHub\workspace2023\app-devceasa01.2003)
2024-07-10 08:36:13 - No active profile set, falling back to 1 default profile: "default"
2024-07-10 08:36:13 - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-07-10 08:36:13 - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-07-10 08:36:14 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-10 08:36:14 - Finished Spring Data repository scanning in 88 ms. Found 15 JPA repository interfaces.
2024-07-10 08:36:15 - Tomcat initialized with port(s): 5001 (http)
2024-07-10 08:36:15 - Initializing ProtocolHandler ["http-nio-5001"]
2024-07-10 08:36:15 - Starting service [Tomcat]
2024-07-10 08:36:15 - Starting Servlet engine: [Apache Tomcat/10.1.15]
2024-07-10 08:36:15 - Initializing Spring embedded WebApplicationContext
2024-07-10 08:36:15 - Root WebApplicationContext: initialization completed in 1729 ms
2024-07-10 08:36:15 - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-10 08:36:15 - HHH000412: Hibernate ORM core version 6.2.13.Final
2024-07-10 08:36:15 - HHH000406: Using bytecode reflection optimizer
2024-07-10 08:36:15 - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@63937bff
2024-07-10 08:36:15 - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@63937bff
2024-07-10 08:36:15 - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@63937bff
2024-07-10 08:36:15 - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@34a179a3
2024-07-10 08:36:15 - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@34a179a3
2024-07-10 08:36:15 - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@45f2e03d
2024-07-10 08:36:15 - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@45f2e03d
2024-07-10 08:36:15 - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@28eece9f
2024-07-10 08:36:15 - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@28eece9f
2024-07-10 08:36:15 - Adding type registration byte -> org.hibernate.type.BasicTypeReference@50da14fe
2024-07-10 08:36:15 - Adding type registration byte -> org.hibernate.type.BasicTypeReference@50da14fe
2024-07-10 08:36:15 - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@50da14fe
2024-07-10 08:36:15 - Adding type registration binary -> org.hibernate.type.BasicTypeReference@636c4eff
2024-07-10 08:36:15 - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@636c4eff
2024-07-10 08:36:15 - Adding type registration [B -> org.hibernate.type.BasicTypeReference@636c4eff
2024-07-10 08:36:15 - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@6311db88
2024-07-10 08:36:15 - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@6311db88
2024-07-10 08:36:15 - Adding type registration image -> org.hibernate.type.BasicTypeReference@4426fcf6
2024-07-10 08:36:15 - Adding type registration blob -> org.hibernate.type.BasicTypeReference@3e5b1eec
2024-07-10 08:36:15 - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@3e5b1eec
2024-07-10 08:36:15 - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@3f41a46e
2024-07-10 08:36:15 - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@5261e595
2024-07-10 08:36:15 - Adding type registration short -> org.hibernate.type.BasicTypeReference@21d36263
2024-07-10 08:36:15 - Adding type registration short -> org.hibernate.type.BasicTypeReference@21d36263
2024-07-10 08:36:15 - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@21d36263
2024-07-10 08:36:15 - Adding type registration integer -> org.hibernate.type.BasicTypeReference@4719b4cb
2024-07-10 08:36:15 - Adding type registration int -> org.hibernate.type.BasicTypeReference@4719b4cb
2024-07-10 08:36:15 - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@4719b4cb
2024-07-10 08:36:15 - Adding type registration long -> org.hibernate.type.BasicTypeReference@75c90a92
2024-07-10 08:36:15 - Adding type registration long -> org.hibernate.type.BasicTypeReference@75c90a92
2024-07-10 08:36:15 - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@75c90a92
2024-07-10 08:36:15 - Adding type registration float -> org.hibernate.type.BasicTypeReference@28d914f3
2024-07-10 08:36:15 - Adding type registration float -> org.hibernate.type.BasicTypeReference@28d914f3
2024-07-10 08:36:15 - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@28d914f3
2024-07-10 08:36:15 - Adding type registration double -> org.hibernate.type.BasicTypeReference@12a3bbf1
2024-07-10 08:36:15 - Adding type registration double -> org.hibernate.type.BasicTypeReference@12a3bbf1
2024-07-10 08:36:15 - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@12a3bbf1
2024-07-10 08:36:15 - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@1896ea82
2024-07-10 08:36:15 - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@1896ea82
2024-07-10 08:36:15 - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@25b6fe98
2024-07-10 08:36:15 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@25b6fe98
2024-07-10 08:36:15 - Adding type registration character -> org.hibernate.type.BasicTypeReference@45a80851
2024-07-10 08:36:15 - Adding type registration char -> org.hibernate.type.BasicTypeReference@45a80851
2024-07-10 08:36:15 - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@45a80851
2024-07-10 08:36:15 - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@4adb4f26
2024-07-10 08:36:15 - Adding type registration string -> org.hibernate.type.BasicTypeReference@65367e05
2024-07-10 08:36:15 - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@65367e05
2024-07-10 08:36:15 - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@77e60e05
2024-07-10 08:36:15 - Adding type registration characters -> org.hibernate.type.BasicTypeReference@72097a28
2024-07-10 08:36:15 - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@72097a28
2024-07-10 08:36:15 - Adding type registration [C -> org.hibernate.type.BasicTypeReference@72097a28
2024-07-10 08:36:15 - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@623bb930
2024-07-10 08:36:15 - Adding type registration text -> org.hibernate.type.BasicTypeReference@342b2524
2024-07-10 08:36:15 - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@737a8382
2024-07-10 08:36:15 - Adding type registration clob -> org.hibernate.type.BasicTypeReference@4a1b6fff
2024-07-10 08:36:15 - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@4a1b6fff
2024-07-10 08:36:15 - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@7556bdb5
2024-07-10 08:36:15 - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@7556bdb5
2024-07-10 08:36:15 - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@18b9b43e
2024-07-10 08:36:15 - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@3f785238
2024-07-10 08:36:15 - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@2e0da6bf
2024-07-10 08:36:15 - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@6e760dde
2024-07-10 08:36:15 - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@3b3b4c6a
2024-07-10 08:36:15 - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@462f20a7
2024-07-10 08:36:15 - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@5544e83
2024-07-10 08:36:15 - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@5544e83
2024-07-10 08:36:15 - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@5b12ab0a
2024-07-10 08:36:15 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@5b12ab0a
2024-07-10 08:36:15 - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@3a2be41e
2024-07-10 08:36:15 - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@3a2be41e
2024-07-10 08:36:15 - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@53ed1e4
2024-07-10 08:36:15 - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@53ed1e4
2024-07-10 08:36:15 - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@22b9a796
2024-07-10 08:36:15 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@22b9a796
2024-07-10 08:36:15 - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6c3d0230
2024-07-10 08:36:15 - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@95310bd
2024-07-10 08:36:15 - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@7a115182
2024-07-10 08:36:15 - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@7a115182
2024-07-10 08:36:15 - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@15fbdc41
2024-07-10 08:36:15 - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@1153604c
2024-07-10 08:36:15 - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@144c23
2024-07-10 08:36:15 - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@70f980e2
2024-07-10 08:36:15 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@70f980e2
2024-07-10 08:36:15 - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3bab5368
2024-07-10 08:36:15 - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@31701551
2024-07-10 08:36:15 - Adding type registration date -> org.hibernate.type.BasicTypeReference@13273208
2024-07-10 08:36:15 - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@13273208
2024-07-10 08:36:15 - Adding type registration time -> org.hibernate.type.BasicTypeReference@2fe55e1e
2024-07-10 08:36:15 - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@2fe55e1e
2024-07-10 08:36:15 - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@4e347899
2024-07-10 08:36:15 - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@4e347899
2024-07-10 08:36:15 - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@4e347899
2024-07-10 08:36:15 - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@7f5f2693
2024-07-10 08:36:15 - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@7f5f2693
2024-07-10 08:36:15 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@7f5f2693
2024-07-10 08:36:15 - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@55c2ec02
2024-07-10 08:36:15 - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@50d25d0a
2024-07-10 08:36:15 - Adding type registration instant -> org.hibernate.type.BasicTypeReference@3d4f1739
2024-07-10 08:36:15 - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@3d4f1739
2024-07-10 08:36:15 - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@3ba2c5bd
2024-07-10 08:36:15 - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@3ba2c5bd
2024-07-10 08:36:15 - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@3ba2c5bd
2024-07-10 08:36:15 - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@79428c37
2024-07-10 08:36:15 - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@3bbaa418
2024-07-10 08:36:15 - Adding type registration class -> org.hibernate.type.BasicTypeReference@7e098a89
2024-07-10 08:36:15 - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@7e098a89
2024-07-10 08:36:15 - Adding type registration currency -> org.hibernate.type.BasicTypeReference@532b27d8
2024-07-10 08:36:15 - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@532b27d8
2024-07-10 08:36:15 - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@532b27d8
2024-07-10 08:36:15 - Adding type registration locale -> org.hibernate.type.BasicTypeReference@3ee52abe
2024-07-10 08:36:15 - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@3ee52abe
2024-07-10 08:36:15 - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@5091d31e
2024-07-10 08:36:15 - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@5091d31e
2024-07-10 08:36:15 - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@62fe5647
2024-07-10 08:36:15 - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@62fe5647
2024-07-10 08:36:15 - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@6861b827
2024-07-10 08:36:15 - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@6861b827
2024-07-10 08:36:15 - Adding type registration url -> org.hibernate.type.BasicTypeReference@7fc6df4f
2024-07-10 08:36:15 - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@7fc6df4f
2024-07-10 08:36:15 - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@2191fa8a
2024-07-10 08:36:15 - Adding type registration object -> org.hibernate.type.JavaObjectType@28fd122d
2024-07-10 08:36:15 - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@28fd122d
2024-07-10 08:36:15 - Adding type registration null -> org.hibernate.type.NullType@6138398a
2024-07-10 08:36:15 - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@5491a07e
2024-07-10 08:36:15 - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@61a2bb51
2024-07-10 08:36:15 - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@1d2ac214
2024-07-10 08:36:15 - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@3dfe4c52
2024-07-10 08:36:15 - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@64b599c3
2024-07-10 08:36:15 - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@1039de37
2024-07-10 08:36:15 - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@5bc89446
2024-07-10 08:36:15 - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@141bdfb1
2024-07-10 08:36:15 - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-10 08:36:15 - HikariPool-1 - Starting...
2024-07-10 08:36:16 - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@23124537
2024-07-10 08:36:16 - HikariPool-1 - Start completed.
2024-07-10 08:36:16 - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-07-10 08:36:16 - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@65a7d35b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5259b130)
2024-07-10 08:36:16 - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2024-07-10 08:36:16 - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-07-10 08:36:16 - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@330d56b9
2024-07-10 08:36:16 - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@330d56b9
2024-07-10 08:36:16 - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@28fd122d`
2024-07-10 08:36:16 - Adding type registration Duration -> basicType@1(java.time.Duration,2)
2024-07-10 08:36:16 - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
2024-07-10 08:36:16 - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-10 08:36:16 - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-10 08:36:16 - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-10 08:36:16 - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-10 08:36:16 - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-10 08:36:16 - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-10 08:36:16 - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-07-10 08:36:16 - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-07-10 08:36:16 - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-07-10 08:36:16 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@659d5d78] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@11d25243]
2024-07-10 08:36:17 - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-10 08:36:17 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@659d5d78] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@3741ff99]
2024-07-10 08:36:17 - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@3741ff99] for TypeConfiguration
2024-07-10 08:36:17 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-10 08:36:17 - Hibernate is in classpath; If applicable, HQL parser will be used.
2024-07-10 08:36:18 - No authentication manager set. Reauthentication of users when changing passwords will not be performed.
2024-07-10 08:36:18 - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@55f706b9, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@16280537, org.springframework.security.web.context.SecurityContextHolderFilter@31ade822, org.springframework.security.web.header.HeaderWriterFilter@34b1dbb3, org.springframework.security.web.authentication.logout.LogoutFilter@6fc172ef, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@4fbdfdea, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@79326f36, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@22eb0e7b, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@a843a6d, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3893ac26, org.springframework.security.web.access.ExceptionTranslationFilter@446efd2c, org.springframework.security.web.access.intercept.AuthorizationFilter@4130c1b3]
2024-07-10 08:36:19 - LiveReload server is running on port 35729
2024-07-10 08:36:19 - Starting ProtocolHandler ["http-nio-5001"]
2024-07-10 08:36:19 - Tomcat started on port(s): 5001 (http) with context path ''
2024-07-10 08:36:19 - Started SpringThymeleafApplication in 6.536 seconds (process running for 7.32)
2024-07-10 08:36:31 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-07-10 08:36:31 - Initializing Servlet 'dispatcherServlet'
2024-07-10 08:36:31 - Completed initialization in 1 ms
2024-07-10 08:36:40 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0
2024-07-10 08:36:40 - select p1_0.id,p1_0.classificacao,p1_0.codigo,p1_0.embalagem,p1_0.peso,p1_0.produto_id,p1_0.status,p1_0.subvariedade,p1_0.unidade,p1_0.variedade from propriedade p1_0
2024-07-10 08:38:09 - Encoded password does not look like BCrypt
2024-07-10 08:38:16 - select u1_0.username,u1_0.enabled,u1_0.password from users u1_0
2024-07-10 08:38:16 - select a1_0.username,a1_0.id,a1_0.authority from authorities a1_0 where a1_0.username=?
2024-07-10 08:38:16 - select a1_0.username,a1_0.id,a1_0.authority from authorities a1_0 where a1_0.username=?
2024-07-10 08:38:16 - select a1_0.username,a1_0.id,a1_0.authority from authorities a1_0 where a1_0.username=?
2024-07-10 08:38:16 - select a1_0.username,a1_0.id,a1_0.authority from authorities a1_0 where a1_0.username=?
2024-07-10 08:38:16 - select a1_0.username,a1_0.id,a1_0.authority from authorities a1_0 where a1_0.username=?
2024-07-10 08:38:16 - select a1_0.username,a1_0.id,a1_0.authority from authorities a1_0 where a1_0.username=?
2024-07-10 08:38:16 - select a1_0.username,a1_0.id,a1_0.authority from authorities a1_0 where a1_0.username=?
2024-07-10 08:38:16 - select a1_0.username,a1_0.id,a1_0.authority from authorities a1_0 where a1_0.username=?
2024-07-10 08:38:16 - select a1_0.username,a1_0.id,a1_0.authority from authorities a1_0 where a1_0.username=?
2024-07-10 08:38:37 - ID da entidade: teste
2024-07-10 08:38:37 - insert into audit_log (entity,entity_id,new_data,old_data,operation,operation_time,username) values (?,?,?,?,?,?,?)
2024-07-10 08:38:37 - LOGG: Auditoria SAVE registrada para entidade: User
2024-07-10 08:38:37 - select u1_0.username,a1_0.username,a1_0.id,a1_0.authority,u1_0.enabled,u1_0.password from users u1_0 left join authorities a1_0 on u1_0.username=a1_0.username where u1_0.username=?
2024-07-10 08:38:37 - insert into users (enabled,password,username) values (?,?,?)
2024-07-10 08:38:37 - insert into authorities (authority,username) values (?,?)
2024-07-10 08:38:37 - select u1_0.username,u1_0.enabled,u1_0.password from users u1_0
2024-07-10 08:38:37 - select a1_0.username,a1_0.id,a1_0.authority from authorities a1_0 where a1_0.username=?
2024-07-10 08:38:37 - select a1_0.username,a1_0.id,a1_0.authority from authorities a1_0 where a1_0.username=?
2024-07-10 08:38:37 - select a1_0.username,a1_0.id,a1_0.authority from authorities a1_0 where a1_0.username=?
2024-07-10 08:38:37 - select a1_0.username,a1_0.id,a1_0.authority from authorities a1_0 where a1_0.username=?
2024-07-10 08:38:37 - select a1_0.username,a1_0.id,a1_0.authority from authorities a1_0 where a1_0.username=?
2024-07-10 08:38:37 - select a1_0.username,a1_0.id,a1_0.authority from authorities a1_0 where a1_0.username=?
2024-07-10 08:38:37 - select a1_0.username,a1_0.id,a1_0.authority from authorities a1_0 where a1_0.username=?
2024-07-10 08:38:37 - select a1_0.username,a1_0.id,a1_0.authority from authorities a1_0 where a1_0.username=?
2024-07-10 08:38:37 - select a1_0.username,a1_0.id,a1_0.authority from authorities a1_0 where a1_0.username=?
2024-07-10 08:38:37 - select a1_0.username,a1_0.id,a1_0.authority from authorities a1_0 where a1_0.username=?
2024-07-10 08:38:51 - select u1_0.username,a1_0.username,a1_0.id,a1_0.authority,u1_0.enabled,u1_0.password from users u1_0 left join authorities a1_0 on u1_0.username=a1_0.username where u1_0.username=?
2024-07-10 08:38:51 - ID da entidade: teste
2024-07-10 08:38:51 - insert into audit_log (entity,entity_id,new_data,old_data,operation,operation_time,username) values (?,?,?,?,?,?,?)
2024-07-10 08:38:51 - insert into authorities (authority,username) values (?,?)
2024-07-10 08:38:51 - LOGG: Auditoria SAVE registrada para entidade: User
2024-07-10 08:38:51 - select u1_0.username,u1_0.enabled,u1_0.password from users u1_0
2024-07-10 08:38:51 - select a1_0.username,a1_0.id,a1_0.authority from authorities a1_0 where a1_0.username=?
2024-07-10 08:38:51 - select a1_0.username,a1_0.id,a1_0.authority from authorities a1_0 where a1_0.username=?
2024-07-10 08:38:51 - select a1_0.username,a1_0.id,a1_0.authority from authorities a1_0 where a1_0.username=?
2024-07-10 08:38:51 - select a1_0.username,a1_0.id,a1_0.authority from authorities a1_0 where a1_0.username=?
2024-07-10 08:38:51 - select a1_0.username,a1_0.id,a1_0.authority from authorities a1_0 where a1_0.username=?
2024-07-10 08:38:51 - select a1_0.username,a1_0.id,a1_0.authority from authorities a1_0 where a1_0.username=?
2024-07-10 08:38:51 - select a1_0.username,a1_0.id,a1_0.authority from authorities a1_0 where a1_0.username=?
2024-07-10 08:38:51 - select a1_0.username,a1_0.id,a1_0.authority from authorities a1_0 where a1_0.username=?
2024-07-10 08:38:51 - select a1_0.username,a1_0.id,a1_0.authority from authorities a1_0 where a1_0.username=?
2024-07-10 08:38:51 - select a1_0.username,a1_0.id,a1_0.authority from authorities a1_0 where a1_0.username=?
2024-07-10 08:39:11 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0
2024-07-10 08:39:11 - select p1_0.id,p1_0.classificacao,p1_0.codigo,p1_0.embalagem,p1_0.peso,p1_0.produto_id,p1_0.status,p1_0.subvariedade,p1_0.unidade,p1_0.variedade from propriedade p1_0
2024-07-10 08:40:14 - select u1_0.username,a1_0.username,a1_0.id,a1_0.authority,u1_0.enabled,u1_0.password from users u1_0 left join authorities a1_0 on u1_0.username=a1_0.username where u1_0.username=?
2024-07-10 08:40:42 - select u1_0.username,a1_0.username,a1_0.id,a1_0.authority,u1_0.enabled,u1_0.password from users u1_0 left join authorities a1_0 on u1_0.username=a1_0.username where u1_0.username=?
2024-07-10 08:40:42 - ID da entidade: teste
2024-07-10 08:40:42 - insert into audit_log (entity,entity_id,new_data,old_data,operation,operation_time,username) values (?,?,?,?,?,?,?)
2024-07-10 08:40:42 - update users set enabled=?,password=? where username=?
2024-07-10 08:40:42 - LOGG: Auditoria SAVE registrada para entidade: User
2024-07-10 08:41:07 - select u1_0.username,u1_0.enabled,u1_0.password from users u1_0
2024-07-10 08:41:07 - select a1_0.username,a1_0.id,a1_0.authority from authorities a1_0 where a1_0.username=?
2024-07-10 08:41:07 - select a1_0.username,a1_0.id,a1_0.authority from authorities a1_0 where a1_0.username=?
2024-07-10 08:41:07 - select a1_0.username,a1_0.id,a1_0.authority from authorities a1_0 where a1_0.username=?
2024-07-10 08:41:07 - select a1_0.username,a1_0.id,a1_0.authority from authorities a1_0 where a1_0.username=?
2024-07-10 08:41:07 - select a1_0.username,a1_0.id,a1_0.authority from authorities a1_0 where a1_0.username=?
2024-07-10 08:41:07 - select a1_0.username,a1_0.id,a1_0.authority from authorities a1_0 where a1_0.username=?
2024-07-10 08:41:07 - select a1_0.username,a1_0.id,a1_0.authority from authorities a1_0 where a1_0.username=?
2024-07-10 08:41:07 - select a1_0.username,a1_0.id,a1_0.authority from authorities a1_0 where a1_0.username=?
2024-07-10 08:41:07 - select a1_0.username,a1_0.id,a1_0.authority from authorities a1_0 where a1_0.username=?
2024-07-10 08:41:07 - select a1_0.username,a1_0.id,a1_0.authority from authorities a1_0 where a1_0.username=?
2024-07-10 08:41:11 - select u1_0.username,a1_0.username,a1_0.id,a1_0.authority,u1_0.enabled,u1_0.password from users u1_0 left join authorities a1_0 on u1_0.username=a1_0.username where u1_0.username=?
2024-07-10 08:41:11 - ID da entidade: teste
2024-07-10 08:41:11 - insert into audit_log (entity,entity_id,new_data,old_data,operation,operation_time,username) values (?,?,?,?,?,?,?)
2024-07-10 08:41:11 - update users set enabled=?,password=? where username=?
2024-07-10 08:41:11 - LOGG: Auditoria SAVE registrada para entidade: User
2024-07-10 08:41:11 - select u1_0.username,u1_0.enabled,u1_0.password from users u1_0
2024-07-10 08:41:11 - select a1_0.username,a1_0.id,a1_0.authority from authorities a1_0 where a1_0.username=?
2024-07-10 08:41:11 - select a1_0.username,a1_0.id,a1_0.authority from authorities a1_0 where a1_0.username=?
2024-07-10 08:41:11 - select a1_0.username,a1_0.id,a1_0.authority from authorities a1_0 where a1_0.username=?
2024-07-10 08:41:11 - select a1_0.username,a1_0.id,a1_0.authority from authorities a1_0 where a1_0.username=?
2024-07-10 08:41:11 - select a1_0.username,a1_0.id,a1_0.authority from authorities a1_0 where a1_0.username=?
2024-07-10 08:41:11 - select a1_0.username,a1_0.id,a1_0.authority from authorities a1_0 where a1_0.username=?
2024-07-10 08:41:11 - select a1_0.username,a1_0.id,a1_0.authority from authorities a1_0 where a1_0.username=?
2024-07-10 08:41:11 - select a1_0.username,a1_0.id,a1_0.authority from authorities a1_0 where a1_0.username=?
2024-07-10 08:41:11 - select a1_0.username,a1_0.id,a1_0.authority from authorities a1_0 where a1_0.username=?
2024-07-10 08:41:11 - select a1_0.username,a1_0.id,a1_0.authority from authorities a1_0 where a1_0.username=?
2024-07-10 08:41:23 - select u1_0.username,a1_0.username,a1_0.id,a1_0.authority,u1_0.enabled,u1_0.password from users u1_0 left join authorities a1_0 on u1_0.username=a1_0.username where u1_0.username=?
2024-07-10 08:41:23 - ID da entidade: teste
2024-07-10 08:41:23 - insert into audit_log (entity,entity_id,new_data,old_data,operation,operation_time,username) values (?,?,?,?,?,?,?)
2024-07-10 08:41:23 - update users set enabled=?,password=? where username=?
2024-07-10 08:41:23 - LOGG: Auditoria SAVE registrada para entidade: User
2024-07-10 08:41:23 - select u1_0.username,u1_0.enabled,u1_0.password from users u1_0
2024-07-10 08:41:23 - select a1_0.username,a1_0.id,a1_0.authority from authorities a1_0 where a1_0.username=?
2024-07-10 08:41:23 - select a1_0.username,a1_0.id,a1_0.authority from authorities a1_0 where a1_0.username=?
2024-07-10 08:41:23 - select a1_0.username,a1_0.id,a1_0.authority from authorities a1_0 where a1_0.username=?
2024-07-10 08:41:23 - select a1_0.username,a1_0.id,a1_0.authority from authorities a1_0 where a1_0.username=?
2024-07-10 08:41:23 - select a1_0.username,a1_0.id,a1_0.authority from authorities a1_0 where a1_0.username=?
2024-07-10 08:41:23 - select a1_0.username,a1_0.id,a1_0.authority from authorities a1_0 where a1_0.username=?
2024-07-10 08:41:23 - select a1_0.username,a1_0.id,a1_0.authority from authorities a1_0 where a1_0.username=?
2024-07-10 08:41:23 - select a1_0.username,a1_0.id,a1_0.authority from authorities a1_0 where a1_0.username=?
2024-07-10 08:41:23 - select a1_0.username,a1_0.id,a1_0.authority from authorities a1_0 where a1_0.username=?
2024-07-10 08:41:23 - select a1_0.username,a1_0.id,a1_0.authority from authorities a1_0 where a1_0.username=?
2024-07-10 08:42:07 - select m1_0.ibge,m1_0.codigo,m1_0.nome,m1_0.uf from municipio m1_0
2024-07-10 08:42:07 - select m1_0.codigo,m1_0.nome,m1_0.uf from mercado m1_0
2024-07-10 08:42:07 - select p1_0.cnpj,p1_0.nome from permissionario p1_0
2024-07-10 08:42:21 - select n1_0.id,n1_0.cnpj_destinatario,n1_0.cnpj_emissor,n1_0.data_captura,n1_0.data_emissao,n1_0.numero_da_nota from nota n1_0 order by n1_0.data_captura desc offset ? rows fetch first ? rows only
2024-07-10 08:42:24 - select m1_0.ibge,m1_0.codigo,m1_0.nome,m1_0.uf from municipio m1_0
2024-07-10 08:42:24 - select m1_0.codigo,m1_0.nome,m1_0.uf from mercado m1_0
2024-07-10 08:42:24 - select p1_0.cnpj,p1_0.nome from permissionario p1_0
2024-07-10 08:43:07 - select n1_0.id,n1_0.cnpj_destinatario,n1_0.cnpj_emissor,n1_0.data_captura,n1_0.data_emissao,n1_0.numero_da_nota from nota n1_0 order by n1_0.data_captura desc offset ? rows fetch first ? rows only
2024-07-10 09:01:53 - Application shutdown requested.
2024-07-10 09:01:53 - Pausing ProtocolHandler ["http-nio-5001"]
2024-07-10 09:01:53 - Stopping service [Tomcat]
2024-07-10 09:01:53 - Destroying Spring FrameworkServlet 'dispatcherServlet'
2024-07-10 09:01:53 - Stopping ProtocolHandler ["http-nio-5001"]
2024-07-10 09:01:53 - Destroying ProtocolHandler ["http-nio-5001"]
2024-07-10 09:01:53 - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-10 09:01:53 - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@3741ff99] for TypeConfiguration
2024-07-10 09:01:53 - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@624c4e0a] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@3741ff99]
2024-07-10 09:01:53 - HikariPool-1 - Shutdown initiated...
2024-07-10 09:01:53 - HikariPool-1 - Shutdown completed.
2024-07-10 11:09:40 - HV000001: Hibernate Validator 8.0.1.Final
2024-07-10 11:09:40 - Starting SpringThymeleafApplication using Java 17.0.7 with PID 19956 (C:\Users\fernando.correa\Documents\GitHub\workspace2023\app-devceasa01.2003\target\classes started by fernando.correa in C:\Users\fernando.correa\Documents\GitHub\workspace2023\app-devceasa01.2003)
2024-07-10 11:09:40 - No active profile set, falling back to 1 default profile: "default"
2024-07-10 11:09:40 - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-07-10 11:09:40 - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-07-10 11:09:41 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-10 11:09:41 - Finished Spring Data repository scanning in 76 ms. Found 15 JPA repository interfaces.
2024-07-10 11:09:41 - Tomcat initialized with port(s): 5001 (http)
2024-07-10 11:09:41 - Initializing ProtocolHandler ["http-nio-5001"]
2024-07-10 11:09:41 - Starting service [Tomcat]
2024-07-10 11:09:41 - Starting Servlet engine: [Apache Tomcat/10.1.15]
2024-07-10 11:09:41 - Initializing Spring embedded WebApplicationContext
2024-07-10 11:09:41 - Root WebApplicationContext: initialization completed in 1497 ms
2024-07-10 11:09:42 - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-10 11:09:42 - HHH000412: Hibernate ORM core version 6.2.13.Final
2024-07-10 11:09:42 - HHH000406: Using bytecode reflection optimizer
2024-07-10 11:09:42 - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@18d7871
2024-07-10 11:09:42 - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@18d7871
2024-07-10 11:09:42 - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@18d7871
2024-07-10 11:09:42 - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@72fa67b
2024-07-10 11:09:42 - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@72fa67b
2024-07-10 11:09:42 - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@3cefb235
2024-07-10 11:09:42 - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@3cefb235
2024-07-10 11:09:42 - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@1e521dab
2024-07-10 11:09:42 - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@1e521dab
2024-07-10 11:09:42 - Adding type registration byte -> org.hibernate.type.BasicTypeReference@74f6a0e0
2024-07-10 11:09:42 - Adding type registration byte -> org.hibernate.type.BasicTypeReference@74f6a0e0
2024-07-10 11:09:42 - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@74f6a0e0
2024-07-10 11:09:42 - Adding type registration binary -> org.hibernate.type.BasicTypeReference@411e5a8d
2024-07-10 11:09:42 - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@411e5a8d
2024-07-10 11:09:42 - Adding type registration [B -> org.hibernate.type.BasicTypeReference@411e5a8d
2024-07-10 11:09:42 - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@ae13ee
2024-07-10 11:09:42 - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@ae13ee
2024-07-10 11:09:42 - Adding type registration image -> org.hibernate.type.BasicTypeReference@8d57484
2024-07-10 11:09:42 - Adding type registration blob -> org.hibernate.type.BasicTypeReference@3a849f81
2024-07-10 11:09:42 - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@3a849f81
2024-07-10 11:09:42 - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@97d706e
2024-07-10 11:09:42 - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@79bc33cc
2024-07-10 11:09:42 - Adding type registration short -> org.hibernate.type.BasicTypeReference@5aee192b
2024-07-10 11:09:42 - Adding type registration short -> org.hibernate.type.BasicTypeReference@5aee192b
2024-07-10 11:09:42 - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@5aee192b
2024-07-10 11:09:42 - Adding type registration integer -> org.hibernate.type.BasicTypeReference@4408fd60
2024-07-10 11:09:42 - Adding type registration int -> org.hibernate.type.BasicTypeReference@4408fd60
2024-07-10 11:09:42 - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@4408fd60
2024-07-10 11:09:42 - Adding type registration long -> org.hibernate.type.BasicTypeReference@26941b8f
2024-07-10 11:09:42 - Adding type registration long -> org.hibernate.type.BasicTypeReference@26941b8f
2024-07-10 11:09:42 - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@26941b8f
2024-07-10 11:09:42 - Adding type registration float -> org.hibernate.type.BasicTypeReference@3e2e7ec2
2024-07-10 11:09:42 - Adding type registration float -> org.hibernate.type.BasicTypeReference@3e2e7ec2
2024-07-10 11:09:42 - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@3e2e7ec2
2024-07-10 11:09:42 - Adding type registration double -> org.hibernate.type.BasicTypeReference@14231f6d
2024-07-10 11:09:42 - Adding type registration double -> org.hibernate.type.BasicTypeReference@14231f6d
2024-07-10 11:09:42 - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@14231f6d
2024-07-10 11:09:42 - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@17430374
2024-07-10 11:09:42 - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@17430374
2024-07-10 11:09:42 - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@110d3a70
2024-07-10 11:09:42 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@110d3a70
2024-07-10 11:09:42 - Adding type registration character -> org.hibernate.type.BasicTypeReference@5c989efd
2024-07-10 11:09:42 - Adding type registration char -> org.hibernate.type.BasicTypeReference@5c989efd
2024-07-10 11:09:42 - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@5c989efd
2024-07-10 11:09:42 - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@504c2a74
2024-07-10 11:09:42 - Adding type registration string -> org.hibernate.type.BasicTypeReference@5f9bcbaa
2024-07-10 11:09:42 - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@5f9bcbaa
2024-07-10 11:09:42 - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@27bda493
2024-07-10 11:09:42 - Adding type registration characters -> org.hibernate.type.BasicTypeReference@3fcaa9ef
2024-07-10 11:09:42 - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@3fcaa9ef
2024-07-10 11:09:42 - Adding type registration [C -> org.hibernate.type.BasicTypeReference@3fcaa9ef
2024-07-10 11:09:42 - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@e642be8
2024-07-10 11:09:42 - Adding type registration text -> org.hibernate.type.BasicTypeReference@f237715
2024-07-10 11:09:42 - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@45f0c35e
2024-07-10 11:09:42 - Adding type registration clob -> org.hibernate.type.BasicTypeReference@2f9f8fde
2024-07-10 11:09:42 - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@2f9f8fde
2024-07-10 11:09:42 - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@8bdaae
2024-07-10 11:09:42 - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@8bdaae
2024-07-10 11:09:42 - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@14849e75
2024-07-10 11:09:42 - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@572d5588
2024-07-10 11:09:42 - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@41fd1cc
2024-07-10 11:09:42 - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@5a1f254b
2024-07-10 11:09:42 - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@6ad86f4b
2024-07-10 11:09:42 - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@57e4e68d
2024-07-10 11:09:42 - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@2d8fcc0c
2024-07-10 11:09:42 - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@2d8fcc0c
2024-07-10 11:09:42 - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@e19918b
2024-07-10 11:09:42 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@e19918b
2024-07-10 11:09:42 - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@27920534
2024-07-10 11:09:42 - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@27920534
2024-07-10 11:09:42 - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@57325fc5
2024-07-10 11:09:42 - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@57325fc5
2024-07-10 11:09:42 - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@40e1683
2024-07-10 11:09:42 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@40e1683
2024-07-10 11:09:42 - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@46595a40
2024-07-10 11:09:42 - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@71554c1a
2024-07-10 11:09:42 - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@345ce982
2024-07-10 11:09:42 - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@345ce982
2024-07-10 11:09:42 - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@40125b84
2024-07-10 11:09:42 - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4c15929c
2024-07-10 11:09:42 - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@177b3298
2024-07-10 11:09:42 - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@44b8d90c
2024-07-10 11:09:42 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@44b8d90c
2024-07-10 11:09:42 - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@16247464
2024-07-10 11:09:42 - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@7645954e
2024-07-10 11:09:42 - Adding type registration date -> org.hibernate.type.BasicTypeReference@386486ec
2024-07-10 11:09:42 - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@386486ec
2024-07-10 11:09:42 - Adding type registration time -> org.hibernate.type.BasicTypeReference@3a165855
2024-07-10 11:09:42 - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@3a165855
2024-07-10 11:09:42 - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@f249c27
2024-07-10 11:09:42 - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@f249c27
2024-07-10 11:09:42 - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@f249c27
2024-07-10 11:09:42 - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@55919768
2024-07-10 11:09:42 - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@55919768
2024-07-10 11:09:42 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@55919768
2024-07-10 11:09:42 - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@495e28d0
2024-07-10 11:09:42 - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@4182155e
2024-07-10 11:09:42 - Adding type registration instant -> org.hibernate.type.BasicTypeReference@6a6c6ced
2024-07-10 11:09:42 - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@6a6c6ced
2024-07-10 11:09:42 - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@339f8c1f
2024-07-10 11:09:42 - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@339f8c1f
2024-07-10 11:09:42 - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@339f8c1f
2024-07-10 11:09:42 - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@bbf3a14
2024-07-10 11:09:42 - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@5a46f6d8
2024-07-10 11:09:42 - Adding type registration class -> org.hibernate.type.BasicTypeReference@53c4e279
2024-07-10 11:09:42 - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@53c4e279
2024-07-10 11:09:42 - Adding type registration currency -> org.hibernate.type.BasicTypeReference@1cf4636a
2024-07-10 11:09:42 - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@1cf4636a
2024-07-10 11:09:42 - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@1cf4636a
2024-07-10 11:09:42 - Adding type registration locale -> org.hibernate.type.BasicTypeReference@6e69857a
2024-07-10 11:09:42 - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@6e69857a
2024-07-10 11:09:42 - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@3744e59
2024-07-10 11:09:42 - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@3744e59
2024-07-10 11:09:42 - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@77d7a364
2024-07-10 11:09:42 - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@77d7a364
2024-07-10 11:09:42 - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@480761c7
2024-07-10 11:09:42 - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@480761c7
2024-07-10 11:09:42 - Adding type registration url -> org.hibernate.type.BasicTypeReference@6a676fe8
2024-07-10 11:09:42 - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@6a676fe8
2024-07-10 11:09:42 - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@4b40f27b
2024-07-10 11:09:42 - Adding type registration object -> org.hibernate.type.JavaObjectType@57031f75
2024-07-10 11:09:42 - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@57031f75
2024-07-10 11:09:42 - Adding type registration null -> org.hibernate.type.NullType@61e46fc9
2024-07-10 11:09:42 - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@629dd55d
2024-07-10 11:09:42 - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@f393225
2024-07-10 11:09:42 - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@c59d1ab
2024-07-10 11:09:42 - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@4e017dce
2024-07-10 11:09:42 - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@423a7e6e
2024-07-10 11:09:42 - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@4d4c416
2024-07-10 11:09:42 - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@464299ae
2024-07-10 11:09:42 - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@3e873a5
2024-07-10 11:09:42 - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-10 11:09:42 - HikariPool-1 - Starting...
2024-07-10 11:09:42 - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@246d900f
2024-07-10 11:09:42 - HikariPool-1 - Start completed.
2024-07-10 11:09:42 - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-07-10 11:09:42 - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1453b40e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@123f26e4)
2024-07-10 11:09:42 - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2024-07-10 11:09:42 - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-07-10 11:09:42 - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@7a81e55f
2024-07-10 11:09:42 - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@7a81e55f
2024-07-10 11:09:42 - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@57031f75`
2024-07-10 11:09:42 - Adding type registration Duration -> basicType@1(java.time.Duration,2)
2024-07-10 11:09:42 - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
2024-07-10 11:09:42 - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-10 11:09:42 - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-10 11:09:42 - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-10 11:09:42 - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-10 11:09:42 - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-10 11:09:42 - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-10 11:09:42 - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-07-10 11:09:42 - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-07-10 11:09:42 - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-07-10 11:09:42 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@212f89c] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@26b13406]
2024-07-10 11:09:42 - Failed to initialize JPA EntityManagerFactory: Property 'com.flc.springthymeleaf.domain.Nota.portaria' is annotated '@Enumerated' but its type 'com.flc.springthymeleaf.domain.Portaria' is not an enum
2024-07-10 11:09:42 - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Property 'com.flc.springthymeleaf.domain.Nota.portaria' is annotated '@Enumerated' but its type 'com.flc.springthymeleaf.domain.Portaria' is not an enum
2024-07-10 11:09:42 - HikariPool-1 - Shutdown initiated...
2024-07-10 11:09:42 - HikariPool-1 - Shutdown completed.
2024-07-10 11:09:42 - Stopping service [Tomcat]
2024-07-10 11:09:42 - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2024-07-10 11:09:43 - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Property 'com.flc.springthymeleaf.domain.Nota.portaria' is annotated '@Enumerated' but its type 'com.flc.springthymeleaf.domain.Portaria' is not an enum
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1770)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1166)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:940)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:616)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:738)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:440)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at com.flc.springthymeleaf.SpringThymeleafApplication.main(SpringThymeleafApplication.java:10)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: org.hibernate.AnnotationException: Property 'com.flc.springthymeleaf.domain.Nota.portaria' is annotated '@Enumerated' but its type 'com.flc.springthymeleaf.domain.Portaria' is not an enum
	at org.hibernate.boot.model.internal.BasicValueBinder.prepareBasicAttribute(BasicValueBinder.java:803)
	at org.hibernate.boot.model.internal.BasicValueBinder.setType(BasicValueBinder.java:372)
	at org.hibernate.boot.model.internal.PropertyBinder.makePropertyAndValue(PropertyBinder.java:260)
	at org.hibernate.boot.model.internal.PropertyBinder.makePropertyValueAndBind(PropertyBinder.java:296)
	at org.hibernate.boot.model.internal.PropertyBinder.createBasicBinder(PropertyBinder.java:1168)
	at org.hibernate.boot.model.internal.PropertyBinder.bindBasic(PropertyBinder.java:1070)
	at org.hibernate.boot.model.internal.PropertyBinder.bindProperty(PropertyBinder.java:889)
	at org.hibernate.boot.model.internal.PropertyBinder.buildProperty(PropertyBinder.java:787)
	at org.hibernate.boot.model.internal.PropertyBinder.processElementAnnotations(PropertyBinder.java:708)
	at org.hibernate.boot.model.internal.EntityBinder.processIdPropertiesIfNotAlready(EntityBinder.java:967)
	at org.hibernate.boot.model.internal.EntityBinder.handleIdentifier(EntityBinder.java:302)
	at org.hibernate.boot.model.internal.EntityBinder.bindEntityClass(EntityBinder.java:228)
	at org.hibernate.boot.model.internal.AnnotationBinder.bindClass(AnnotationBinder.java:417)
	at org.hibernate.boot.model.source.internal.annotations.AnnotationMetadataSourceProcessorImpl.processEntityHierarchies(AnnotationMetadataSourceProcessorImpl.java:255)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess$1.processEntityHierarchies(MetadataBuildingProcess.java:278)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:321)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1383)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1454)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1817)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766)
	... 21 common frames omitted
2024-07-10 11:11:04 - HV000001: Hibernate Validator 8.0.1.Final
2024-07-10 11:11:04 - Starting SpringThymeleafApplication using Java 17.0.7 with PID 10156 (C:\Users\fernando.correa\Documents\GitHub\workspace2023\app-devceasa01.2003\target\classes started by fernando.correa in C:\Users\fernando.correa\Documents\GitHub\workspace2023\app-devceasa01.2003)
2024-07-10 11:11:04 - No active profile set, falling back to 1 default profile: "default"
2024-07-10 11:11:04 - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-07-10 11:11:04 - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-07-10 11:11:05 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-10 11:11:05 - Finished Spring Data repository scanning in 77 ms. Found 15 JPA repository interfaces.
2024-07-10 11:11:05 - Tomcat initialized with port(s): 5001 (http)
2024-07-10 11:11:05 - Initializing ProtocolHandler ["http-nio-5001"]
2024-07-10 11:11:05 - Starting service [Tomcat]
2024-07-10 11:11:05 - Starting Servlet engine: [Apache Tomcat/10.1.15]
2024-07-10 11:11:06 - Initializing Spring embedded WebApplicationContext
2024-07-10 11:11:06 - Root WebApplicationContext: initialization completed in 1444 ms
2024-07-10 11:11:06 - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-10 11:11:06 - HHH000412: Hibernate ORM core version 6.2.13.Final
2024-07-10 11:11:06 - HHH000406: Using bytecode reflection optimizer
2024-07-10 11:11:06 - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@29ffd355
2024-07-10 11:11:06 - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@29ffd355
2024-07-10 11:11:06 - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@29ffd355
2024-07-10 11:11:06 - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@290b1527
2024-07-10 11:11:06 - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@290b1527
2024-07-10 11:11:06 - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@118f8fcb
2024-07-10 11:11:06 - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@118f8fcb
2024-07-10 11:11:06 - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@63937bff
2024-07-10 11:11:06 - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@63937bff
2024-07-10 11:11:06 - Adding type registration byte -> org.hibernate.type.BasicTypeReference@34a179a3
2024-07-10 11:11:06 - Adding type registration byte -> org.hibernate.type.BasicTypeReference@34a179a3
2024-07-10 11:11:06 - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@34a179a3
2024-07-10 11:11:06 - Adding type registration binary -> org.hibernate.type.BasicTypeReference@50da14fe
2024-07-10 11:11:06 - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@50da14fe
2024-07-10 11:11:06 - Adding type registration [B -> org.hibernate.type.BasicTypeReference@50da14fe
2024-07-10 11:11:06 - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@6f090327
2024-07-10 11:11:06 - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@6f090327
2024-07-10 11:11:06 - Adding type registration image -> org.hibernate.type.BasicTypeReference@3d28f5f3
2024-07-10 11:11:06 - Adding type registration blob -> org.hibernate.type.BasicTypeReference@636c4eff
2024-07-10 11:11:06 - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@636c4eff
2024-07-10 11:11:06 - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@6311db88
2024-07-10 11:11:06 - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@4426fcf6
2024-07-10 11:11:06 - Adding type registration short -> org.hibernate.type.BasicTypeReference@3e5b1eec
2024-07-10 11:11:06 - Adding type registration short -> org.hibernate.type.BasicTypeReference@3e5b1eec
2024-07-10 11:11:06 - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@3e5b1eec
2024-07-10 11:11:06 - Adding type registration integer -> org.hibernate.type.BasicTypeReference@3f41a46e
2024-07-10 11:11:06 - Adding type registration int -> org.hibernate.type.BasicTypeReference@3f41a46e
2024-07-10 11:11:06 - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@3f41a46e
2024-07-10 11:11:06 - Adding type registration long -> org.hibernate.type.BasicTypeReference@5261e595
2024-07-10 11:11:06 - Adding type registration long -> org.hibernate.type.BasicTypeReference@5261e595
2024-07-10 11:11:06 - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@5261e595
2024-07-10 11:11:06 - Adding type registration float -> org.hibernate.type.BasicTypeReference@21d36263
2024-07-10 11:11:06 - Adding type registration float -> org.hibernate.type.BasicTypeReference@21d36263
2024-07-10 11:11:06 - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@21d36263
2024-07-10 11:11:06 - Adding type registration double -> org.hibernate.type.BasicTypeReference@4719b4cb
2024-07-10 11:11:06 - Adding type registration double -> org.hibernate.type.BasicTypeReference@4719b4cb
2024-07-10 11:11:06 - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@4719b4cb
2024-07-10 11:11:06 - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@75c90a92
2024-07-10 11:11:06 - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@75c90a92
2024-07-10 11:11:06 - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@28d914f3
2024-07-10 11:11:06 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@28d914f3
2024-07-10 11:11:06 - Adding type registration character -> org.hibernate.type.BasicTypeReference@12a3bbf1
2024-07-10 11:11:06 - Adding type registration char -> org.hibernate.type.BasicTypeReference@12a3bbf1
2024-07-10 11:11:06 - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@12a3bbf1
2024-07-10 11:11:06 - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@1896ea82
2024-07-10 11:11:06 - Adding type registration string -> org.hibernate.type.BasicTypeReference@25b6fe98
2024-07-10 11:11:06 - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@25b6fe98
2024-07-10 11:11:06 - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@45a80851
2024-07-10 11:11:06 - Adding type registration characters -> org.hibernate.type.BasicTypeReference@4adb4f26
2024-07-10 11:11:06 - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@4adb4f26
2024-07-10 11:11:06 - Adding type registration [C -> org.hibernate.type.BasicTypeReference@4adb4f26
2024-07-10 11:11:06 - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@65367e05
2024-07-10 11:11:06 - Adding type registration text -> org.hibernate.type.BasicTypeReference@77e60e05
2024-07-10 11:11:06 - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@72097a28
2024-07-10 11:11:06 - Adding type registration clob -> org.hibernate.type.BasicTypeReference@623bb930
2024-07-10 11:11:06 - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@623bb930
2024-07-10 11:11:06 - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@342b2524
2024-07-10 11:11:06 - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@342b2524
2024-07-10 11:11:06 - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@737a8382
2024-07-10 11:11:06 - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@4a1b6fff
2024-07-10 11:11:06 - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@7556bdb5
2024-07-10 11:11:06 - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@18b9b43e
2024-07-10 11:11:06 - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@3f785238
2024-07-10 11:11:06 - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@2e0da6bf
2024-07-10 11:11:06 - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@6e760dde
2024-07-10 11:11:06 - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@6e760dde
2024-07-10 11:11:06 - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@3b3b4c6a
2024-07-10 11:11:06 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@3b3b4c6a
2024-07-10 11:11:06 - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@462f20a7
2024-07-10 11:11:06 - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@462f20a7
2024-07-10 11:11:06 - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@5544e83
2024-07-10 11:11:06 - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@5544e83
2024-07-10 11:11:06 - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@5b12ab0a
2024-07-10 11:11:06 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@5b12ab0a
2024-07-10 11:11:06 - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3a2be41e
2024-07-10 11:11:06 - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@53ed1e4
2024-07-10 11:11:06 - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@22b9a796
2024-07-10 11:11:06 - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@22b9a796
2024-07-10 11:11:06 - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@6c3d0230
2024-07-10 11:11:06 - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@95310bd
2024-07-10 11:11:06 - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@7a115182
2024-07-10 11:11:06 - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@15fbdc41
2024-07-10 11:11:06 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@15fbdc41
2024-07-10 11:11:06 - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@1153604c
2024-07-10 11:11:06 - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@144c23
2024-07-10 11:11:06 - Adding type registration date -> org.hibernate.type.BasicTypeReference@70f980e2
2024-07-10 11:11:06 - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@70f980e2
2024-07-10 11:11:06 - Adding type registration time -> org.hibernate.type.BasicTypeReference@3bab5368
2024-07-10 11:11:06 - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@3bab5368
2024-07-10 11:11:06 - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@31701551
2024-07-10 11:11:06 - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@31701551
2024-07-10 11:11:06 - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@31701551
2024-07-10 11:11:06 - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@13273208
2024-07-10 11:11:06 - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@13273208
2024-07-10 11:11:06 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@13273208
2024-07-10 11:11:06 - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@2fe55e1e
2024-07-10 11:11:06 - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@4e347899
2024-07-10 11:11:06 - Adding type registration instant -> org.hibernate.type.BasicTypeReference@7f5f2693
2024-07-10 11:11:06 - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@7f5f2693
2024-07-10 11:11:06 - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@55c2ec02
2024-07-10 11:11:06 - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@55c2ec02
2024-07-10 11:11:06 - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@55c2ec02
2024-07-10 11:11:06 - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@50d25d0a
2024-07-10 11:11:06 - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@3d4f1739
2024-07-10 11:11:06 - Adding type registration class -> org.hibernate.type.BasicTypeReference@3ba2c5bd
2024-07-10 11:11:06 - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@3ba2c5bd
2024-07-10 11:11:06 - Adding type registration currency -> org.hibernate.type.BasicTypeReference@79428c37
2024-07-10 11:11:06 - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@79428c37
2024-07-10 11:11:06 - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@79428c37
2024-07-10 11:11:06 - Adding type registration locale -> org.hibernate.type.BasicTypeReference@3bbaa418
2024-07-10 11:11:06 - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@3bbaa418
2024-07-10 11:11:06 - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@7e098a89
2024-07-10 11:11:06 - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@7e098a89
2024-07-10 11:11:06 - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@532b27d8
2024-07-10 11:11:06 - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@532b27d8
2024-07-10 11:11:06 - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@3ee52abe
2024-07-10 11:11:06 - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@3ee52abe
2024-07-10 11:11:06 - Adding type registration url -> org.hibernate.type.BasicTypeReference@5091d31e
2024-07-10 11:11:06 - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@5091d31e
2024-07-10 11:11:06 - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@62fe5647
2024-07-10 11:11:06 - Adding type registration object -> org.hibernate.type.JavaObjectType@1ee80d1f
2024-07-10 11:11:06 - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@1ee80d1f
2024-07-10 11:11:06 - Adding type registration null -> org.hibernate.type.NullType@356c94a
2024-07-10 11:11:06 - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@4bbfc72a
2024-07-10 11:11:06 - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@207b91e0
2024-07-10 11:11:06 - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@6138398a
2024-07-10 11:11:06 - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@5491a07e
2024-07-10 11:11:06 - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@61a2bb51
2024-07-10 11:11:06 - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@1d2ac214
2024-07-10 11:11:06 - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@3dfe4c52
2024-07-10 11:11:06 - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@64b599c3
2024-07-10 11:11:06 - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-10 11:11:06 - HikariPool-1 - Starting...
2024-07-10 11:11:06 - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@6a51ca5
2024-07-10 11:11:06 - HikariPool-1 - Start completed.
2024-07-10 11:11:06 - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-07-10 11:11:06 - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2072f768) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2da62d7a)
2024-07-10 11:11:06 - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2024-07-10 11:11:06 - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-07-10 11:11:06 - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@3405ddc3
2024-07-10 11:11:06 - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@3405ddc3
2024-07-10 11:11:06 - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@1ee80d1f`
2024-07-10 11:11:06 - Adding type registration Duration -> basicType@1(java.time.Duration,2)
2024-07-10 11:11:06 - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
2024-07-10 11:11:06 - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-10 11:11:06 - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-10 11:11:06 - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-10 11:11:06 - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-10 11:11:06 - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-10 11:11:06 - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-10 11:11:06 - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-07-10 11:11:06 - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-07-10 11:11:06 - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-07-10 11:11:06 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@257a3830] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@3fd9ae97]
2024-07-10 11:11:07 - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-10 11:11:07 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@257a3830] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@4a170753]
2024-07-10 11:11:07 - alter table if exists nota add column faixa_horario varchar(255) not null check (faixa_horario in ('HORARIO_01','HORARIO_02','HORARIO_03'))
2024-07-10 11:11:07 - alter table if exists nota add column local_destino varchar(255) not null check (local_destino in ('GP4','GP2','MLC'))
2024-07-10 11:11:07 - alter table if exists nota add column portaria varchar(255) not null check (portaria in ('PRINCIPAL','FLORES'))
2024-07-10 11:11:07 - alter table if exists nota add column tipo_veiculo varchar(255) not null check (tipo_veiculo in ('UP','CT','LV'))
2024-07-10 11:11:07 - alter table if exists nota add column municipio_codigo varchar(255) not null
2024-07-10 11:11:07 - alter table if exists nota add column permissionario_cnpj varchar(14) not null
2024-07-10 11:11:07 - alter table if exists nota add constraint FKpju8i10mvr180nlyy2qq2s1h1 foreign key (municipio_codigo) references municipio
2024-07-10 11:11:07 - alter table if exists nota add constraint FK53ji4uehv7n3bmyetrvpk4wsy foreign key (permissionario_cnpj) references permissionario
2024-07-10 11:11:07 - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@4a170753] for TypeConfiguration
2024-07-10 11:11:07 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-10 11:11:08 - Hibernate is in classpath; If applicable, HQL parser will be used.
2024-07-10 11:11:09 - No authentication manager set. Reauthentication of users when changing passwords will not be performed.
2024-07-10 11:11:09 - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@4598a451, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7d25506d, org.springframework.security.web.context.SecurityContextHolderFilter@45cc62bd, org.springframework.security.web.header.HeaderWriterFilter@cfd9c44, org.springframework.security.web.authentication.logout.LogoutFilter@2e819eb4, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@73cd72ca, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@69414edb, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@60673a4f, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5a44707, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6763d118, org.springframework.security.web.access.ExceptionTranslationFilter@50f1468e, org.springframework.security.web.access.intercept.AuthorizationFilter@4d3e1b4a]
2024-07-10 11:11:09 - LiveReload server is running on port 35729
2024-07-10 11:11:09 - Starting ProtocolHandler ["http-nio-5001"]
2024-07-10 11:11:09 - Tomcat started on port(s): 5001 (http) with context path ''
2024-07-10 11:11:09 - Started SpringThymeleafApplication in 5.638 seconds (process running for 6.328)
2024-07-10 11:11:19 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-07-10 11:11:19 - Initializing Servlet 'dispatcherServlet'
2024-07-10 11:11:19 - Completed initialization in 1 ms
2024-07-10 11:11:25 - select n1_0.id,n1_0.cnpj_emissor,n1_0.data_captura,n1_0.data_emissao,n1_0.faixa_horario,n1_0.local_destino,n1_0.municipio_codigo,n1_0.numero_da_nota,n1_0.permissionario_cnpj,n1_0.portaria,n1_0.tipo_veiculo from nota n1_0 order by n1_0.data_captura desc offset ? rows fetch first ? rows only
2024-07-10 11:11:25 - [THYMELEAF][http-nio-5001-exec-8] Exception processing template "nota/nota_cadastro": An error happened during template parsing (template: "class path resource [templates/nota/nota_cadastro.html]")
org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/nota/nota_cadastro.html]")
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:241)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1103)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1077)
	at org.thymeleaf.spring6.view.ThymeleafView.renderFragment(ThymeleafView.java:372)
	at org.thymeleaf.spring6.view.ThymeleafView.render(ThymeleafView.java:192)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1415)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1159)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1098)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:168)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.attoparser.ParseException: Exception evaluating SpringEL expression: "portaria.descricao" (template: "nota/nota_cadastro" - line 20, col 82)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:393)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 89 common frames omitted
Caused by: org.thymeleaf.exceptions.TemplateProcessingException: Exception evaluating SpringEL expression: "portaria.descricao" (template: "nota/nota_cadastro" - line 20, col 82)
	at org.thymeleaf.spring6.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:292)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:144)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.OpenElementTag.beHandled(OpenElementTag.java:205)
	at org.thymeleaf.engine.Model.process(Model.java:282)
	at org.thymeleaf.engine.Model.process(Model.java:290)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.processIterationModel(IteratedGatheringModelProcessable.java:368)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.process(IteratedGatheringModelProcessable.java:222)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleCloseElement(ProcessorTemplateHandler.java:1640)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleCloseElementEnd(TemplateHandlerAdapterMarkupHandler.java:388)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:322)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleCloseElementEnd(OutputExpressionInlinePreProcessorHandler.java:220)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:164)
	at org.attoparser.HtmlElement.handleCloseElementEnd(HtmlElement.java:169)
	at org.attoparser.HtmlMarkupHandler.handleCloseElementEnd(HtmlMarkupHandler.java:412)
	at org.attoparser.MarkupEventProcessorHandler.handleCloseElementEnd(MarkupEventProcessorHandler.java:473)
	at org.attoparser.ParsingElementMarkupUtil.parseCloseElement(ParsingElementMarkupUtil.java:201)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:725)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	... 91 common frames omitted
Caused by: org.springframework.expression.spel.SpelEvaluationException: EL1008E: Property or field 'descricao' cannot be found on object of type 'enums.Portaria' - maybe not public or not valid?
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:228)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:111)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:416)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:98)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:114)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:338)
	at org.thymeleaf.spring6.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:265)
	... 116 common frames omitted
2024-07-10 11:11:25 - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/nota/nota_cadastro.html]")] with root cause
org.springframework.expression.spel.SpelEvaluationException: EL1008E: Property or field 'descricao' cannot be found on object of type 'enums.Portaria' - maybe not public or not valid?
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:228)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:111)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:416)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:98)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:114)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:338)
	at org.thymeleaf.spring6.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:265)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:144)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.OpenElementTag.beHandled(OpenElementTag.java:205)
	at org.thymeleaf.engine.Model.process(Model.java:282)
	at org.thymeleaf.engine.Model.process(Model.java:290)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.processIterationModel(IteratedGatheringModelProcessable.java:368)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.process(IteratedGatheringModelProcessable.java:222)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleCloseElement(ProcessorTemplateHandler.java:1640)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleCloseElementEnd(TemplateHandlerAdapterMarkupHandler.java:388)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:322)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleCloseElementEnd(OutputExpressionInlinePreProcessorHandler.java:220)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:164)
	at org.attoparser.HtmlElement.handleCloseElementEnd(HtmlElement.java:169)
	at org.attoparser.HtmlMarkupHandler.handleCloseElementEnd(HtmlMarkupHandler.java:412)
	at org.attoparser.MarkupEventProcessorHandler.handleCloseElementEnd(MarkupEventProcessorHandler.java:473)
	at org.attoparser.ParsingElementMarkupUtil.parseCloseElement(ParsingElementMarkupUtil.java:201)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:725)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1103)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1077)
	at org.thymeleaf.spring6.view.ThymeleafView.renderFragment(ThymeleafView.java:372)
	at org.thymeleaf.spring6.view.ThymeleafView.render(ThymeleafView.java:192)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1415)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1159)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1098)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:168)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2024-07-10 11:13:31 - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2024-07-10 11:13:31 - Pausing ProtocolHandler ["http-nio-5001"]
2024-07-10 11:13:31 - Stopping service [Tomcat]
2024-07-10 11:13:31 - Destroying Spring FrameworkServlet 'dispatcherServlet'
2024-07-10 11:13:31 - Stopping ProtocolHandler ["http-nio-5001"]
2024-07-10 11:13:31 - Destroying ProtocolHandler ["http-nio-5001"]
2024-07-10 11:13:31 - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-10 11:13:31 - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@4a170753] for TypeConfiguration
2024-07-10 11:13:31 - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@457ec6ab] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@4a170753]
2024-07-10 11:13:31 - HikariPool-1 - Shutdown initiated...
2024-07-10 11:13:31 - HikariPool-1 - Shutdown completed.
2024-07-10 11:13:31 - Starting SpringThymeleafApplication using Java 17.0.7 with PID 10156 (C:\Users\fernando.correa\Documents\GitHub\workspace2023\app-devceasa01.2003\target\classes started by fernando.correa in C:\Users\fernando.correa\Documents\GitHub\workspace2023\app-devceasa01.2003)
2024-07-10 11:13:31 - No active profile set, falling back to 1 default profile: "default"
2024-07-10 11:13:32 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-10 11:13:32 - Finished Spring Data repository scanning in 38 ms. Found 15 JPA repository interfaces.
2024-07-10 11:13:32 - Tomcat initialized with port(s): 5001 (http)
2024-07-10 11:13:32 - Initializing ProtocolHandler ["http-nio-5001"]
2024-07-10 11:13:32 - Starting service [Tomcat]
2024-07-10 11:13:32 - Starting Servlet engine: [Apache Tomcat/10.1.15]
2024-07-10 11:13:32 - Initializing Spring embedded WebApplicationContext
2024-07-10 11:13:32 - Root WebApplicationContext: initialization completed in 409 ms
2024-07-10 11:13:32 - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-10 11:13:32 - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@29ffd355
2024-07-10 11:13:32 - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@29ffd355
2024-07-10 11:13:32 - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@29ffd355
2024-07-10 11:13:32 - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@290b1527
2024-07-10 11:13:32 - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@290b1527
2024-07-10 11:13:32 - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@118f8fcb
2024-07-10 11:13:32 - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@118f8fcb
2024-07-10 11:13:32 - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@63937bff
2024-07-10 11:13:32 - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@63937bff
2024-07-10 11:13:32 - Adding type registration byte -> org.hibernate.type.BasicTypeReference@34a179a3
2024-07-10 11:13:32 - Adding type registration byte -> org.hibernate.type.BasicTypeReference@34a179a3
2024-07-10 11:13:32 - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@34a179a3
2024-07-10 11:13:32 - Adding type registration binary -> org.hibernate.type.BasicTypeReference@50da14fe
2024-07-10 11:13:32 - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@50da14fe
2024-07-10 11:13:32 - Adding type registration [B -> org.hibernate.type.BasicTypeReference@50da14fe
2024-07-10 11:13:32 - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@6f090327
2024-07-10 11:13:32 - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@6f090327
2024-07-10 11:13:32 - Adding type registration image -> org.hibernate.type.BasicTypeReference@3d28f5f3
2024-07-10 11:13:32 - Adding type registration blob -> org.hibernate.type.BasicTypeReference@636c4eff
2024-07-10 11:13:32 - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@636c4eff
2024-07-10 11:13:32 - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@6311db88
2024-07-10 11:13:32 - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@4426fcf6
2024-07-10 11:13:32 - Adding type registration short -> org.hibernate.type.BasicTypeReference@3e5b1eec
2024-07-10 11:13:32 - Adding type registration short -> org.hibernate.type.BasicTypeReference@3e5b1eec
2024-07-10 11:13:32 - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@3e5b1eec
2024-07-10 11:13:32 - Adding type registration integer -> org.hibernate.type.BasicTypeReference@3f41a46e
2024-07-10 11:13:32 - Adding type registration int -> org.hibernate.type.BasicTypeReference@3f41a46e
2024-07-10 11:13:32 - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@3f41a46e
2024-07-10 11:13:32 - Adding type registration long -> org.hibernate.type.BasicTypeReference@5261e595
2024-07-10 11:13:32 - Adding type registration long -> org.hibernate.type.BasicTypeReference@5261e595
2024-07-10 11:13:32 - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@5261e595
2024-07-10 11:13:32 - Adding type registration float -> org.hibernate.type.BasicTypeReference@21d36263
2024-07-10 11:13:32 - Adding type registration float -> org.hibernate.type.BasicTypeReference@21d36263
2024-07-10 11:13:32 - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@21d36263
2024-07-10 11:13:32 - Adding type registration double -> org.hibernate.type.BasicTypeReference@4719b4cb
2024-07-10 11:13:32 - Adding type registration double -> org.hibernate.type.BasicTypeReference@4719b4cb
2024-07-10 11:13:32 - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@4719b4cb
2024-07-10 11:13:32 - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@75c90a92
2024-07-10 11:13:32 - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@75c90a92
2024-07-10 11:13:32 - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@28d914f3
2024-07-10 11:13:32 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@28d914f3
2024-07-10 11:13:32 - Adding type registration character -> org.hibernate.type.BasicTypeReference@12a3bbf1
2024-07-10 11:13:32 - Adding type registration char -> org.hibernate.type.BasicTypeReference@12a3bbf1
2024-07-10 11:13:32 - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@12a3bbf1
2024-07-10 11:13:32 - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@1896ea82
2024-07-10 11:13:32 - Adding type registration string -> org.hibernate.type.BasicTypeReference@25b6fe98
2024-07-10 11:13:32 - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@25b6fe98
2024-07-10 11:13:32 - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@45a80851
2024-07-10 11:13:32 - Adding type registration characters -> org.hibernate.type.BasicTypeReference@4adb4f26
2024-07-10 11:13:32 - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@4adb4f26
2024-07-10 11:13:32 - Adding type registration [C -> org.hibernate.type.BasicTypeReference@4adb4f26
2024-07-10 11:13:32 - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@65367e05
2024-07-10 11:13:32 - Adding type registration text -> org.hibernate.type.BasicTypeReference@77e60e05
2024-07-10 11:13:32 - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@72097a28
2024-07-10 11:13:32 - Adding type registration clob -> org.hibernate.type.BasicTypeReference@623bb930
2024-07-10 11:13:32 - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@623bb930
2024-07-10 11:13:32 - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@342b2524
2024-07-10 11:13:32 - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@342b2524
2024-07-10 11:13:32 - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@737a8382
2024-07-10 11:13:32 - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@4a1b6fff
2024-07-10 11:13:32 - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@7556bdb5
2024-07-10 11:13:32 - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@18b9b43e
2024-07-10 11:13:32 - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@3f785238
2024-07-10 11:13:32 - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@2e0da6bf
2024-07-10 11:13:32 - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@6e760dde
2024-07-10 11:13:32 - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@6e760dde
2024-07-10 11:13:32 - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@3b3b4c6a
2024-07-10 11:13:32 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@3b3b4c6a
2024-07-10 11:13:32 - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@462f20a7
2024-07-10 11:13:32 - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@462f20a7
2024-07-10 11:13:32 - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@5544e83
2024-07-10 11:13:32 - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@5544e83
2024-07-10 11:13:32 - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@5b12ab0a
2024-07-10 11:13:32 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@5b12ab0a
2024-07-10 11:13:32 - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3a2be41e
2024-07-10 11:13:32 - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@53ed1e4
2024-07-10 11:13:32 - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@22b9a796
2024-07-10 11:13:32 - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@22b9a796
2024-07-10 11:13:32 - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@6c3d0230
2024-07-10 11:13:32 - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@95310bd
2024-07-10 11:13:32 - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@7a115182
2024-07-10 11:13:32 - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@15fbdc41
2024-07-10 11:13:32 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@15fbdc41
2024-07-10 11:13:32 - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@1153604c
2024-07-10 11:13:32 - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@144c23
2024-07-10 11:13:32 - Adding type registration date -> org.hibernate.type.BasicTypeReference@70f980e2
2024-07-10 11:13:32 - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@70f980e2
2024-07-10 11:13:32 - Adding type registration time -> org.hibernate.type.BasicTypeReference@3bab5368
2024-07-10 11:13:32 - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@3bab5368
2024-07-10 11:13:32 - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@31701551
2024-07-10 11:13:32 - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@31701551
2024-07-10 11:13:32 - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@31701551
2024-07-10 11:13:32 - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@13273208
2024-07-10 11:13:32 - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@13273208
2024-07-10 11:13:32 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@13273208
2024-07-10 11:13:32 - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@2fe55e1e
2024-07-10 11:13:32 - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@4e347899
2024-07-10 11:13:32 - Adding type registration instant -> org.hibernate.type.BasicTypeReference@7f5f2693
2024-07-10 11:13:32 - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@7f5f2693
2024-07-10 11:13:32 - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@55c2ec02
2024-07-10 11:13:32 - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@55c2ec02
2024-07-10 11:13:32 - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@55c2ec02
2024-07-10 11:13:32 - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@50d25d0a
2024-07-10 11:13:32 - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@3d4f1739
2024-07-10 11:13:32 - Adding type registration class -> org.hibernate.type.BasicTypeReference@3ba2c5bd
2024-07-10 11:13:32 - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@3ba2c5bd
2024-07-10 11:13:32 - Adding type registration currency -> org.hibernate.type.BasicTypeReference@79428c37
2024-07-10 11:13:32 - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@79428c37
2024-07-10 11:13:32 - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@79428c37
2024-07-10 11:13:32 - Adding type registration locale -> org.hibernate.type.BasicTypeReference@3bbaa418
2024-07-10 11:13:32 - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@3bbaa418
2024-07-10 11:13:32 - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@7e098a89
2024-07-10 11:13:32 - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@7e098a89
2024-07-10 11:13:32 - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@532b27d8
2024-07-10 11:13:32 - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@532b27d8
2024-07-10 11:13:32 - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@3ee52abe
2024-07-10 11:13:32 - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@3ee52abe
2024-07-10 11:13:32 - Adding type registration url -> org.hibernate.type.BasicTypeReference@5091d31e
2024-07-10 11:13:32 - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@5091d31e
2024-07-10 11:13:32 - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@62fe5647
2024-07-10 11:13:32 - Adding type registration object -> org.hibernate.type.JavaObjectType@1ee80d1f
2024-07-10 11:13:32 - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@1ee80d1f
2024-07-10 11:13:32 - Adding type registration null -> org.hibernate.type.NullType@356c94a
2024-07-10 11:13:32 - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@5f03c731
2024-07-10 11:13:32 - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@1786d7fe
2024-07-10 11:13:32 - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@1f7d93bb
2024-07-10 11:13:32 - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@7d523487
2024-07-10 11:13:32 - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@3c294e53
2024-07-10 11:13:32 - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@1d31570f
2024-07-10 11:13:32 - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@6ea2ff59
2024-07-10 11:13:32 - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@2b80806
2024-07-10 11:13:32 - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-10 11:13:32 - HikariPool-2 - Starting...
2024-07-10 11:13:32 - HikariPool-2 - Added connection org.postgresql.jdbc.PgConnection@1c6005ff
2024-07-10 11:13:32 - HikariPool-2 - Start completed.
2024-07-10 11:13:32 - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-07-10 11:13:32 - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6b67afd8) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7f817c0d)
2024-07-10 11:13:32 - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2024-07-10 11:13:32 - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-07-10 11:13:32 - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@8a0507
2024-07-10 11:13:32 - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@8a0507
2024-07-10 11:13:32 - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@1ee80d1f`
2024-07-10 11:13:32 - Adding type registration Duration -> basicType@20(java.time.Duration,2)
2024-07-10 11:13:32 - Adding type registration java.time.Duration -> basicType@20(java.time.Duration,2)
2024-07-10 11:13:32 - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@21(java.time.OffsetDateTime,3003)
2024-07-10 11:13:32 - Adding type registration OffsetDateTime -> basicType@21(java.time.OffsetDateTime,3003)
2024-07-10 11:13:32 - Adding type registration java.time.OffsetDateTime -> basicType@21(java.time.OffsetDateTime,3003)
2024-07-10 11:13:32 - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@22(java.time.ZonedDateTime,3003)
2024-07-10 11:13:32 - Adding type registration ZonedDateTime -> basicType@22(java.time.ZonedDateTime,3003)
2024-07-10 11:13:32 - Adding type registration java.time.ZonedDateTime -> basicType@22(java.time.ZonedDateTime,3003)
2024-07-10 11:13:32 - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@23(java.time.OffsetTime,3007)
2024-07-10 11:13:32 - Adding type registration OffsetTime -> basicType@23(java.time.OffsetTime,3007)
2024-07-10 11:13:32 - Adding type registration java.time.OffsetTime -> basicType@23(java.time.OffsetTime,3007)
2024-07-10 11:13:32 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3ed4c2ce] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@689bb3a3]
2024-07-10 11:13:32 - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-10 11:13:32 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3ed4c2ce] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@8d8aa29]
2024-07-10 11:13:32 - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@8d8aa29] for TypeConfiguration
2024-07-10 11:13:32 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-10 11:13:33 - No authentication manager set. Reauthentication of users when changing passwords will not be performed.
2024-07-10 11:13:33 - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@130a0187, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@56f36c83, org.springframework.security.web.context.SecurityContextHolderFilter@637e1877, org.springframework.security.web.header.HeaderWriterFilter@200b34f6, org.springframework.security.web.authentication.logout.LogoutFilter@76d6b31f, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@6e6a0b8f, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@2d670316, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@70170733, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1cad8980, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@68fb23a1, org.springframework.security.web.access.ExceptionTranslationFilter@6321fef7, org.springframework.security.web.access.intercept.AuthorizationFilter@4ea163b6]
2024-07-10 11:13:33 - LiveReload server is running on port 35729
2024-07-10 11:13:33 - Starting ProtocolHandler ["http-nio-5001"]
2024-07-10 11:13:33 - Tomcat started on port(s): 5001 (http) with context path ''
2024-07-10 11:13:33 - Started SpringThymeleafApplication in 1.671 seconds (process running for 150.227)
2024-07-10 11:13:33 - Condition evaluation unchanged
2024-07-10 11:13:39 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-07-10 11:13:39 - Initializing Servlet 'dispatcherServlet'
2024-07-10 11:13:39 - Completed initialization in 2 ms
2024-07-10 11:13:41 - select n1_0.id,n1_0.cnpj_emissor,n1_0.data_captura,n1_0.data_emissao,n1_0.faixa_horario,n1_0.local_destino,n1_0.municipio_codigo,n1_0.numero_da_nota,n1_0.permissionario_cnpj,n1_0.portaria,n1_0.tipo_veiculo from nota n1_0 order by n1_0.data_captura desc offset ? rows fetch first ? rows only
2024-07-10 11:13:41 - [THYMELEAF][http-nio-5001-exec-5] Exception processing template "nota/nota_cadastro": An error happened during template parsing (template: "class path resource [templates/nota/nota_cadastro.html]")
org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/nota/nota_cadastro.html]")
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:241)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1103)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1077)
	at org.thymeleaf.spring6.view.ThymeleafView.renderFragment(ThymeleafView.java:372)
	at org.thymeleaf.spring6.view.ThymeleafView.render(ThymeleafView.java:192)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1415)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1159)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1098)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:168)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.attoparser.ParseException: Error during execution of processor 'org.thymeleaf.spring6.processor.SpringInputGeneralFieldTagProcessor' (template: "nota/nota_cadastro" - line 74, col 54)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:393)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 89 common frames omitted
Caused by: org.thymeleaf.exceptions.TemplateProcessingException: Error during execution of processor 'org.thymeleaf.spring6.processor.SpringInputGeneralFieldTagProcessor' (template: "nota/nota_cadastro" - line 74, col 54)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:117)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleStandaloneElement(ProcessorTemplateHandler.java:918)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleStandaloneElementEnd(TemplateHandlerAdapterMarkupHandler.java:260)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleStandaloneElementEnd(InlinedOutputExpressionMarkupHandler.java:256)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleStandaloneElementEnd(OutputExpressionInlinePreProcessorHandler.java:169)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleStandaloneElementEnd(InlinedOutputExpressionMarkupHandler.java:104)
	at org.attoparser.HtmlElement.handleStandaloneElementEnd(HtmlElement.java:79)
	at org.attoparser.HtmlMarkupHandler.handleStandaloneElementEnd(HtmlMarkupHandler.java:241)
	at org.attoparser.MarkupEventProcessorHandler.handleStandaloneElementEnd(MarkupEventProcessorHandler.java:327)
	at org.attoparser.ParsingElementMarkupUtil.parseStandaloneElement(ParsingElementMarkupUtil.java:96)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:706)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	... 91 common frames omitted
Caused by: org.springframework.beans.NotReadablePropertyException: Invalid property 'cnpjDestinatario' of bean class [com.flc.springthymeleaf.domain.Nota]: Bean property 'cnpjDestinatario' is not readable or has an invalid getter method: Does the return type of the getter match the parameter type of the setter?
	at org.springframework.beans.AbstractNestablePropertyAccessor.getPropertyValue(AbstractNestablePropertyAccessor.java:626)
	at org.springframework.beans.AbstractNestablePropertyAccessor.getPropertyValue(AbstractNestablePropertyAccessor.java:616)
	at org.springframework.validation.AbstractPropertyBindingResult.getActualFieldValue(AbstractPropertyBindingResult.java:104)
	at org.springframework.validation.AbstractBindingResult.getFieldValue(AbstractBindingResult.java:225)
	at org.springframework.web.servlet.support.BindStatus.<init>(BindStatus.java:129)
	at org.springframework.web.servlet.support.RequestContext.getBindStatus(RequestContext.java:926)
	at org.thymeleaf.spring6.context.webmvc.SpringWebMvcThymeleafRequestContext.getBindStatus(SpringWebMvcThymeleafRequestContext.java:232)
	at org.thymeleaf.spring6.util.FieldUtils.getBindStatusFromParsedExpression(FieldUtils.java:306)
	at org.thymeleaf.spring6.util.FieldUtils.getBindStatus(FieldUtils.java:253)
	at org.thymeleaf.spring6.util.FieldUtils.getBindStatus(FieldUtils.java:227)
	at org.thymeleaf.spring6.processor.AbstractSpringFieldTagProcessor.doProcess(AbstractSpringFieldTagProcessor.java:174)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	... 104 common frames omitted
2024-07-10 11:13:41 - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/nota/nota_cadastro.html]")] with root cause
org.springframework.beans.NotReadablePropertyException: Invalid property 'cnpjDestinatario' of bean class [com.flc.springthymeleaf.domain.Nota]: Bean property 'cnpjDestinatario' is not readable or has an invalid getter method: Does the return type of the getter match the parameter type of the setter?
	at org.springframework.beans.AbstractNestablePropertyAccessor.getPropertyValue(AbstractNestablePropertyAccessor.java:626)
	at org.springframework.beans.AbstractNestablePropertyAccessor.getPropertyValue(AbstractNestablePropertyAccessor.java:616)
	at org.springframework.validation.AbstractPropertyBindingResult.getActualFieldValue(AbstractPropertyBindingResult.java:104)
	at org.springframework.validation.AbstractBindingResult.getFieldValue(AbstractBindingResult.java:225)
	at org.springframework.web.servlet.support.BindStatus.<init>(BindStatus.java:129)
	at org.springframework.web.servlet.support.RequestContext.getBindStatus(RequestContext.java:926)
	at org.thymeleaf.spring6.context.webmvc.SpringWebMvcThymeleafRequestContext.getBindStatus(SpringWebMvcThymeleafRequestContext.java:232)
	at org.thymeleaf.spring6.util.FieldUtils.getBindStatusFromParsedExpression(FieldUtils.java:306)
	at org.thymeleaf.spring6.util.FieldUtils.getBindStatus(FieldUtils.java:253)
	at org.thymeleaf.spring6.util.FieldUtils.getBindStatus(FieldUtils.java:227)
	at org.thymeleaf.spring6.processor.AbstractSpringFieldTagProcessor.doProcess(AbstractSpringFieldTagProcessor.java:174)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleStandaloneElement(ProcessorTemplateHandler.java:918)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleStandaloneElementEnd(TemplateHandlerAdapterMarkupHandler.java:260)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleStandaloneElementEnd(InlinedOutputExpressionMarkupHandler.java:256)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleStandaloneElementEnd(OutputExpressionInlinePreProcessorHandler.java:169)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleStandaloneElementEnd(InlinedOutputExpressionMarkupHandler.java:104)
	at org.attoparser.HtmlElement.handleStandaloneElementEnd(HtmlElement.java:79)
	at org.attoparser.HtmlMarkupHandler.handleStandaloneElementEnd(HtmlMarkupHandler.java:241)
	at org.attoparser.MarkupEventProcessorHandler.handleStandaloneElementEnd(MarkupEventProcessorHandler.java:327)
	at org.attoparser.ParsingElementMarkupUtil.parseStandaloneElement(ParsingElementMarkupUtil.java:96)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:706)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1103)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1077)
	at org.thymeleaf.spring6.view.ThymeleafView.renderFragment(ThymeleafView.java:372)
	at org.thymeleaf.spring6.view.ThymeleafView.render(ThymeleafView.java:192)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1415)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1159)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1098)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:168)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2024-07-10 11:15:56 - select n1_0.id,n1_0.cnpj_emissor,n1_0.data_captura,n1_0.data_emissao,n1_0.faixa_horario,n1_0.local_destino,n1_0.municipio_codigo,n1_0.numero_da_nota,n1_0.permissionario_cnpj,n1_0.portaria,n1_0.tipo_veiculo from nota n1_0 order by n1_0.data_captura desc offset ? rows fetch first ? rows only
2024-07-10 12:25:40 - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2024-07-10 12:25:40 - Pausing ProtocolHandler ["http-nio-5001"]
2024-07-10 12:25:40 - Stopping service [Tomcat]
2024-07-10 12:25:40 - Destroying Spring FrameworkServlet 'dispatcherServlet'
2024-07-10 12:25:40 - Stopping ProtocolHandler ["http-nio-5001"]
2024-07-10 12:25:40 - Destroying ProtocolHandler ["http-nio-5001"]
2024-07-10 12:25:40 - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-10 12:25:40 - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@8d8aa29] for TypeConfiguration
2024-07-10 12:25:40 - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@466371f] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@8d8aa29]
2024-07-10 12:25:40 - HikariPool-2 - Shutdown initiated...
2024-07-10 12:25:40 - HikariPool-2 - Shutdown completed.
2024-07-10 12:25:40 - Starting SpringThymeleafApplication using Java 17.0.7 with PID 10156 (C:\Users\fernando.correa\Documents\GitHub\workspace2023\app-devceasa01.2003\target\classes started by fernando.correa in C:\Users\fernando.correa\Documents\GitHub\workspace2023\app-devceasa01.2003)
2024-07-10 12:25:40 - No active profile set, falling back to 1 default profile: "default"
2024-07-10 12:25:40 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-10 12:25:40 - Finished Spring Data repository scanning in 48 ms. Found 15 JPA repository interfaces.
2024-07-10 12:25:41 - Tomcat initialized with port(s): 5001 (http)
2024-07-10 12:25:41 - Initializing ProtocolHandler ["http-nio-5001"]
2024-07-10 12:25:41 - Starting service [Tomcat]
2024-07-10 12:25:41 - Starting Servlet engine: [Apache Tomcat/10.1.15]
2024-07-10 12:25:41 - Initializing Spring embedded WebApplicationContext
2024-07-10 12:25:41 - Root WebApplicationContext: initialization completed in 652 ms
2024-07-10 12:25:41 - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-10 12:25:41 - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@29ffd355
2024-07-10 12:25:41 - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@29ffd355
2024-07-10 12:25:41 - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@29ffd355
2024-07-10 12:25:41 - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@290b1527
2024-07-10 12:25:41 - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@290b1527
2024-07-10 12:25:41 - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@118f8fcb
2024-07-10 12:25:41 - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@118f8fcb
2024-07-10 12:25:41 - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@63937bff
2024-07-10 12:25:41 - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@63937bff
2024-07-10 12:25:41 - Adding type registration byte -> org.hibernate.type.BasicTypeReference@34a179a3
2024-07-10 12:25:41 - Adding type registration byte -> org.hibernate.type.BasicTypeReference@34a179a3
2024-07-10 12:25:41 - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@34a179a3
2024-07-10 12:25:41 - Adding type registration binary -> org.hibernate.type.BasicTypeReference@50da14fe
2024-07-10 12:25:41 - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@50da14fe
2024-07-10 12:25:41 - Adding type registration [B -> org.hibernate.type.BasicTypeReference@50da14fe
2024-07-10 12:25:41 - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@6f090327
2024-07-10 12:25:41 - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@6f090327
2024-07-10 12:25:41 - Adding type registration image -> org.hibernate.type.BasicTypeReference@3d28f5f3
2024-07-10 12:25:41 - Adding type registration blob -> org.hibernate.type.BasicTypeReference@636c4eff
2024-07-10 12:25:41 - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@636c4eff
2024-07-10 12:25:41 - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@6311db88
2024-07-10 12:25:41 - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@4426fcf6
2024-07-10 12:25:41 - Adding type registration short -> org.hibernate.type.BasicTypeReference@3e5b1eec
2024-07-10 12:25:41 - Adding type registration short -> org.hibernate.type.BasicTypeReference@3e5b1eec
2024-07-10 12:25:41 - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@3e5b1eec
2024-07-10 12:25:41 - Adding type registration integer -> org.hibernate.type.BasicTypeReference@3f41a46e
2024-07-10 12:25:41 - Adding type registration int -> org.hibernate.type.BasicTypeReference@3f41a46e
2024-07-10 12:25:41 - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@3f41a46e
2024-07-10 12:25:41 - Adding type registration long -> org.hibernate.type.BasicTypeReference@5261e595
2024-07-10 12:25:41 - Adding type registration long -> org.hibernate.type.BasicTypeReference@5261e595
2024-07-10 12:25:41 - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@5261e595
2024-07-10 12:25:41 - Adding type registration float -> org.hibernate.type.BasicTypeReference@21d36263
2024-07-10 12:25:41 - Adding type registration float -> org.hibernate.type.BasicTypeReference@21d36263
2024-07-10 12:25:41 - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@21d36263
2024-07-10 12:25:41 - Adding type registration double -> org.hibernate.type.BasicTypeReference@4719b4cb
2024-07-10 12:25:41 - Adding type registration double -> org.hibernate.type.BasicTypeReference@4719b4cb
2024-07-10 12:25:41 - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@4719b4cb
2024-07-10 12:25:41 - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@75c90a92
2024-07-10 12:25:41 - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@75c90a92
2024-07-10 12:25:41 - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@28d914f3
2024-07-10 12:25:41 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@28d914f3
2024-07-10 12:25:41 - Adding type registration character -> org.hibernate.type.BasicTypeReference@12a3bbf1
2024-07-10 12:25:41 - Adding type registration char -> org.hibernate.type.BasicTypeReference@12a3bbf1
2024-07-10 12:25:41 - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@12a3bbf1
2024-07-10 12:25:41 - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@1896ea82
2024-07-10 12:25:41 - Adding type registration string -> org.hibernate.type.BasicTypeReference@25b6fe98
2024-07-10 12:25:41 - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@25b6fe98
2024-07-10 12:25:41 - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@45a80851
2024-07-10 12:25:41 - Adding type registration characters -> org.hibernate.type.BasicTypeReference@4adb4f26
2024-07-10 12:25:41 - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@4adb4f26
2024-07-10 12:25:41 - Adding type registration [C -> org.hibernate.type.BasicTypeReference@4adb4f26
2024-07-10 12:25:41 - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@65367e05
2024-07-10 12:25:41 - Adding type registration text -> org.hibernate.type.BasicTypeReference@77e60e05
2024-07-10 12:25:41 - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@72097a28
2024-07-10 12:25:41 - Adding type registration clob -> org.hibernate.type.BasicTypeReference@623bb930
2024-07-10 12:25:41 - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@623bb930
2024-07-10 12:25:41 - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@342b2524
2024-07-10 12:25:41 - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@342b2524
2024-07-10 12:25:41 - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@737a8382
2024-07-10 12:25:41 - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@4a1b6fff
2024-07-10 12:25:41 - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@7556bdb5
2024-07-10 12:25:41 - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@18b9b43e
2024-07-10 12:25:41 - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@3f785238
2024-07-10 12:25:41 - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@2e0da6bf
2024-07-10 12:25:41 - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@6e760dde
2024-07-10 12:25:41 - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@6e760dde
2024-07-10 12:25:41 - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@3b3b4c6a
2024-07-10 12:25:41 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@3b3b4c6a
2024-07-10 12:25:41 - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@462f20a7
2024-07-10 12:25:41 - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@462f20a7
2024-07-10 12:25:41 - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@5544e83
2024-07-10 12:25:41 - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@5544e83
2024-07-10 12:25:41 - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@5b12ab0a
2024-07-10 12:25:41 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@5b12ab0a
2024-07-10 12:25:41 - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3a2be41e
2024-07-10 12:25:41 - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@53ed1e4
2024-07-10 12:25:41 - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@22b9a796
2024-07-10 12:25:41 - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@22b9a796
2024-07-10 12:25:41 - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@6c3d0230
2024-07-10 12:25:41 - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@95310bd
2024-07-10 12:25:41 - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@7a115182
2024-07-10 12:25:41 - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@15fbdc41
2024-07-10 12:25:41 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@15fbdc41
2024-07-10 12:25:41 - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@1153604c
2024-07-10 12:25:41 - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@144c23
2024-07-10 12:25:41 - Adding type registration date -> org.hibernate.type.BasicTypeReference@70f980e2
2024-07-10 12:25:41 - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@70f980e2
2024-07-10 12:25:41 - Adding type registration time -> org.hibernate.type.BasicTypeReference@3bab5368
2024-07-10 12:25:41 - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@3bab5368
2024-07-10 12:25:41 - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@31701551
2024-07-10 12:25:41 - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@31701551
2024-07-10 12:25:41 - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@31701551
2024-07-10 12:25:41 - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@13273208
2024-07-10 12:25:41 - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@13273208
2024-07-10 12:25:41 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@13273208
2024-07-10 12:25:41 - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@2fe55e1e
2024-07-10 12:25:41 - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@4e347899
2024-07-10 12:25:41 - Adding type registration instant -> org.hibernate.type.BasicTypeReference@7f5f2693
2024-07-10 12:25:41 - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@7f5f2693
2024-07-10 12:25:41 - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@55c2ec02
2024-07-10 12:25:41 - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@55c2ec02
2024-07-10 12:25:41 - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@55c2ec02
2024-07-10 12:25:41 - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@50d25d0a
2024-07-10 12:25:41 - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@3d4f1739
2024-07-10 12:25:41 - Adding type registration class -> org.hibernate.type.BasicTypeReference@3ba2c5bd
2024-07-10 12:25:41 - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@3ba2c5bd
2024-07-10 12:25:41 - Adding type registration currency -> org.hibernate.type.BasicTypeReference@79428c37
2024-07-10 12:25:41 - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@79428c37
2024-07-10 12:25:41 - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@79428c37
2024-07-10 12:25:41 - Adding type registration locale -> org.hibernate.type.BasicTypeReference@3bbaa418
2024-07-10 12:25:41 - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@3bbaa418
2024-07-10 12:25:41 - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@7e098a89
2024-07-10 12:25:41 - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@7e098a89
2024-07-10 12:25:41 - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@532b27d8
2024-07-10 12:25:41 - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@532b27d8
2024-07-10 12:25:41 - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@3ee52abe
2024-07-10 12:25:41 - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@3ee52abe
2024-07-10 12:25:41 - Adding type registration url -> org.hibernate.type.BasicTypeReference@5091d31e
2024-07-10 12:25:41 - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@5091d31e
2024-07-10 12:25:41 - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@62fe5647
2024-07-10 12:25:41 - Adding type registration object -> org.hibernate.type.JavaObjectType@1ee80d1f
2024-07-10 12:25:41 - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@1ee80d1f
2024-07-10 12:25:41 - Adding type registration null -> org.hibernate.type.NullType@356c94a
2024-07-10 12:25:41 - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@9355df
2024-07-10 12:25:41 - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@77efcd1a
2024-07-10 12:25:41 - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@5204355d
2024-07-10 12:25:41 - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@5e95813c
2024-07-10 12:25:41 - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@44320a9c
2024-07-10 12:25:41 - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@4d3c981d
2024-07-10 12:25:41 - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@3ee1f23a
2024-07-10 12:25:41 - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@4c0f18bb
2024-07-10 12:25:41 - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-10 12:25:41 - HikariPool-3 - Starting...
2024-07-10 12:25:41 - HikariPool-3 - Added connection org.postgresql.jdbc.PgConnection@6f14b22c
2024-07-10 12:25:41 - HikariPool-3 - Start completed.
2024-07-10 12:25:41 - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-07-10 12:25:41 - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2d683386) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@71c94f43)
2024-07-10 12:25:41 - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2024-07-10 12:25:41 - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-07-10 12:25:41 - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@2ac980e9
2024-07-10 12:25:41 - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@2ac980e9
2024-07-10 12:25:41 - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@1ee80d1f`
2024-07-10 12:25:41 - Adding type registration Duration -> basicType@39(java.time.Duration,2)
2024-07-10 12:25:41 - Adding type registration java.time.Duration -> basicType@39(java.time.Duration,2)
2024-07-10 12:25:41 - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@40(java.time.OffsetDateTime,3003)
2024-07-10 12:25:41 - Adding type registration OffsetDateTime -> basicType@40(java.time.OffsetDateTime,3003)
2024-07-10 12:25:41 - Adding type registration java.time.OffsetDateTime -> basicType@40(java.time.OffsetDateTime,3003)
2024-07-10 12:25:41 - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@41(java.time.ZonedDateTime,3003)
2024-07-10 12:25:41 - Adding type registration ZonedDateTime -> basicType@41(java.time.ZonedDateTime,3003)
2024-07-10 12:25:41 - Adding type registration java.time.ZonedDateTime -> basicType@41(java.time.ZonedDateTime,3003)
2024-07-10 12:25:41 - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@42(java.time.OffsetTime,3007)
2024-07-10 12:25:41 - Adding type registration OffsetTime -> basicType@42(java.time.OffsetTime,3007)
2024-07-10 12:25:41 - Adding type registration java.time.OffsetTime -> basicType@42(java.time.OffsetTime,3007)
2024-07-10 12:25:41 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@46f0575c] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@2ae8a807]
2024-07-10 12:25:41 - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-10 12:25:41 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@46f0575c] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@2935d383]
2024-07-10 12:25:41 - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@2935d383] for TypeConfiguration
2024-07-10 12:25:41 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-10 12:25:42 - No authentication manager set. Reauthentication of users when changing passwords will not be performed.
2024-07-10 12:25:42 - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@7e78f3fc, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@43e0ff93, org.springframework.security.web.context.SecurityContextHolderFilter@67e752fc, org.springframework.security.web.header.HeaderWriterFilter@4af6a857, org.springframework.security.web.authentication.logout.LogoutFilter@38d96e5f, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@5124ad53, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@227c9abe, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@35ffd307, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1a3f07af, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@37da8c89, org.springframework.security.web.access.ExceptionTranslationFilter@3c827dba, org.springframework.security.web.access.intercept.AuthorizationFilter@11159606]
2024-07-10 12:25:42 - LiveReload server is running on port 35729
2024-07-10 12:25:42 - Starting ProtocolHandler ["http-nio-5001"]
2024-07-10 12:25:42 - Tomcat started on port(s): 5001 (http) with context path ''
2024-07-10 12:25:42 - Started SpringThymeleafApplication in 1.822 seconds (process running for 4479.011)
2024-07-10 12:25:42 - Condition evaluation unchanged
2024-07-10 12:26:14 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-07-10 12:26:14 - Initializing Servlet 'dispatcherServlet'
2024-07-10 12:26:14 - Completed initialization in 1 ms
2024-07-10 12:26:18 - select n1_0.id,n1_0.cnpj_emissor,n1_0.data_captura,n1_0.data_emissao,n1_0.faixa_horario,n1_0.local_destino,n1_0.municipio_codigo,n1_0.numero_da_nota,n1_0.permissionario_cnpj,n1_0.portaria,n1_0.tipo_veiculo from nota n1_0 order by n1_0.data_captura desc offset ? rows fetch first ? rows only
2024-07-10 12:26:18 - select m1_0.ibge,m1_0.codigo,m1_0.nome,m1_0.uf from municipio m1_0
2024-07-10 12:26:18 - select p1_0.cnpj,p1_0.nome from permissionario p1_0
2024-07-10 12:31:08 - select m1_0.ibge,m1_0.codigo,m1_0.nome,m1_0.uf from municipio m1_0
2024-07-10 12:31:08 - select m1_0.codigo,m1_0.nome,m1_0.uf from mercado m1_0
2024-07-10 12:31:08 - select p1_0.cnpj,p1_0.nome from permissionario p1_0
2024-07-10 12:31:17 - select n1_0.id,n1_0.cnpj_emissor,n1_0.data_captura,n1_0.data_emissao,n1_0.faixa_horario,n1_0.local_destino,n1_0.municipio_codigo,n1_0.numero_da_nota,n1_0.permissionario_cnpj,n1_0.portaria,n1_0.tipo_veiculo from nota n1_0 order by n1_0.data_captura desc offset ? rows fetch first ? rows only
2024-07-10 12:31:17 - select m1_0.ibge,m1_0.codigo,m1_0.nome,m1_0.uf from municipio m1_0
2024-07-10 12:31:17 - select p1_0.cnpj,p1_0.nome from permissionario p1_0
2024-07-10 12:31:56 - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2024-07-10 12:31:56 - Pausing ProtocolHandler ["http-nio-5001"]
2024-07-10 12:31:56 - Stopping service [Tomcat]
2024-07-10 12:31:56 - Destroying Spring FrameworkServlet 'dispatcherServlet'
2024-07-10 12:31:56 - Stopping ProtocolHandler ["http-nio-5001"]
2024-07-10 12:31:56 - Destroying ProtocolHandler ["http-nio-5001"]
2024-07-10 12:31:56 - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-10 12:31:56 - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@2935d383] for TypeConfiguration
2024-07-10 12:31:56 - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@2f57b3b2] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@2935d383]
2024-07-10 12:31:56 - HikariPool-3 - Shutdown initiated...
2024-07-10 12:31:56 - HikariPool-3 - Shutdown completed.
2024-07-10 12:31:57 - Starting SpringThymeleafApplication using Java 17.0.7 with PID 10156 (C:\Users\fernando.correa\Documents\GitHub\workspace2023\app-devceasa01.2003\target\classes started by fernando.correa in C:\Users\fernando.correa\Documents\GitHub\workspace2023\app-devceasa01.2003)
2024-07-10 12:31:57 - No active profile set, falling back to 1 default profile: "default"
2024-07-10 12:31:57 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-10 12:31:57 - Finished Spring Data repository scanning in 39 ms. Found 15 JPA repository interfaces.
2024-07-10 12:31:57 - Tomcat initialized with port(s): 5001 (http)
2024-07-10 12:31:57 - Initializing ProtocolHandler ["http-nio-5001"]
2024-07-10 12:31:57 - Starting service [Tomcat]
2024-07-10 12:31:57 - Starting Servlet engine: [Apache Tomcat/10.1.15]
2024-07-10 12:31:57 - Initializing Spring embedded WebApplicationContext
2024-07-10 12:31:57 - Root WebApplicationContext: initialization completed in 413 ms
2024-07-10 12:31:57 - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-10 12:31:57 - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@29ffd355
2024-07-10 12:31:57 - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@29ffd355
2024-07-10 12:31:57 - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@29ffd355
2024-07-10 12:31:57 - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@290b1527
2024-07-10 12:31:57 - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@290b1527
2024-07-10 12:31:57 - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@118f8fcb
2024-07-10 12:31:57 - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@118f8fcb
2024-07-10 12:31:57 - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@63937bff
2024-07-10 12:31:57 - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@63937bff
2024-07-10 12:31:57 - Adding type registration byte -> org.hibernate.type.BasicTypeReference@34a179a3
2024-07-10 12:31:57 - Adding type registration byte -> org.hibernate.type.BasicTypeReference@34a179a3
2024-07-10 12:31:57 - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@34a179a3
2024-07-10 12:31:57 - Adding type registration binary -> org.hibernate.type.BasicTypeReference@50da14fe
2024-07-10 12:31:57 - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@50da14fe
2024-07-10 12:31:57 - Adding type registration [B -> org.hibernate.type.BasicTypeReference@50da14fe
2024-07-10 12:31:57 - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@6f090327
2024-07-10 12:31:57 - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@6f090327
2024-07-10 12:31:57 - Adding type registration image -> org.hibernate.type.BasicTypeReference@3d28f5f3
2024-07-10 12:31:57 - Adding type registration blob -> org.hibernate.type.BasicTypeReference@636c4eff
2024-07-10 12:31:57 - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@636c4eff
2024-07-10 12:31:57 - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@6311db88
2024-07-10 12:31:57 - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@4426fcf6
2024-07-10 12:31:57 - Adding type registration short -> org.hibernate.type.BasicTypeReference@3e5b1eec
2024-07-10 12:31:57 - Adding type registration short -> org.hibernate.type.BasicTypeReference@3e5b1eec
2024-07-10 12:31:57 - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@3e5b1eec
2024-07-10 12:31:57 - Adding type registration integer -> org.hibernate.type.BasicTypeReference@3f41a46e
2024-07-10 12:31:57 - Adding type registration int -> org.hibernate.type.BasicTypeReference@3f41a46e
2024-07-10 12:31:57 - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@3f41a46e
2024-07-10 12:31:57 - Adding type registration long -> org.hibernate.type.BasicTypeReference@5261e595
2024-07-10 12:31:57 - Adding type registration long -> org.hibernate.type.BasicTypeReference@5261e595
2024-07-10 12:31:57 - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@5261e595
2024-07-10 12:31:57 - Adding type registration float -> org.hibernate.type.BasicTypeReference@21d36263
2024-07-10 12:31:57 - Adding type registration float -> org.hibernate.type.BasicTypeReference@21d36263
2024-07-10 12:31:57 - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@21d36263
2024-07-10 12:31:57 - Adding type registration double -> org.hibernate.type.BasicTypeReference@4719b4cb
2024-07-10 12:31:57 - Adding type registration double -> org.hibernate.type.BasicTypeReference@4719b4cb
2024-07-10 12:31:57 - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@4719b4cb
2024-07-10 12:31:57 - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@75c90a92
2024-07-10 12:31:57 - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@75c90a92
2024-07-10 12:31:57 - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@28d914f3
2024-07-10 12:31:57 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@28d914f3
2024-07-10 12:31:57 - Adding type registration character -> org.hibernate.type.BasicTypeReference@12a3bbf1
2024-07-10 12:31:57 - Adding type registration char -> org.hibernate.type.BasicTypeReference@12a3bbf1
2024-07-10 12:31:57 - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@12a3bbf1
2024-07-10 12:31:57 - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@1896ea82
2024-07-10 12:31:57 - Adding type registration string -> org.hibernate.type.BasicTypeReference@25b6fe98
2024-07-10 12:31:57 - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@25b6fe98
2024-07-10 12:31:57 - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@45a80851
2024-07-10 12:31:57 - Adding type registration characters -> org.hibernate.type.BasicTypeReference@4adb4f26
2024-07-10 12:31:57 - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@4adb4f26
2024-07-10 12:31:57 - Adding type registration [C -> org.hibernate.type.BasicTypeReference@4adb4f26
2024-07-10 12:31:57 - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@65367e05
2024-07-10 12:31:57 - Adding type registration text -> org.hibernate.type.BasicTypeReference@77e60e05
2024-07-10 12:31:57 - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@72097a28
2024-07-10 12:31:57 - Adding type registration clob -> org.hibernate.type.BasicTypeReference@623bb930
2024-07-10 12:31:57 - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@623bb930
2024-07-10 12:31:57 - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@342b2524
2024-07-10 12:31:57 - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@342b2524
2024-07-10 12:31:57 - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@737a8382
2024-07-10 12:31:57 - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@4a1b6fff
2024-07-10 12:31:57 - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@7556bdb5
2024-07-10 12:31:57 - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@18b9b43e
2024-07-10 12:31:57 - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@3f785238
2024-07-10 12:31:57 - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@2e0da6bf
2024-07-10 12:31:57 - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@6e760dde
2024-07-10 12:31:57 - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@6e760dde
2024-07-10 12:31:57 - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@3b3b4c6a
2024-07-10 12:31:57 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@3b3b4c6a
2024-07-10 12:31:57 - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@462f20a7
2024-07-10 12:31:57 - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@462f20a7
2024-07-10 12:31:57 - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@5544e83
2024-07-10 12:31:57 - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@5544e83
2024-07-10 12:31:57 - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@5b12ab0a
2024-07-10 12:31:57 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@5b12ab0a
2024-07-10 12:31:57 - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3a2be41e
2024-07-10 12:31:57 - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@53ed1e4
2024-07-10 12:31:57 - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@22b9a796
2024-07-10 12:31:57 - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@22b9a796
2024-07-10 12:31:57 - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@6c3d0230
2024-07-10 12:31:57 - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@95310bd
2024-07-10 12:31:57 - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@7a115182
2024-07-10 12:31:57 - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@15fbdc41
2024-07-10 12:31:57 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@15fbdc41
2024-07-10 12:31:57 - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@1153604c
2024-07-10 12:31:57 - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@144c23
2024-07-10 12:31:57 - Adding type registration date -> org.hibernate.type.BasicTypeReference@70f980e2
2024-07-10 12:31:57 - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@70f980e2
2024-07-10 12:31:57 - Adding type registration time -> org.hibernate.type.BasicTypeReference@3bab5368
2024-07-10 12:31:57 - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@3bab5368
2024-07-10 12:31:57 - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@31701551
2024-07-10 12:31:57 - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@31701551
2024-07-10 12:31:57 - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@31701551
2024-07-10 12:31:57 - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@13273208
2024-07-10 12:31:57 - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@13273208
2024-07-10 12:31:57 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@13273208
2024-07-10 12:31:57 - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@2fe55e1e
2024-07-10 12:31:57 - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@4e347899
2024-07-10 12:31:57 - Adding type registration instant -> org.hibernate.type.BasicTypeReference@7f5f2693
2024-07-10 12:31:57 - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@7f5f2693
2024-07-10 12:31:57 - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@55c2ec02
2024-07-10 12:31:57 - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@55c2ec02
2024-07-10 12:31:57 - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@55c2ec02
2024-07-10 12:31:57 - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@50d25d0a
2024-07-10 12:31:57 - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@3d4f1739
2024-07-10 12:31:57 - Adding type registration class -> org.hibernate.type.BasicTypeReference@3ba2c5bd
2024-07-10 12:31:57 - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@3ba2c5bd
2024-07-10 12:31:57 - Adding type registration currency -> org.hibernate.type.BasicTypeReference@79428c37
2024-07-10 12:31:57 - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@79428c37
2024-07-10 12:31:57 - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@79428c37
2024-07-10 12:31:57 - Adding type registration locale -> org.hibernate.type.BasicTypeReference@3bbaa418
2024-07-10 12:31:57 - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@3bbaa418
2024-07-10 12:31:57 - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@7e098a89
2024-07-10 12:31:57 - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@7e098a89
2024-07-10 12:31:57 - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@532b27d8
2024-07-10 12:31:57 - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@532b27d8
2024-07-10 12:31:57 - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@3ee52abe
2024-07-10 12:31:57 - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@3ee52abe
2024-07-10 12:31:57 - Adding type registration url -> org.hibernate.type.BasicTypeReference@5091d31e
2024-07-10 12:31:57 - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@5091d31e
2024-07-10 12:31:57 - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@62fe5647
2024-07-10 12:31:57 - Adding type registration object -> org.hibernate.type.JavaObjectType@1ee80d1f
2024-07-10 12:31:57 - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@1ee80d1f
2024-07-10 12:31:57 - Adding type registration null -> org.hibernate.type.NullType@356c94a
2024-07-10 12:31:57 - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@19ca4fbc
2024-07-10 12:31:57 - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@137b4a6b
2024-07-10 12:31:57 - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@6ca9c29f
2024-07-10 12:31:57 - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@6321f253
2024-07-10 12:31:57 - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@285df624
2024-07-10 12:31:57 - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@61bcc956
2024-07-10 12:31:57 - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@43a352c4
2024-07-10 12:31:57 - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@2ffc8389
2024-07-10 12:31:57 - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-10 12:31:57 - HikariPool-4 - Starting...
2024-07-10 12:31:57 - HikariPool-4 - Added connection org.postgresql.jdbc.PgConnection@3d42cf80
2024-07-10 12:31:57 - HikariPool-4 - Start completed.
2024-07-10 12:31:57 - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-07-10 12:31:57 - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@263333cb) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@202807f4)
2024-07-10 12:31:57 - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2024-07-10 12:31:57 - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-07-10 12:31:57 - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@6f9a4bf5
2024-07-10 12:31:57 - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@6f9a4bf5
2024-07-10 12:31:57 - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@1ee80d1f`
2024-07-10 12:31:57 - Adding type registration Duration -> basicType@58(java.time.Duration,2)
2024-07-10 12:31:57 - Adding type registration java.time.Duration -> basicType@58(java.time.Duration,2)
2024-07-10 12:31:57 - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@59(java.time.OffsetDateTime,3003)
2024-07-10 12:31:57 - Adding type registration OffsetDateTime -> basicType@59(java.time.OffsetDateTime,3003)
2024-07-10 12:31:57 - Adding type registration java.time.OffsetDateTime -> basicType@59(java.time.OffsetDateTime,3003)
2024-07-10 12:31:57 - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@60(java.time.ZonedDateTime,3003)
2024-07-10 12:31:57 - Adding type registration ZonedDateTime -> basicType@60(java.time.ZonedDateTime,3003)
2024-07-10 12:31:57 - Adding type registration java.time.ZonedDateTime -> basicType@60(java.time.ZonedDateTime,3003)
2024-07-10 12:31:57 - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@61(java.time.OffsetTime,3007)
2024-07-10 12:31:57 - Adding type registration OffsetTime -> basicType@61(java.time.OffsetTime,3007)
2024-07-10 12:31:57 - Adding type registration java.time.OffsetTime -> basicType@61(java.time.OffsetTime,3007)
2024-07-10 12:31:57 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3689bdc0] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@91b6db1]
2024-07-10 12:31:57 - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-10 12:31:57 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3689bdc0] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@3f2447fa]
2024-07-10 12:31:57 - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@3f2447fa] for TypeConfiguration
2024-07-10 12:31:57 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-10 12:31:58 - No authentication manager set. Reauthentication of users when changing passwords will not be performed.
2024-07-10 12:31:58 - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@4f7c8c55, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7c02e72a, org.springframework.security.web.context.SecurityContextHolderFilter@3c3a5e77, org.springframework.security.web.header.HeaderWriterFilter@2677524b, org.springframework.security.web.authentication.logout.LogoutFilter@1225176f, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@5c242fa8, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@6680c52c, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@66369f3, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@60fbc430, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1a6ce6d, org.springframework.security.web.access.ExceptionTranslationFilter@47e4234c, org.springframework.security.web.access.intercept.AuthorizationFilter@317047af]
2024-07-10 12:31:58 - LiveReload server is running on port 35729
2024-07-10 12:31:58 - Starting ProtocolHandler ["http-nio-5001"]
2024-07-10 12:31:58 - Tomcat started on port(s): 5001 (http) with context path ''
2024-07-10 12:31:58 - Started SpringThymeleafApplication in 1.565 seconds (process running for 4855.236)
2024-07-10 12:31:58 - Condition evaluation unchanged
2024-07-10 12:32:41 - Application shutdown requested.
2024-07-10 12:32:41 - Pausing ProtocolHandler ["http-nio-5001"]
2024-07-10 12:32:41 - Stopping service [Tomcat]
2024-07-10 12:32:41 - Stopping ProtocolHandler ["http-nio-5001"]
2024-07-10 12:32:41 - Destroying ProtocolHandler ["http-nio-5001"]
2024-07-10 12:32:41 - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-10 12:32:41 - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@3f2447fa] for TypeConfiguration
2024-07-10 12:32:41 - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@69c5420b] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@3f2447fa]
2024-07-10 12:32:41 - HikariPool-4 - Shutdown initiated...
2024-07-10 12:32:41 - HikariPool-4 - Shutdown completed.
2024-07-10 13:50:45 - HV000001: Hibernate Validator 8.0.1.Final
2024-07-10 13:50:46 - Starting SpringThymeleafApplication using Java 17.0.7 with PID 2488 (C:\Users\fernando.correa\Documents\GitHub\workspace2023\app-devceasa01.2003\target\classes started by fernando.correa in C:\Users\fernando.correa\Documents\GitHub\workspace2023\app-devceasa01.2003)
2024-07-10 13:50:46 - No active profile set, falling back to 1 default profile: "default"
2024-07-10 13:50:46 - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-07-10 13:50:46 - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-07-10 13:50:46 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-10 13:50:46 - Finished Spring Data repository scanning in 76 ms. Found 15 JPA repository interfaces.
2024-07-10 13:50:47 - Tomcat initialized with port(s): 5001 (http)
2024-07-10 13:50:47 - Initializing ProtocolHandler ["http-nio-5001"]
2024-07-10 13:50:47 - Starting service [Tomcat]
2024-07-10 13:50:47 - Starting Servlet engine: [Apache Tomcat/10.1.15]
2024-07-10 13:50:47 - Initializing Spring embedded WebApplicationContext
2024-07-10 13:50:47 - Root WebApplicationContext: initialization completed in 1478 ms
2024-07-10 13:50:47 - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-10 13:50:47 - HHH000412: Hibernate ORM core version 6.2.13.Final
2024-07-10 13:50:47 - HHH000406: Using bytecode reflection optimizer
2024-07-10 13:50:48 - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@290b1527
2024-07-10 13:50:48 - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@290b1527
2024-07-10 13:50:48 - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@290b1527
2024-07-10 13:50:48 - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@118f8fcb
2024-07-10 13:50:48 - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@118f8fcb
2024-07-10 13:50:48 - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@63937bff
2024-07-10 13:50:48 - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@63937bff
2024-07-10 13:50:48 - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@34a179a3
2024-07-10 13:50:48 - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@34a179a3
2024-07-10 13:50:48 - Adding type registration byte -> org.hibernate.type.BasicTypeReference@45f2e03d
2024-07-10 13:50:48 - Adding type registration byte -> org.hibernate.type.BasicTypeReference@45f2e03d
2024-07-10 13:50:48 - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@45f2e03d
2024-07-10 13:50:48 - Adding type registration binary -> org.hibernate.type.BasicTypeReference@6f090327
2024-07-10 13:50:48 - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@6f090327
2024-07-10 13:50:48 - Adding type registration [B -> org.hibernate.type.BasicTypeReference@6f090327
2024-07-10 13:50:48 - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@3d28f5f3
2024-07-10 13:50:48 - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@3d28f5f3
2024-07-10 13:50:48 - Adding type registration image -> org.hibernate.type.BasicTypeReference@636c4eff
2024-07-10 13:50:48 - Adding type registration blob -> org.hibernate.type.BasicTypeReference@6311db88
2024-07-10 13:50:48 - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@6311db88
2024-07-10 13:50:48 - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@4426fcf6
2024-07-10 13:50:48 - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@3e5b1eec
2024-07-10 13:50:48 - Adding type registration short -> org.hibernate.type.BasicTypeReference@3f41a46e
2024-07-10 13:50:48 - Adding type registration short -> org.hibernate.type.BasicTypeReference@3f41a46e
2024-07-10 13:50:48 - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@3f41a46e
2024-07-10 13:50:48 - Adding type registration integer -> org.hibernate.type.BasicTypeReference@5261e595
2024-07-10 13:50:48 - Adding type registration int -> org.hibernate.type.BasicTypeReference@5261e595
2024-07-10 13:50:48 - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@5261e595
2024-07-10 13:50:48 - Adding type registration long -> org.hibernate.type.BasicTypeReference@21d36263
2024-07-10 13:50:48 - Adding type registration long -> org.hibernate.type.BasicTypeReference@21d36263
2024-07-10 13:50:48 - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@21d36263
2024-07-10 13:50:48 - Adding type registration float -> org.hibernate.type.BasicTypeReference@4719b4cb
2024-07-10 13:50:48 - Adding type registration float -> org.hibernate.type.BasicTypeReference@4719b4cb
2024-07-10 13:50:48 - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@4719b4cb
2024-07-10 13:50:48 - Adding type registration double -> org.hibernate.type.BasicTypeReference@75c90a92
2024-07-10 13:50:48 - Adding type registration double -> org.hibernate.type.BasicTypeReference@75c90a92
2024-07-10 13:50:48 - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@75c90a92
2024-07-10 13:50:48 - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@28d914f3
2024-07-10 13:50:48 - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@28d914f3
2024-07-10 13:50:48 - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@12a3bbf1
2024-07-10 13:50:48 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@12a3bbf1
2024-07-10 13:50:48 - Adding type registration character -> org.hibernate.type.BasicTypeReference@1896ea82
2024-07-10 13:50:48 - Adding type registration char -> org.hibernate.type.BasicTypeReference@1896ea82
2024-07-10 13:50:48 - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@1896ea82
2024-07-10 13:50:48 - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@25b6fe98
2024-07-10 13:50:48 - Adding type registration string -> org.hibernate.type.BasicTypeReference@45a80851
2024-07-10 13:50:48 - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@45a80851
2024-07-10 13:50:48 - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@4adb4f26
2024-07-10 13:50:48 - Adding type registration characters -> org.hibernate.type.BasicTypeReference@65367e05
2024-07-10 13:50:48 - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@65367e05
2024-07-10 13:50:48 - Adding type registration [C -> org.hibernate.type.BasicTypeReference@65367e05
2024-07-10 13:50:48 - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@77e60e05
2024-07-10 13:50:48 - Adding type registration text -> org.hibernate.type.BasicTypeReference@72097a28
2024-07-10 13:50:48 - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@623bb930
2024-07-10 13:50:48 - Adding type registration clob -> org.hibernate.type.BasicTypeReference@342b2524
2024-07-10 13:50:48 - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@342b2524
2024-07-10 13:50:48 - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@737a8382
2024-07-10 13:50:48 - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@737a8382
2024-07-10 13:50:48 - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@4a1b6fff
2024-07-10 13:50:48 - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@7556bdb5
2024-07-10 13:50:48 - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@18b9b43e
2024-07-10 13:50:48 - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@3f785238
2024-07-10 13:50:48 - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@2e0da6bf
2024-07-10 13:50:48 - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@6e760dde
2024-07-10 13:50:48 - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@3b3b4c6a
2024-07-10 13:50:48 - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@3b3b4c6a
2024-07-10 13:50:48 - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@462f20a7
2024-07-10 13:50:48 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@462f20a7
2024-07-10 13:50:48 - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@5544e83
2024-07-10 13:50:48 - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@5544e83
2024-07-10 13:50:48 - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@5b12ab0a
2024-07-10 13:50:48 - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@5b12ab0a
2024-07-10 13:50:48 - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@3a2be41e
2024-07-10 13:50:48 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@3a2be41e
2024-07-10 13:50:48 - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@53ed1e4
2024-07-10 13:50:48 - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@22b9a796
2024-07-10 13:50:48 - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@6c3d0230
2024-07-10 13:50:48 - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@6c3d0230
2024-07-10 13:50:48 - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@95310bd
2024-07-10 13:50:48 - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@7a115182
2024-07-10 13:50:48 - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@15fbdc41
2024-07-10 13:50:48 - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@1153604c
2024-07-10 13:50:48 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@1153604c
2024-07-10 13:50:48 - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@144c23
2024-07-10 13:50:48 - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@70f980e2
2024-07-10 13:50:48 - Adding type registration date -> org.hibernate.type.BasicTypeReference@3bab5368
2024-07-10 13:50:48 - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@3bab5368
2024-07-10 13:50:48 - Adding type registration time -> org.hibernate.type.BasicTypeReference@31701551
2024-07-10 13:50:48 - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@31701551
2024-07-10 13:50:48 - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@13273208
2024-07-10 13:50:48 - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@13273208
2024-07-10 13:50:48 - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@13273208
2024-07-10 13:50:48 - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@2fe55e1e
2024-07-10 13:50:48 - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@2fe55e1e
2024-07-10 13:50:48 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@2fe55e1e
2024-07-10 13:50:48 - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@4e347899
2024-07-10 13:50:48 - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@7f5f2693
2024-07-10 13:50:48 - Adding type registration instant -> org.hibernate.type.BasicTypeReference@55c2ec02
2024-07-10 13:50:48 - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@55c2ec02
2024-07-10 13:50:48 - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@50d25d0a
2024-07-10 13:50:48 - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@50d25d0a
2024-07-10 13:50:48 - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@50d25d0a
2024-07-10 13:50:48 - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@3d4f1739
2024-07-10 13:50:48 - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@3ba2c5bd
2024-07-10 13:50:48 - Adding type registration class -> org.hibernate.type.BasicTypeReference@79428c37
2024-07-10 13:50:48 - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@79428c37
2024-07-10 13:50:48 - Adding type registration currency -> org.hibernate.type.BasicTypeReference@3bbaa418
2024-07-10 13:50:48 - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@3bbaa418
2024-07-10 13:50:48 - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@3bbaa418
2024-07-10 13:50:48 - Adding type registration locale -> org.hibernate.type.BasicTypeReference@7e098a89
2024-07-10 13:50:48 - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@7e098a89
2024-07-10 13:50:48 - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@532b27d8
2024-07-10 13:50:48 - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@532b27d8
2024-07-10 13:50:48 - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@3ee52abe
2024-07-10 13:50:48 - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@3ee52abe
2024-07-10 13:50:48 - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@5091d31e
2024-07-10 13:50:48 - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@5091d31e
2024-07-10 13:50:48 - Adding type registration url -> org.hibernate.type.BasicTypeReference@62fe5647
2024-07-10 13:50:48 - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@62fe5647
2024-07-10 13:50:48 - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@6861b827
2024-07-10 13:50:48 - Adding type registration object -> org.hibernate.type.JavaObjectType@5ebe4166
2024-07-10 13:50:48 - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@5ebe4166
2024-07-10 13:50:48 - Adding type registration null -> org.hibernate.type.NullType@4bbfc72a
2024-07-10 13:50:48 - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@207b91e0
2024-07-10 13:50:48 - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@6138398a
2024-07-10 13:50:48 - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@5491a07e
2024-07-10 13:50:48 - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@61a2bb51
2024-07-10 13:50:48 - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@1d2ac214
2024-07-10 13:50:48 - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@3dfe4c52
2024-07-10 13:50:48 - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@64b599c3
2024-07-10 13:50:48 - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@1039de37
2024-07-10 13:50:48 - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-10 13:50:48 - HikariPool-1 - Starting...
2024-07-10 13:50:48 - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@32e07e65
2024-07-10 13:50:48 - HikariPool-1 - Start completed.
2024-07-10 13:50:48 - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-07-10 13:50:48 - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2da62d7a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@77890291)
2024-07-10 13:50:48 - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2024-07-10 13:50:48 - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-07-10 13:50:48 - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@2bb77162
2024-07-10 13:50:48 - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@2bb77162
2024-07-10 13:50:48 - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@5ebe4166`
2024-07-10 13:50:48 - Adding type registration Duration -> basicType@1(java.time.Duration,2)
2024-07-10 13:50:48 - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
2024-07-10 13:50:48 - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-10 13:50:48 - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-10 13:50:48 - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-10 13:50:48 - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-10 13:50:48 - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-10 13:50:48 - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-10 13:50:48 - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-07-10 13:50:48 - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-07-10 13:50:48 - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-07-10 13:50:48 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3fd9ae97] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4f11f751]
2024-07-10 13:50:49 - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-10 13:50:49 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3fd9ae97] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@61fda66f]
2024-07-10 13:50:49 - alter table if exists nota add constraint FKpju8i10mvr180nlyy2qq2s1h1 foreign key (municipio_codigo) references municipio
2024-07-10 13:50:49 - alter table if exists notafiscal add constraint FKfifcesjhmx6sirqongl2d8x5y foreign key (municipio_id) references municipio
2024-07-10 13:50:49 - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@61fda66f] for TypeConfiguration
2024-07-10 13:50:49 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-10 13:50:50 - Hibernate is in classpath; If applicable, HQL parser will be used.
2024-07-10 13:50:50 - No authentication manager set. Reauthentication of users when changing passwords will not be performed.
2024-07-10 13:50:51 - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@54cbafe3, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2e819eb4, org.springframework.security.web.context.SecurityContextHolderFilter@79b91e2d, org.springframework.security.web.header.HeaderWriterFilter@79e8423c, org.springframework.security.web.authentication.logout.LogoutFilter@59dfeb92, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@155d55ce, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@16ada74a, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@506a0930, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@46cde00a, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7daa6498, org.springframework.security.web.access.ExceptionTranslationFilter@47434e1c, org.springframework.security.web.access.intercept.AuthorizationFilter@78abe579]
2024-07-10 13:50:51 - LiveReload server is running on port 35729
2024-07-10 13:50:51 - Starting ProtocolHandler ["http-nio-5001"]
2024-07-10 13:50:51 - Tomcat started on port(s): 5001 (http) with context path ''
2024-07-10 13:50:51 - Started SpringThymeleafApplication in 5.814 seconds (process running for 6.649)
2024-07-10 13:50:55 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-07-10 13:50:55 - Initializing Servlet 'dispatcherServlet'
2024-07-10 13:50:55 - Completed initialization in 1 ms
2024-07-10 13:51:00 - select n1_0.id,n1_0.cnpj_emissor,n1_0.data_captura,n1_0.data_emissao,n1_0.faixa_horario,n1_0.local_destino,n1_0.municipio_codigo,n1_0.numero_da_nota,n1_0.permissionario_cnpj,n1_0.portaria,n1_0.tipo_veiculo from nota n1_0 order by n1_0.data_captura desc offset ? rows fetch first ? rows only
2024-07-10 13:51:00 - select m1_0.ibge,m1_0.codigo,m1_0.nome,m1_0.uf from municipio m1_0
2024-07-10 13:51:00 - select p1_0.cnpj,p1_0.nome from permissionario p1_0
2024-07-10 13:51:49 - select m1_0.ibge,m1_0.codigo,m1_0.nome,m1_0.uf from municipio m1_0 where m1_0.ibge=?
2024-07-10 13:51:49 - select p1_0.cnpj,p1_0.nome from permissionario p1_0 where p1_0.cnpj=?
2024-07-10 13:51:49 - select n1_0.id,n1_0.cnpj_emissor,n1_0.data_captura,n1_0.data_emissao,n1_0.faixa_horario,n1_0.local_destino,n1_0.municipio_codigo,n1_0.numero_da_nota,n1_0.permissionario_cnpj,n1_0.portaria,n1_0.tipo_veiculo from nota n1_0 order by n1_0.data_captura desc offset ? rows fetch first ? rows only
2024-07-10 13:51:49 - select m1_0.ibge,m1_0.codigo,m1_0.nome,m1_0.uf from municipio m1_0
2024-07-10 13:51:49 - select p1_0.cnpj,p1_0.nome from permissionario p1_0
2024-07-10 14:01:38 - select m1_0.ibge,m1_0.codigo,m1_0.nome,m1_0.uf from municipio m1_0 where m1_0.ibge=?
2024-07-10 14:01:38 - select p1_0.cnpj,p1_0.nome from permissionario p1_0 where p1_0.cnpj=?
2024-07-10 14:01:38 - select n1_0.id,n1_0.cnpj_emissor,n1_0.data_captura,n1_0.data_emissao,n1_0.faixa_horario,n1_0.local_destino,n1_0.municipio_codigo,n1_0.numero_da_nota,n1_0.permissionario_cnpj,n1_0.portaria,n1_0.tipo_veiculo from nota n1_0 order by n1_0.data_captura desc offset ? rows fetch first ? rows only
2024-07-10 14:01:38 - select m1_0.ibge,m1_0.codigo,m1_0.nome,m1_0.uf from municipio m1_0
2024-07-10 14:01:38 - select p1_0.cnpj,p1_0.nome from permissionario p1_0
2024-07-10 14:02:14 - Application shutdown requested.
2024-07-10 14:02:14 - Pausing ProtocolHandler ["http-nio-5001"]
2024-07-10 14:02:14 - Stopping service [Tomcat]
2024-07-10 14:02:14 - Destroying Spring FrameworkServlet 'dispatcherServlet'
2024-07-10 14:02:14 - Stopping ProtocolHandler ["http-nio-5001"]
2024-07-10 14:02:14 - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-10 14:02:14 - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@61fda66f] for TypeConfiguration
2024-07-10 14:02:14 - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@5acaccdd] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@61fda66f]
2024-07-10 14:02:14 - HikariPool-1 - Shutdown initiated...
2024-07-10 14:02:14 - HikariPool-1 - Shutdown completed.
2024-07-10 14:03:33 - HV000001: Hibernate Validator 8.0.1.Final
2024-07-10 14:03:33 - Starting SpringThymeleafApplication using Java 17.0.7 with PID 15932 (C:\Users\fernando.correa\Documents\GitHub\workspace2023\app-devceasa01.2003\target\classes started by fernando.correa in C:\Users\fernando.correa\Documents\GitHub\workspace2023\app-devceasa01.2003)
2024-07-10 14:03:33 - No active profile set, falling back to 1 default profile: "default"
2024-07-10 14:03:33 - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-07-10 14:03:33 - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-07-10 14:03:33 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-10 14:03:33 - Finished Spring Data repository scanning in 74 ms. Found 15 JPA repository interfaces.
2024-07-10 14:03:34 - Tomcat initialized with port(s): 5001 (http)
2024-07-10 14:03:34 - Initializing ProtocolHandler ["http-nio-5001"]
2024-07-10 14:03:34 - Starting service [Tomcat]
2024-07-10 14:03:34 - Starting Servlet engine: [Apache Tomcat/10.1.15]
2024-07-10 14:03:34 - Initializing Spring embedded WebApplicationContext
2024-07-10 14:03:34 - Root WebApplicationContext: initialization completed in 1540 ms
2024-07-10 14:03:35 - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-10 14:03:35 - HHH000412: Hibernate ORM core version 6.2.13.Final
2024-07-10 14:03:35 - HHH000406: Using bytecode reflection optimizer
2024-07-10 14:03:35 - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@1c0b1c8
2024-07-10 14:03:35 - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@1c0b1c8
2024-07-10 14:03:35 - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@1c0b1c8
2024-07-10 14:03:35 - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@3f95de2c
2024-07-10 14:03:35 - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@3f95de2c
2024-07-10 14:03:35 - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@216f31d1
2024-07-10 14:03:35 - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@216f31d1
2024-07-10 14:03:35 - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@1babda35
2024-07-10 14:03:35 - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@1babda35
2024-07-10 14:03:35 - Adding type registration byte -> org.hibernate.type.BasicTypeReference@1fe17679
2024-07-10 14:03:35 - Adding type registration byte -> org.hibernate.type.BasicTypeReference@1fe17679
2024-07-10 14:03:35 - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@1fe17679
2024-07-10 14:03:35 - Adding type registration binary -> org.hibernate.type.BasicTypeReference@1392e42f
2024-07-10 14:03:35 - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@1392e42f
2024-07-10 14:03:35 - Adding type registration [B -> org.hibernate.type.BasicTypeReference@1392e42f
2024-07-10 14:03:35 - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@7540a9a
2024-07-10 14:03:35 - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@7540a9a
2024-07-10 14:03:35 - Adding type registration image -> org.hibernate.type.BasicTypeReference@2c137160
2024-07-10 14:03:35 - Adding type registration blob -> org.hibernate.type.BasicTypeReference@153262d1
2024-07-10 14:03:35 - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@153262d1
2024-07-10 14:03:35 - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@11054fc4
2024-07-10 14:03:35 - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@362287a4
2024-07-10 14:03:35 - Adding type registration short -> org.hibernate.type.BasicTypeReference@18d7871
2024-07-10 14:03:35 - Adding type registration short -> org.hibernate.type.BasicTypeReference@18d7871
2024-07-10 14:03:35 - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@18d7871
2024-07-10 14:03:35 - Adding type registration integer -> org.hibernate.type.BasicTypeReference@72fa67b
2024-07-10 14:03:35 - Adding type registration int -> org.hibernate.type.BasicTypeReference@72fa67b
2024-07-10 14:03:35 - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@72fa67b
2024-07-10 14:03:35 - Adding type registration long -> org.hibernate.type.BasicTypeReference@3cefb235
2024-07-10 14:03:35 - Adding type registration long -> org.hibernate.type.BasicTypeReference@3cefb235
2024-07-10 14:03:35 - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@3cefb235
2024-07-10 14:03:35 - Adding type registration float -> org.hibernate.type.BasicTypeReference@1e521dab
2024-07-10 14:03:35 - Adding type registration float -> org.hibernate.type.BasicTypeReference@1e521dab
2024-07-10 14:03:35 - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@1e521dab
2024-07-10 14:03:35 - Adding type registration double -> org.hibernate.type.BasicTypeReference@74f6a0e0
2024-07-10 14:03:35 - Adding type registration double -> org.hibernate.type.BasicTypeReference@74f6a0e0
2024-07-10 14:03:35 - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@74f6a0e0
2024-07-10 14:03:35 - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@e90dc7b
2024-07-10 14:03:35 - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@e90dc7b
2024-07-10 14:03:35 - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@4f2fa986
2024-07-10 14:03:35 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@4f2fa986
2024-07-10 14:03:35 - Adding type registration character -> org.hibernate.type.BasicTypeReference@411e5a8d
2024-07-10 14:03:35 - Adding type registration char -> org.hibernate.type.BasicTypeReference@411e5a8d
2024-07-10 14:03:35 - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@411e5a8d
2024-07-10 14:03:35 - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@ae13ee
2024-07-10 14:03:35 - Adding type registration string -> org.hibernate.type.BasicTypeReference@8d57484
2024-07-10 14:03:35 - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@8d57484
2024-07-10 14:03:35 - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@3a849f81
2024-07-10 14:03:35 - Adding type registration characters -> org.hibernate.type.BasicTypeReference@97d706e
2024-07-10 14:03:35 - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@97d706e
2024-07-10 14:03:35 - Adding type registration [C -> org.hibernate.type.BasicTypeReference@97d706e
2024-07-10 14:03:35 - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@79bc33cc
2024-07-10 14:03:35 - Adding type registration text -> org.hibernate.type.BasicTypeReference@5aee192b
2024-07-10 14:03:35 - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@4408fd60
2024-07-10 14:03:35 - Adding type registration clob -> org.hibernate.type.BasicTypeReference@26941b8f
2024-07-10 14:03:35 - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@26941b8f
2024-07-10 14:03:35 - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@3e2e7ec2
2024-07-10 14:03:35 - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@3e2e7ec2
2024-07-10 14:03:35 - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@14231f6d
2024-07-10 14:03:35 - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@17430374
2024-07-10 14:03:35 - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@110d3a70
2024-07-10 14:03:35 - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@5c989efd
2024-07-10 14:03:35 - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@504c2a74
2024-07-10 14:03:35 - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@5f9bcbaa
2024-07-10 14:03:35 - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@27bda493
2024-07-10 14:03:35 - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@27bda493
2024-07-10 14:03:35 - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@3fcaa9ef
2024-07-10 14:03:35 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@3fcaa9ef
2024-07-10 14:03:35 - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@e642be8
2024-07-10 14:03:35 - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@e642be8
2024-07-10 14:03:35 - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@f237715
2024-07-10 14:03:35 - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@f237715
2024-07-10 14:03:35 - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@45f0c35e
2024-07-10 14:03:35 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@45f0c35e
2024-07-10 14:03:35 - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2f9f8fde
2024-07-10 14:03:35 - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@8bdaae
2024-07-10 14:03:35 - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@14849e75
2024-07-10 14:03:35 - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@14849e75
2024-07-10 14:03:35 - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@572d5588
2024-07-10 14:03:35 - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@41fd1cc
2024-07-10 14:03:35 - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@5a1f254b
2024-07-10 14:03:35 - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@6ad86f4b
2024-07-10 14:03:35 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@6ad86f4b
2024-07-10 14:03:35 - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@57e4e68d
2024-07-10 14:03:35 - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@2d8fcc0c
2024-07-10 14:03:35 - Adding type registration date -> org.hibernate.type.BasicTypeReference@e19918b
2024-07-10 14:03:35 - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@e19918b
2024-07-10 14:03:35 - Adding type registration time -> org.hibernate.type.BasicTypeReference@27920534
2024-07-10 14:03:35 - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@27920534
2024-07-10 14:03:35 - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@57325fc5
2024-07-10 14:03:35 - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@57325fc5
2024-07-10 14:03:35 - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@57325fc5
2024-07-10 14:03:35 - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@40e1683
2024-07-10 14:03:35 - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@40e1683
2024-07-10 14:03:35 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@40e1683
2024-07-10 14:03:35 - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@46595a40
2024-07-10 14:03:35 - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@71554c1a
2024-07-10 14:03:35 - Adding type registration instant -> org.hibernate.type.BasicTypeReference@345ce982
2024-07-10 14:03:35 - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@345ce982
2024-07-10 14:03:35 - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@40125b84
2024-07-10 14:03:35 - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@40125b84
2024-07-10 14:03:35 - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@40125b84
2024-07-10 14:03:35 - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@4c15929c
2024-07-10 14:03:35 - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@177b3298
2024-07-10 14:03:35 - Adding type registration class -> org.hibernate.type.BasicTypeReference@44b8d90c
2024-07-10 14:03:35 - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@44b8d90c
2024-07-10 14:03:35 - Adding type registration currency -> org.hibernate.type.BasicTypeReference@16247464
2024-07-10 14:03:35 - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@16247464
2024-07-10 14:03:35 - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@16247464
2024-07-10 14:03:35 - Adding type registration locale -> org.hibernate.type.BasicTypeReference@7645954e
2024-07-10 14:03:35 - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@7645954e
2024-07-10 14:03:35 - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@386486ec
2024-07-10 14:03:35 - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@386486ec
2024-07-10 14:03:35 - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@3a165855
2024-07-10 14:03:35 - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@3a165855
2024-07-10 14:03:35 - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@f249c27
2024-07-10 14:03:35 - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@f249c27
2024-07-10 14:03:35 - Adding type registration url -> org.hibernate.type.BasicTypeReference@55919768
2024-07-10 14:03:35 - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@55919768
2024-07-10 14:03:35 - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@495e28d0
2024-07-10 14:03:35 - Adding type registration object -> org.hibernate.type.JavaObjectType@5682c99a
2024-07-10 14:03:35 - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@5682c99a
2024-07-10 14:03:35 - Adding type registration null -> org.hibernate.type.NullType@4939ec4c
2024-07-10 14:03:35 - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@6c60c82
2024-07-10 14:03:35 - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@57031f75
2024-07-10 14:03:35 - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@2ae09a44
2024-07-10 14:03:35 - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@2c3d48d8
2024-07-10 14:03:35 - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@1a29e3c1
2024-07-10 14:03:35 - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@559eaf46
2024-07-10 14:03:35 - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@7b822d0b
2024-07-10 14:03:35 - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@3dbfd12b
2024-07-10 14:03:35 - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-10 14:03:35 - HikariPool-1 - Starting...
2024-07-10 14:03:35 - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@6207ae89
2024-07-10 14:03:35 - HikariPool-1 - Start completed.
2024-07-10 14:03:35 - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-07-10 14:03:35 - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1df7f764) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@907a953)
2024-07-10 14:03:35 - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2024-07-10 14:03:35 - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-07-10 14:03:35 - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@42a671e2
2024-07-10 14:03:35 - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@42a671e2
2024-07-10 14:03:35 - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@5682c99a`
2024-07-10 14:03:35 - Adding type registration Duration -> basicType@1(java.time.Duration,2)
2024-07-10 14:03:35 - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
2024-07-10 14:03:35 - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-10 14:03:35 - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-10 14:03:35 - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-10 14:03:35 - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-10 14:03:35 - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-10 14:03:35 - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-10 14:03:35 - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-07-10 14:03:35 - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-07-10 14:03:35 - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-07-10 14:03:35 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@50275e6e] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@45baff85]
2024-07-10 14:03:36 - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-10 14:03:36 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@50275e6e] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@6a166d9a]
2024-07-10 14:03:36 - alter table if exists nota add constraint FK53ji4uehv7n3bmyetrvpk4wsy foreign key (permissionario_cnpj) references permissionario
2024-07-10 14:03:36 - alter table if exists notafiscal add constraint FKglqwuhybeeloj2ijqgys15teg foreign key (permissionario_cnpj) references permissionario
2024-07-10 14:03:36 - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@6a166d9a] for TypeConfiguration
2024-07-10 14:03:36 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-10 14:03:37 - Hibernate is in classpath; If applicable, HQL parser will be used.
2024-07-10 14:03:37 - No authentication manager set. Reauthentication of users when changing passwords will not be performed.
2024-07-10 14:03:38 - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@6e7ee480, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@237282e6, org.springframework.security.web.context.SecurityContextHolderFilter@3dc70e87, org.springframework.security.web.header.HeaderWriterFilter@31c7b0d6, org.springframework.security.web.authentication.logout.LogoutFilter@24b6445d, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@779053d6, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@4e23ac9e, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@cd3d31b, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6511a89f, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2d7f4249, org.springframework.security.web.access.ExceptionTranslationFilter@52890e4, org.springframework.security.web.access.intercept.AuthorizationFilter@289873c7]
2024-07-10 14:03:38 - LiveReload server is running on port 35729
2024-07-10 14:03:38 - Starting ProtocolHandler ["http-nio-5001"]
2024-07-10 14:03:38 - Tomcat started on port(s): 5001 (http) with context path ''
2024-07-10 14:03:38 - Started SpringThymeleafApplication in 5.727 seconds (process running for 6.44)
2024-07-10 14:03:44 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-07-10 14:03:44 - Initializing Servlet 'dispatcherServlet'
2024-07-10 14:03:44 - Completed initialization in 1 ms
2024-07-10 14:03:44 - select p1_0.id,p1_0.classificacao,p1_0.codigo,p1_0.embalagem,p1_0.peso,p1_0.produto_id,p1_0.status,p1_0.subvariedade,p1_0.unidade,p1_0.variedade from propriedade p1_0 where p1_0.status=true
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.nome,p1_0.subgrupo_id from produto p1_0 where p1_0.id=?
2024-07-10 14:03:44 - select p1_0.id,p1_0.classificacao,p1_0.codigo,p1_0.embalagem,p1_0.peso,p1_0.produto_id,p1_0.status,p1_0.subvariedade,p1_0.unidade,p1_0.variedade from propriedade p1_0 where p1_0.status=true
2024-07-10 14:03:47 - select n1_0.id,n1_0.cnpj_emissor,n1_0.data_captura,n1_0.data_emissao,n1_0.faixa_horario,n1_0.local_destino,n1_0.municipio_codigo,n1_0.numero_da_nota,n1_0.permissionario_cnpj,n1_0.portaria,n1_0.tipo_veiculo from nota n1_0 order by n1_0.data_captura desc offset ? rows fetch first ? rows only
2024-07-10 14:03:47 - select m1_0.ibge,m1_0.codigo,m1_0.nome,m1_0.uf from municipio m1_0
2024-07-10 14:03:47 - select p1_0.cnpj,p1_0.nome from permissionario p1_0
2024-07-10 14:09:16 - select n1_0.id,n1_0.cnpj_emissor,n1_0.data_captura,n1_0.data_emissao,n1_0.faixa_horario,n1_0.local_destino,n1_0.municipio_codigo,n1_0.numero_da_nota,n1_0.permissionario_cnpj,n1_0.portaria,n1_0.tipo_veiculo from nota n1_0 order by n1_0.data_captura desc offset ? rows fetch first ? rows only
2024-07-10 14:09:16 - select m1_0.ibge,m1_0.codigo,m1_0.nome,m1_0.uf from municipio m1_0
2024-07-10 14:09:16 - select p1_0.cnpj,p1_0.nome from permissionario p1_0
2024-07-10 14:09:17 - [THYMELEAF][http-nio-5001-exec-8] Exception processing template "nota/nota_cadastro": An error happened during template parsing (template: "class path resource [templates/nota/nota_cadastro.html]")
org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/nota/nota_cadastro.html]")
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:241)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1103)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1077)
	at org.thymeleaf.spring6.view.ThymeleafView.renderFragment(ThymeleafView.java:372)
	at org.thymeleaf.spring6.view.ThymeleafView.render(ThymeleafView.java:192)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1415)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1159)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1098)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:168)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.attoparser.ParseException: Exception evaluating SpringEL expression: "permissionario.cppj" (template: "nota/nota_cadastro" - line 76, col 97)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:393)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 89 common frames omitted
Caused by: org.thymeleaf.exceptions.TemplateProcessingException: Exception evaluating SpringEL expression: "permissionario.cppj" (template: "nota/nota_cadastro" - line 76, col 97)
	at org.thymeleaf.spring6.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:292)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:144)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.OpenElementTag.beHandled(OpenElementTag.java:205)
	at org.thymeleaf.engine.Model.process(Model.java:282)
	at org.thymeleaf.engine.Model.process(Model.java:290)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.processIterationModel(IteratedGatheringModelProcessable.java:368)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.process(IteratedGatheringModelProcessable.java:222)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleCloseElement(ProcessorTemplateHandler.java:1640)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleCloseElementEnd(TemplateHandlerAdapterMarkupHandler.java:388)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:322)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleCloseElementEnd(OutputExpressionInlinePreProcessorHandler.java:220)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:164)
	at org.attoparser.HtmlElement.handleCloseElementEnd(HtmlElement.java:169)
	at org.attoparser.HtmlMarkupHandler.handleCloseElementEnd(HtmlMarkupHandler.java:412)
	at org.attoparser.MarkupEventProcessorHandler.handleCloseElementEnd(MarkupEventProcessorHandler.java:473)
	at org.attoparser.ParsingElementMarkupUtil.parseCloseElement(ParsingElementMarkupUtil.java:201)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:725)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	... 91 common frames omitted
Caused by: org.springframework.expression.spel.SpelEvaluationException: EL1008E: Property or field 'cppj' cannot be found on object of type 'com.flc.springthymeleaf.domain.Permissionario' - maybe not public or not valid?
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:228)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:111)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:416)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:98)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:114)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:338)
	at org.thymeleaf.spring6.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:265)
	... 116 common frames omitted
2024-07-10 14:09:17 - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/nota/nota_cadastro.html]")] with root cause
org.springframework.expression.spel.SpelEvaluationException: EL1008E: Property or field 'cppj' cannot be found on object of type 'com.flc.springthymeleaf.domain.Permissionario' - maybe not public or not valid?
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:228)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:111)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:416)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:98)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:114)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:338)
	at org.thymeleaf.spring6.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:265)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:144)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.OpenElementTag.beHandled(OpenElementTag.java:205)
	at org.thymeleaf.engine.Model.process(Model.java:282)
	at org.thymeleaf.engine.Model.process(Model.java:290)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.processIterationModel(IteratedGatheringModelProcessable.java:368)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.process(IteratedGatheringModelProcessable.java:222)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleCloseElement(ProcessorTemplateHandler.java:1640)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleCloseElementEnd(TemplateHandlerAdapterMarkupHandler.java:388)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:322)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleCloseElementEnd(OutputExpressionInlinePreProcessorHandler.java:220)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:164)
	at org.attoparser.HtmlElement.handleCloseElementEnd(HtmlElement.java:169)
	at org.attoparser.HtmlMarkupHandler.handleCloseElementEnd(HtmlMarkupHandler.java:412)
	at org.attoparser.MarkupEventProcessorHandler.handleCloseElementEnd(MarkupEventProcessorHandler.java:473)
	at org.attoparser.ParsingElementMarkupUtil.parseCloseElement(ParsingElementMarkupUtil.java:201)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:725)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1103)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1077)
	at org.thymeleaf.spring6.view.ThymeleafView.renderFragment(ThymeleafView.java:372)
	at org.thymeleaf.spring6.view.ThymeleafView.render(ThymeleafView.java:192)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1415)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1159)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1098)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:168)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2024-07-10 14:10:03 - Application shutdown requested.
2024-07-10 14:10:03 - Pausing ProtocolHandler ["http-nio-5001"]
2024-07-10 14:10:03 - Stopping service [Tomcat]
2024-07-10 14:10:03 - Destroying Spring FrameworkServlet 'dispatcherServlet'
2024-07-10 14:10:03 - Stopping ProtocolHandler ["http-nio-5001"]
2024-07-10 14:10:03 - Destroying ProtocolHandler ["http-nio-5001"]
2024-07-10 14:10:03 - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-10 14:10:03 - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@6a166d9a] for TypeConfiguration
2024-07-10 14:10:03 - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@334b3788] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@6a166d9a]
2024-07-10 14:10:03 - HikariPool-1 - Shutdown initiated...
2024-07-10 14:10:03 - HikariPool-1 - Shutdown completed.
2024-07-10 14:10:29 - HV000001: Hibernate Validator 8.0.1.Final
2024-07-10 14:10:29 - Starting SpringThymeleafApplication using Java 17.0.7 with PID 9900 (C:\Users\fernando.correa\Documents\GitHub\workspace2023\app-devceasa01.2003\target\classes started by fernando.correa in C:\Users\fernando.correa\Documents\GitHub\workspace2023\app-devceasa01.2003)
2024-07-10 14:10:29 - No active profile set, falling back to 1 default profile: "default"
2024-07-10 14:10:29 - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-07-10 14:10:29 - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-07-10 14:10:30 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-10 14:10:30 - Finished Spring Data repository scanning in 78 ms. Found 15 JPA repository interfaces.
2024-07-10 14:10:30 - Tomcat initialized with port(s): 5001 (http)
2024-07-10 14:10:30 - Initializing ProtocolHandler ["http-nio-5001"]
2024-07-10 14:10:30 - Starting service [Tomcat]
2024-07-10 14:10:30 - Starting Servlet engine: [Apache Tomcat/10.1.15]
2024-07-10 14:10:31 - Initializing Spring embedded WebApplicationContext
2024-07-10 14:10:31 - Root WebApplicationContext: initialization completed in 1461 ms
2024-07-10 14:10:31 - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-10 14:10:31 - HHH000412: Hibernate ORM core version 6.2.13.Final
2024-07-10 14:10:31 - HHH000406: Using bytecode reflection optimizer
2024-07-10 14:10:31 - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@1c0b1c8
2024-07-10 14:10:31 - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@1c0b1c8
2024-07-10 14:10:31 - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@1c0b1c8
2024-07-10 14:10:31 - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@3f95de2c
2024-07-10 14:10:31 - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@3f95de2c
2024-07-10 14:10:31 - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@216f31d1
2024-07-10 14:10:31 - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@216f31d1
2024-07-10 14:10:31 - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@1babda35
2024-07-10 14:10:31 - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@1babda35
2024-07-10 14:10:31 - Adding type registration byte -> org.hibernate.type.BasicTypeReference@1fe17679
2024-07-10 14:10:31 - Adding type registration byte -> org.hibernate.type.BasicTypeReference@1fe17679
2024-07-10 14:10:31 - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@1fe17679
2024-07-10 14:10:31 - Adding type registration binary -> org.hibernate.type.BasicTypeReference@1392e42f
2024-07-10 14:10:31 - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@1392e42f
2024-07-10 14:10:31 - Adding type registration [B -> org.hibernate.type.BasicTypeReference@1392e42f
2024-07-10 14:10:31 - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@7540a9a
2024-07-10 14:10:31 - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@7540a9a
2024-07-10 14:10:31 - Adding type registration image -> org.hibernate.type.BasicTypeReference@2c137160
2024-07-10 14:10:31 - Adding type registration blob -> org.hibernate.type.BasicTypeReference@153262d1
2024-07-10 14:10:31 - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@153262d1
2024-07-10 14:10:31 - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@11054fc4
2024-07-10 14:10:31 - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@362287a4
2024-07-10 14:10:31 - Adding type registration short -> org.hibernate.type.BasicTypeReference@18d7871
2024-07-10 14:10:31 - Adding type registration short -> org.hibernate.type.BasicTypeReference@18d7871
2024-07-10 14:10:31 - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@18d7871
2024-07-10 14:10:31 - Adding type registration integer -> org.hibernate.type.BasicTypeReference@72fa67b
2024-07-10 14:10:31 - Adding type registration int -> org.hibernate.type.BasicTypeReference@72fa67b
2024-07-10 14:10:31 - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@72fa67b
2024-07-10 14:10:31 - Adding type registration long -> org.hibernate.type.BasicTypeReference@3cefb235
2024-07-10 14:10:31 - Adding type registration long -> org.hibernate.type.BasicTypeReference@3cefb235
2024-07-10 14:10:31 - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@3cefb235
2024-07-10 14:10:31 - Adding type registration float -> org.hibernate.type.BasicTypeReference@1e521dab
2024-07-10 14:10:31 - Adding type registration float -> org.hibernate.type.BasicTypeReference@1e521dab
2024-07-10 14:10:31 - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@1e521dab
2024-07-10 14:10:31 - Adding type registration double -> org.hibernate.type.BasicTypeReference@74f6a0e0
2024-07-10 14:10:31 - Adding type registration double -> org.hibernate.type.BasicTypeReference@74f6a0e0
2024-07-10 14:10:31 - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@74f6a0e0
2024-07-10 14:10:31 - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@e90dc7b
2024-07-10 14:10:31 - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@e90dc7b
2024-07-10 14:10:31 - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@4f2fa986
2024-07-10 14:10:31 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@4f2fa986
2024-07-10 14:10:31 - Adding type registration character -> org.hibernate.type.BasicTypeReference@411e5a8d
2024-07-10 14:10:31 - Adding type registration char -> org.hibernate.type.BasicTypeReference@411e5a8d
2024-07-10 14:10:31 - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@411e5a8d
2024-07-10 14:10:31 - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@ae13ee
2024-07-10 14:10:31 - Adding type registration string -> org.hibernate.type.BasicTypeReference@8d57484
2024-07-10 14:10:31 - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@8d57484
2024-07-10 14:10:31 - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@3a849f81
2024-07-10 14:10:31 - Adding type registration characters -> org.hibernate.type.BasicTypeReference@97d706e
2024-07-10 14:10:31 - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@97d706e
2024-07-10 14:10:31 - Adding type registration [C -> org.hibernate.type.BasicTypeReference@97d706e
2024-07-10 14:10:31 - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@79bc33cc
2024-07-10 14:10:31 - Adding type registration text -> org.hibernate.type.BasicTypeReference@5aee192b
2024-07-10 14:10:31 - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@4408fd60
2024-07-10 14:10:31 - Adding type registration clob -> org.hibernate.type.BasicTypeReference@26941b8f
2024-07-10 14:10:31 - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@26941b8f
2024-07-10 14:10:31 - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@3e2e7ec2
2024-07-10 14:10:31 - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@3e2e7ec2
2024-07-10 14:10:31 - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@14231f6d
2024-07-10 14:10:31 - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@17430374
2024-07-10 14:10:31 - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@110d3a70
2024-07-10 14:10:31 - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@5c989efd
2024-07-10 14:10:31 - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@504c2a74
2024-07-10 14:10:31 - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@5f9bcbaa
2024-07-10 14:10:31 - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@27bda493
2024-07-10 14:10:31 - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@27bda493
2024-07-10 14:10:31 - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@3fcaa9ef
2024-07-10 14:10:31 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@3fcaa9ef
2024-07-10 14:10:31 - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@e642be8
2024-07-10 14:10:31 - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@e642be8
2024-07-10 14:10:31 - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@f237715
2024-07-10 14:10:31 - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@f237715
2024-07-10 14:10:31 - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@45f0c35e
2024-07-10 14:10:31 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@45f0c35e
2024-07-10 14:10:31 - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2f9f8fde
2024-07-10 14:10:31 - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@8bdaae
2024-07-10 14:10:31 - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@14849e75
2024-07-10 14:10:31 - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@14849e75
2024-07-10 14:10:31 - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@572d5588
2024-07-10 14:10:31 - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@41fd1cc
2024-07-10 14:10:31 - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@5a1f254b
2024-07-10 14:10:31 - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@6ad86f4b
2024-07-10 14:10:31 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@6ad86f4b
2024-07-10 14:10:31 - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@57e4e68d
2024-07-10 14:10:31 - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@2d8fcc0c
2024-07-10 14:10:31 - Adding type registration date -> org.hibernate.type.BasicTypeReference@e19918b
2024-07-10 14:10:31 - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@e19918b
2024-07-10 14:10:31 - Adding type registration time -> org.hibernate.type.BasicTypeReference@27920534
2024-07-10 14:10:31 - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@27920534
2024-07-10 14:10:31 - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@57325fc5
2024-07-10 14:10:31 - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@57325fc5
2024-07-10 14:10:31 - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@57325fc5
2024-07-10 14:10:31 - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@40e1683
2024-07-10 14:10:31 - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@40e1683
2024-07-10 14:10:31 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@40e1683
2024-07-10 14:10:31 - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@46595a40
2024-07-10 14:10:31 - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@71554c1a
2024-07-10 14:10:31 - Adding type registration instant -> org.hibernate.type.BasicTypeReference@345ce982
2024-07-10 14:10:31 - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@345ce982
2024-07-10 14:10:31 - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@40125b84
2024-07-10 14:10:31 - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@40125b84
2024-07-10 14:10:31 - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@40125b84
2024-07-10 14:10:31 - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@4c15929c
2024-07-10 14:10:31 - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@177b3298
2024-07-10 14:10:31 - Adding type registration class -> org.hibernate.type.BasicTypeReference@44b8d90c
2024-07-10 14:10:31 - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@44b8d90c
2024-07-10 14:10:31 - Adding type registration currency -> org.hibernate.type.BasicTypeReference@16247464
2024-07-10 14:10:31 - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@16247464
2024-07-10 14:10:31 - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@16247464
2024-07-10 14:10:31 - Adding type registration locale -> org.hibernate.type.BasicTypeReference@7645954e
2024-07-10 14:10:31 - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@7645954e
2024-07-10 14:10:31 - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@386486ec
2024-07-10 14:10:31 - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@386486ec
2024-07-10 14:10:31 - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@3a165855
2024-07-10 14:10:31 - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@3a165855
2024-07-10 14:10:31 - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@f249c27
2024-07-10 14:10:31 - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@f249c27
2024-07-10 14:10:31 - Adding type registration url -> org.hibernate.type.BasicTypeReference@55919768
2024-07-10 14:10:31 - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@55919768
2024-07-10 14:10:31 - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@495e28d0
2024-07-10 14:10:31 - Adding type registration object -> org.hibernate.type.JavaObjectType@5682c99a
2024-07-10 14:10:31 - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@5682c99a
2024-07-10 14:10:31 - Adding type registration null -> org.hibernate.type.NullType@4939ec4c
2024-07-10 14:10:31 - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@6c60c82
2024-07-10 14:10:31 - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@57031f75
2024-07-10 14:10:31 - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@2ae09a44
2024-07-10 14:10:31 - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@2c3d48d8
2024-07-10 14:10:31 - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@1a29e3c1
2024-07-10 14:10:31 - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@559eaf46
2024-07-10 14:10:31 - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@7b822d0b
2024-07-10 14:10:31 - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@3dbfd12b
2024-07-10 14:10:31 - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-10 14:10:31 - HikariPool-1 - Starting...
2024-07-10 14:10:31 - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@6207ae89
2024-07-10 14:10:31 - HikariPool-1 - Start completed.
2024-07-10 14:10:31 - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-07-10 14:10:31 - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1df7f764) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@907a953)
2024-07-10 14:10:31 - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2024-07-10 14:10:31 - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-07-10 14:10:31 - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@42a671e2
2024-07-10 14:10:31 - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@42a671e2
2024-07-10 14:10:31 - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@5682c99a`
2024-07-10 14:10:31 - Adding type registration Duration -> basicType@1(java.time.Duration,2)
2024-07-10 14:10:31 - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
2024-07-10 14:10:31 - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-10 14:10:31 - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-10 14:10:31 - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-10 14:10:31 - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-10 14:10:31 - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-10 14:10:31 - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-10 14:10:31 - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-07-10 14:10:31 - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-07-10 14:10:31 - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-07-10 14:10:31 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@50275e6e] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@45baff85]
2024-07-10 14:10:32 - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-10 14:10:32 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@50275e6e] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@6a166d9a]
2024-07-10 14:10:32 - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@6a166d9a] for TypeConfiguration
2024-07-10 14:10:32 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-10 14:10:33 - Hibernate is in classpath; If applicable, HQL parser will be used.
2024-07-10 14:10:33 - No authentication manager set. Reauthentication of users when changing passwords will not be performed.
2024-07-10 14:10:34 - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@768e473e, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@54cf7edc, org.springframework.security.web.context.SecurityContextHolderFilter@23ee2dc0, org.springframework.security.web.header.HeaderWriterFilter@6728fd9d, org.springframework.security.web.authentication.logout.LogoutFilter@33eccf4d, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@21fe6622, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@3e8f96aa, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2c0753e, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7b6596, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@84726d0, org.springframework.security.web.access.ExceptionTranslationFilter@237282e6, org.springframework.security.web.access.intercept.AuthorizationFilter@9bb44ec]
2024-07-10 14:10:34 - LiveReload server is running on port 35729
2024-07-10 14:10:34 - Starting ProtocolHandler ["http-nio-5001"]
2024-07-10 14:10:34 - Tomcat started on port(s): 5001 (http) with context path ''
2024-07-10 14:10:34 - Started SpringThymeleafApplication in 5.638 seconds (process running for 6.346)
2024-07-10 14:10:39 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-07-10 14:10:39 - Initializing Servlet 'dispatcherServlet'
2024-07-10 14:10:39 - Completed initialization in 1 ms
2024-07-10 14:10:39 - select n1_0.id,n1_0.cnpj_emissor,n1_0.data_captura,n1_0.data_emissao,n1_0.faixa_horario,n1_0.local_destino,n1_0.municipio_codigo,n1_0.numero_da_nota,n1_0.permissionario_cnpj,n1_0.portaria,n1_0.tipo_veiculo from nota n1_0 order by n1_0.data_captura desc offset ? rows fetch first ? rows only
2024-07-10 14:10:39 - select m1_0.ibge,m1_0.codigo,m1_0.nome,m1_0.uf from municipio m1_0
2024-07-10 14:10:39 - select p1_0.cnpj,p1_0.nome from permissionario p1_0
2024-07-10 14:10:53 - select m1_0.ibge,m1_0.codigo,m1_0.nome,m1_0.uf from municipio m1_0 where m1_0.ibge=?
2024-07-10 14:10:53 - select p1_0.cnpj,p1_0.nome from permissionario p1_0 where p1_0.cnpj=?
2024-07-10 14:10:53 - select n1_0.id,n1_0.cnpj_emissor,n1_0.data_captura,n1_0.data_emissao,n1_0.faixa_horario,n1_0.local_destino,n1_0.municipio_codigo,n1_0.numero_da_nota,n1_0.permissionario_cnpj,n1_0.portaria,n1_0.tipo_veiculo from nota n1_0 order by n1_0.data_captura desc offset ? rows fetch first ? rows only
2024-07-10 14:10:53 - select m1_0.ibge,m1_0.codigo,m1_0.nome,m1_0.uf from municipio m1_0
2024-07-10 14:10:53 - select p1_0.cnpj,p1_0.nome from permissionario p1_0
2024-07-10 14:12:41 - select m1_0.ibge,m1_0.codigo,m1_0.nome,m1_0.uf from municipio m1_0 where m1_0.ibge=?
2024-07-10 14:12:41 - select p1_0.cnpj,p1_0.nome from permissionario p1_0 where p1_0.cnpj=?
2024-07-10 14:12:41 - select n1_0.id,n1_0.cnpj_emissor,n1_0.data_captura,n1_0.data_emissao,n1_0.faixa_horario,n1_0.local_destino,n1_0.municipio_codigo,n1_0.numero_da_nota,n1_0.permissionario_cnpj,n1_0.portaria,n1_0.tipo_veiculo from nota n1_0 order by n1_0.data_captura desc offset ? rows fetch first ? rows only
2024-07-10 14:12:41 - select m1_0.ibge,m1_0.codigo,m1_0.nome,m1_0.uf from municipio m1_0
2024-07-10 14:12:41 - select p1_0.cnpj,p1_0.nome from permissionario p1_0
2024-07-10 14:15:00 - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2024-07-10 14:15:00 - Pausing ProtocolHandler ["http-nio-5001"]
2024-07-10 14:15:00 - Stopping service [Tomcat]
2024-07-10 14:15:00 - Destroying Spring FrameworkServlet 'dispatcherServlet'
2024-07-10 14:15:00 - Stopping ProtocolHandler ["http-nio-5001"]
2024-07-10 14:15:00 - Destroying ProtocolHandler ["http-nio-5001"]
2024-07-10 14:15:00 - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-10 14:15:00 - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@6a166d9a] for TypeConfiguration
2024-07-10 14:15:00 - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@2db23ad1] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@6a166d9a]
2024-07-10 14:15:00 - HikariPool-1 - Shutdown initiated...
2024-07-10 14:15:00 - HikariPool-1 - Shutdown completed.
2024-07-10 14:15:01 - Starting SpringThymeleafApplication using Java 17.0.7 with PID 9900 (C:\Users\fernando.correa\Documents\GitHub\workspace2023\app-devceasa01.2003\target\classes started by fernando.correa in C:\Users\fernando.correa\Documents\GitHub\workspace2023\app-devceasa01.2003)
2024-07-10 14:15:01 - No active profile set, falling back to 1 default profile: "default"
2024-07-10 14:15:01 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-10 14:15:01 - Finished Spring Data repository scanning in 40 ms. Found 15 JPA repository interfaces.
2024-07-10 14:15:01 - Tomcat initialized with port(s): 5001 (http)
2024-07-10 14:15:01 - Initializing ProtocolHandler ["http-nio-5001"]
2024-07-10 14:15:01 - Starting service [Tomcat]
2024-07-10 14:15:01 - Starting Servlet engine: [Apache Tomcat/10.1.15]
2024-07-10 14:15:01 - Initializing Spring embedded WebApplicationContext
2024-07-10 14:15:01 - Root WebApplicationContext: initialization completed in 397 ms
2024-07-10 14:15:01 - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-10 14:15:01 - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@1c0b1c8
2024-07-10 14:15:01 - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@1c0b1c8
2024-07-10 14:15:01 - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@1c0b1c8
2024-07-10 14:15:01 - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@3f95de2c
2024-07-10 14:15:01 - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@3f95de2c
2024-07-10 14:15:01 - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@216f31d1
2024-07-10 14:15:01 - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@216f31d1
2024-07-10 14:15:01 - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@1babda35
2024-07-10 14:15:01 - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@1babda35
2024-07-10 14:15:01 - Adding type registration byte -> org.hibernate.type.BasicTypeReference@1fe17679
2024-07-10 14:15:01 - Adding type registration byte -> org.hibernate.type.BasicTypeReference@1fe17679
2024-07-10 14:15:01 - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@1fe17679
2024-07-10 14:15:01 - Adding type registration binary -> org.hibernate.type.BasicTypeReference@1392e42f
2024-07-10 14:15:01 - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@1392e42f
2024-07-10 14:15:01 - Adding type registration [B -> org.hibernate.type.BasicTypeReference@1392e42f
2024-07-10 14:15:01 - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@7540a9a
2024-07-10 14:15:01 - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@7540a9a
2024-07-10 14:15:01 - Adding type registration image -> org.hibernate.type.BasicTypeReference@2c137160
2024-07-10 14:15:01 - Adding type registration blob -> org.hibernate.type.BasicTypeReference@153262d1
2024-07-10 14:15:01 - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@153262d1
2024-07-10 14:15:01 - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@11054fc4
2024-07-10 14:15:01 - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@362287a4
2024-07-10 14:15:01 - Adding type registration short -> org.hibernate.type.BasicTypeReference@18d7871
2024-07-10 14:15:01 - Adding type registration short -> org.hibernate.type.BasicTypeReference@18d7871
2024-07-10 14:15:01 - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@18d7871
2024-07-10 14:15:01 - Adding type registration integer -> org.hibernate.type.BasicTypeReference@72fa67b
2024-07-10 14:15:01 - Adding type registration int -> org.hibernate.type.BasicTypeReference@72fa67b
2024-07-10 14:15:01 - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@72fa67b
2024-07-10 14:15:01 - Adding type registration long -> org.hibernate.type.BasicTypeReference@3cefb235
2024-07-10 14:15:01 - Adding type registration long -> org.hibernate.type.BasicTypeReference@3cefb235
2024-07-10 14:15:01 - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@3cefb235
2024-07-10 14:15:01 - Adding type registration float -> org.hibernate.type.BasicTypeReference@1e521dab
2024-07-10 14:15:01 - Adding type registration float -> org.hibernate.type.BasicTypeReference@1e521dab
2024-07-10 14:15:01 - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@1e521dab
2024-07-10 14:15:01 - Adding type registration double -> org.hibernate.type.BasicTypeReference@74f6a0e0
2024-07-10 14:15:01 - Adding type registration double -> org.hibernate.type.BasicTypeReference@74f6a0e0
2024-07-10 14:15:01 - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@74f6a0e0
2024-07-10 14:15:01 - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@e90dc7b
2024-07-10 14:15:01 - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@e90dc7b
2024-07-10 14:15:01 - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@4f2fa986
2024-07-10 14:15:01 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@4f2fa986
2024-07-10 14:15:01 - Adding type registration character -> org.hibernate.type.BasicTypeReference@411e5a8d
2024-07-10 14:15:01 - Adding type registration char -> org.hibernate.type.BasicTypeReference@411e5a8d
2024-07-10 14:15:01 - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@411e5a8d
2024-07-10 14:15:01 - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@ae13ee
2024-07-10 14:15:01 - Adding type registration string -> org.hibernate.type.BasicTypeReference@8d57484
2024-07-10 14:15:01 - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@8d57484
2024-07-10 14:15:01 - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@3a849f81
2024-07-10 14:15:01 - Adding type registration characters -> org.hibernate.type.BasicTypeReference@97d706e
2024-07-10 14:15:01 - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@97d706e
2024-07-10 14:15:01 - Adding type registration [C -> org.hibernate.type.BasicTypeReference@97d706e
2024-07-10 14:15:01 - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@79bc33cc
2024-07-10 14:15:01 - Adding type registration text -> org.hibernate.type.BasicTypeReference@5aee192b
2024-07-10 14:15:01 - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@4408fd60
2024-07-10 14:15:01 - Adding type registration clob -> org.hibernate.type.BasicTypeReference@26941b8f
2024-07-10 14:15:01 - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@26941b8f
2024-07-10 14:15:01 - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@3e2e7ec2
2024-07-10 14:15:01 - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@3e2e7ec2
2024-07-10 14:15:01 - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@14231f6d
2024-07-10 14:15:01 - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@17430374
2024-07-10 14:15:01 - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@110d3a70
2024-07-10 14:15:01 - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@5c989efd
2024-07-10 14:15:01 - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@504c2a74
2024-07-10 14:15:01 - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@5f9bcbaa
2024-07-10 14:15:01 - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@27bda493
2024-07-10 14:15:01 - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@27bda493
2024-07-10 14:15:01 - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@3fcaa9ef
2024-07-10 14:15:01 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@3fcaa9ef
2024-07-10 14:15:01 - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@e642be8
2024-07-10 14:15:01 - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@e642be8
2024-07-10 14:15:01 - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@f237715
2024-07-10 14:15:01 - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@f237715
2024-07-10 14:15:01 - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@45f0c35e
2024-07-10 14:15:01 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@45f0c35e
2024-07-10 14:15:01 - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2f9f8fde
2024-07-10 14:15:01 - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@8bdaae
2024-07-10 14:15:01 - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@14849e75
2024-07-10 14:15:01 - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@14849e75
2024-07-10 14:15:01 - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@572d5588
2024-07-10 14:15:01 - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@41fd1cc
2024-07-10 14:15:01 - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@5a1f254b
2024-07-10 14:15:01 - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@6ad86f4b
2024-07-10 14:15:01 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@6ad86f4b
2024-07-10 14:15:01 - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@57e4e68d
2024-07-10 14:15:01 - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@2d8fcc0c
2024-07-10 14:15:01 - Adding type registration date -> org.hibernate.type.BasicTypeReference@e19918b
2024-07-10 14:15:01 - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@e19918b
2024-07-10 14:15:01 - Adding type registration time -> org.hibernate.type.BasicTypeReference@27920534
2024-07-10 14:15:01 - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@27920534
2024-07-10 14:15:01 - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@57325fc5
2024-07-10 14:15:01 - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@57325fc5
2024-07-10 14:15:01 - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@57325fc5
2024-07-10 14:15:01 - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@40e1683
2024-07-10 14:15:01 - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@40e1683
2024-07-10 14:15:01 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@40e1683
2024-07-10 14:15:01 - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@46595a40
2024-07-10 14:15:01 - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@71554c1a
2024-07-10 14:15:01 - Adding type registration instant -> org.hibernate.type.BasicTypeReference@345ce982
2024-07-10 14:15:01 - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@345ce982
2024-07-10 14:15:01 - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@40125b84
2024-07-10 14:15:01 - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@40125b84
2024-07-10 14:15:01 - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@40125b84
2024-07-10 14:15:01 - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@4c15929c
2024-07-10 14:15:01 - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@177b3298
2024-07-10 14:15:01 - Adding type registration class -> org.hibernate.type.BasicTypeReference@44b8d90c
2024-07-10 14:15:01 - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@44b8d90c
2024-07-10 14:15:01 - Adding type registration currency -> org.hibernate.type.BasicTypeReference@16247464
2024-07-10 14:15:01 - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@16247464
2024-07-10 14:15:01 - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@16247464
2024-07-10 14:15:01 - Adding type registration locale -> org.hibernate.type.BasicTypeReference@7645954e
2024-07-10 14:15:01 - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@7645954e
2024-07-10 14:15:01 - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@386486ec
2024-07-10 14:15:01 - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@386486ec
2024-07-10 14:15:01 - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@3a165855
2024-07-10 14:15:01 - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@3a165855
2024-07-10 14:15:01 - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@f249c27
2024-07-10 14:15:01 - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@f249c27
2024-07-10 14:15:01 - Adding type registration url -> org.hibernate.type.BasicTypeReference@55919768
2024-07-10 14:15:01 - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@55919768
2024-07-10 14:15:01 - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@495e28d0
2024-07-10 14:15:01 - Adding type registration object -> org.hibernate.type.JavaObjectType@5682c99a
2024-07-10 14:15:01 - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@5682c99a
2024-07-10 14:15:01 - Adding type registration null -> org.hibernate.type.NullType@4939ec4c
2024-07-10 14:15:01 - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@7df492f1
2024-07-10 14:15:01 - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@5f2bc30e
2024-07-10 14:15:01 - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@12dd7198
2024-07-10 14:15:01 - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@54e42ed7
2024-07-10 14:15:01 - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@dde5da0
2024-07-10 14:15:01 - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@c6cdca6
2024-07-10 14:15:01 - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@75442d02
2024-07-10 14:15:01 - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@a337eb
2024-07-10 14:15:01 - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-10 14:15:01 - HikariPool-2 - Starting...
2024-07-10 14:15:01 - HikariPool-2 - Added connection org.postgresql.jdbc.PgConnection@17071c80
2024-07-10 14:15:01 - HikariPool-2 - Start completed.
2024-07-10 14:15:01 - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-07-10 14:15:01 - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@735f534c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3d086622)
2024-07-10 14:15:01 - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2024-07-10 14:15:01 - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-07-10 14:15:01 - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@2c70724d
2024-07-10 14:15:01 - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@2c70724d
2024-07-10 14:15:01 - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@5682c99a`
2024-07-10 14:15:01 - Adding type registration Duration -> basicType@20(java.time.Duration,2)
2024-07-10 14:15:01 - Adding type registration java.time.Duration -> basicType@20(java.time.Duration,2)
2024-07-10 14:15:01 - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@21(java.time.OffsetDateTime,3003)
2024-07-10 14:15:01 - Adding type registration OffsetDateTime -> basicType@21(java.time.OffsetDateTime,3003)
2024-07-10 14:15:01 - Adding type registration java.time.OffsetDateTime -> basicType@21(java.time.OffsetDateTime,3003)
2024-07-10 14:15:01 - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@22(java.time.ZonedDateTime,3003)
2024-07-10 14:15:01 - Adding type registration ZonedDateTime -> basicType@22(java.time.ZonedDateTime,3003)
2024-07-10 14:15:01 - Adding type registration java.time.ZonedDateTime -> basicType@22(java.time.ZonedDateTime,3003)
2024-07-10 14:15:01 - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@23(java.time.OffsetTime,3007)
2024-07-10 14:15:01 - Adding type registration OffsetTime -> basicType@23(java.time.OffsetTime,3007)
2024-07-10 14:15:01 - Adding type registration java.time.OffsetTime -> basicType@23(java.time.OffsetTime,3007)
2024-07-10 14:15:01 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2b9925d8] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@22d5c6d4]
2024-07-10 14:15:01 - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-10 14:15:01 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2b9925d8] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@64ac78c]
2024-07-10 14:15:01 - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@64ac78c] for TypeConfiguration
2024-07-10 14:15:01 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-10 14:15:02 - No authentication manager set. Reauthentication of users when changing passwords will not be performed.
2024-07-10 14:15:02 - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@9cfbb53, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5c55c1c5, org.springframework.security.web.context.SecurityContextHolderFilter@2d14fc93, org.springframework.security.web.header.HeaderWriterFilter@6e80d4a7, org.springframework.security.web.authentication.logout.LogoutFilter@45fa41e2, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@4705fedf, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@5067428c, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@682d8e12, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@274d1157, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@344e3f96, org.springframework.security.web.access.ExceptionTranslationFilter@6d84456d, org.springframework.security.web.access.intercept.AuthorizationFilter@eab7c8b]
2024-07-10 14:15:02 - LiveReload server is running on port 35729
2024-07-10 14:15:02 - Starting ProtocolHandler ["http-nio-5001"]
2024-07-10 14:15:02 - Tomcat started on port(s): 5001 (http) with context path ''
2024-07-10 14:15:02 - Started SpringThymeleafApplication in 1.587 seconds (process running for 274.302)
2024-07-10 14:15:02 - Condition evaluation unchanged
2024-07-10 14:15:30 - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2024-07-10 14:15:30 - Pausing ProtocolHandler ["http-nio-5001"]
2024-07-10 14:15:30 - Stopping service [Tomcat]
2024-07-10 14:15:30 - Stopping ProtocolHandler ["http-nio-5001"]
2024-07-10 14:15:30 - Destroying ProtocolHandler ["http-nio-5001"]
2024-07-10 14:15:30 - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-10 14:15:30 - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@64ac78c] for TypeConfiguration
2024-07-10 14:15:30 - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@2130599a] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@64ac78c]
2024-07-10 14:15:30 - HikariPool-2 - Shutdown initiated...
2024-07-10 14:15:30 - HikariPool-2 - Shutdown completed.
2024-07-10 14:15:31 - Starting SpringThymeleafApplication using Java 17.0.7 with PID 9900 (C:\Users\fernando.correa\Documents\GitHub\workspace2023\app-devceasa01.2003\target\classes started by fernando.correa in C:\Users\fernando.correa\Documents\GitHub\workspace2023\app-devceasa01.2003)
2024-07-10 14:15:31 - No active profile set, falling back to 1 default profile: "default"
2024-07-10 14:15:31 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-10 14:15:31 - Finished Spring Data repository scanning in 41 ms. Found 15 JPA repository interfaces.
2024-07-10 14:15:31 - Tomcat initialized with port(s): 5001 (http)
2024-07-10 14:15:31 - Initializing ProtocolHandler ["http-nio-5001"]
2024-07-10 14:15:31 - Starting service [Tomcat]
2024-07-10 14:15:31 - Starting Servlet engine: [Apache Tomcat/10.1.15]
2024-07-10 14:15:31 - Initializing Spring embedded WebApplicationContext
2024-07-10 14:15:31 - Root WebApplicationContext: initialization completed in 398 ms
2024-07-10 14:15:31 - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-10 14:15:31 - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@1c0b1c8
2024-07-10 14:15:31 - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@1c0b1c8
2024-07-10 14:15:31 - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@1c0b1c8
2024-07-10 14:15:31 - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@3f95de2c
2024-07-10 14:15:31 - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@3f95de2c
2024-07-10 14:15:31 - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@216f31d1
2024-07-10 14:15:31 - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@216f31d1
2024-07-10 14:15:31 - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@1babda35
2024-07-10 14:15:31 - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@1babda35
2024-07-10 14:15:31 - Adding type registration byte -> org.hibernate.type.BasicTypeReference@1fe17679
2024-07-10 14:15:31 - Adding type registration byte -> org.hibernate.type.BasicTypeReference@1fe17679
2024-07-10 14:15:31 - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@1fe17679
2024-07-10 14:15:31 - Adding type registration binary -> org.hibernate.type.BasicTypeReference@1392e42f
2024-07-10 14:15:31 - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@1392e42f
2024-07-10 14:15:31 - Adding type registration [B -> org.hibernate.type.BasicTypeReference@1392e42f
2024-07-10 14:15:31 - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@7540a9a
2024-07-10 14:15:31 - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@7540a9a
2024-07-10 14:15:31 - Adding type registration image -> org.hibernate.type.BasicTypeReference@2c137160
2024-07-10 14:15:31 - Adding type registration blob -> org.hibernate.type.BasicTypeReference@153262d1
2024-07-10 14:15:31 - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@153262d1
2024-07-10 14:15:31 - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@11054fc4
2024-07-10 14:15:31 - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@362287a4
2024-07-10 14:15:31 - Adding type registration short -> org.hibernate.type.BasicTypeReference@18d7871
2024-07-10 14:15:31 - Adding type registration short -> org.hibernate.type.BasicTypeReference@18d7871
2024-07-10 14:15:31 - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@18d7871
2024-07-10 14:15:31 - Adding type registration integer -> org.hibernate.type.BasicTypeReference@72fa67b
2024-07-10 14:15:31 - Adding type registration int -> org.hibernate.type.BasicTypeReference@72fa67b
2024-07-10 14:15:31 - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@72fa67b
2024-07-10 14:15:31 - Adding type registration long -> org.hibernate.type.BasicTypeReference@3cefb235
2024-07-10 14:15:31 - Adding type registration long -> org.hibernate.type.BasicTypeReference@3cefb235
2024-07-10 14:15:31 - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@3cefb235
2024-07-10 14:15:31 - Adding type registration float -> org.hibernate.type.BasicTypeReference@1e521dab
2024-07-10 14:15:31 - Adding type registration float -> org.hibernate.type.BasicTypeReference@1e521dab
2024-07-10 14:15:31 - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@1e521dab
2024-07-10 14:15:31 - Adding type registration double -> org.hibernate.type.BasicTypeReference@74f6a0e0
2024-07-10 14:15:31 - Adding type registration double -> org.hibernate.type.BasicTypeReference@74f6a0e0
2024-07-10 14:15:31 - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@74f6a0e0
2024-07-10 14:15:31 - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@e90dc7b
2024-07-10 14:15:31 - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@e90dc7b
2024-07-10 14:15:31 - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@4f2fa986
2024-07-10 14:15:31 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@4f2fa986
2024-07-10 14:15:31 - Adding type registration character -> org.hibernate.type.BasicTypeReference@411e5a8d
2024-07-10 14:15:31 - Adding type registration char -> org.hibernate.type.BasicTypeReference@411e5a8d
2024-07-10 14:15:31 - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@411e5a8d
2024-07-10 14:15:31 - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@ae13ee
2024-07-10 14:15:31 - Adding type registration string -> org.hibernate.type.BasicTypeReference@8d57484
2024-07-10 14:15:31 - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@8d57484
2024-07-10 14:15:31 - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@3a849f81
2024-07-10 14:15:31 - Adding type registration characters -> org.hibernate.type.BasicTypeReference@97d706e
2024-07-10 14:15:31 - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@97d706e
2024-07-10 14:15:31 - Adding type registration [C -> org.hibernate.type.BasicTypeReference@97d706e
2024-07-10 14:15:31 - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@79bc33cc
2024-07-10 14:15:31 - Adding type registration text -> org.hibernate.type.BasicTypeReference@5aee192b
2024-07-10 14:15:31 - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@4408fd60
2024-07-10 14:15:31 - Adding type registration clob -> org.hibernate.type.BasicTypeReference@26941b8f
2024-07-10 14:15:31 - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@26941b8f
2024-07-10 14:15:31 - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@3e2e7ec2
2024-07-10 14:15:31 - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@3e2e7ec2
2024-07-10 14:15:31 - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@14231f6d
2024-07-10 14:15:31 - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@17430374
2024-07-10 14:15:31 - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@110d3a70
2024-07-10 14:15:31 - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@5c989efd
2024-07-10 14:15:31 - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@504c2a74
2024-07-10 14:15:31 - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@5f9bcbaa
2024-07-10 14:15:31 - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@27bda493
2024-07-10 14:15:31 - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@27bda493
2024-07-10 14:15:31 - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@3fcaa9ef
2024-07-10 14:15:31 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@3fcaa9ef
2024-07-10 14:15:31 - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@e642be8
2024-07-10 14:15:31 - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@e642be8
2024-07-10 14:15:31 - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@f237715
2024-07-10 14:15:31 - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@f237715
2024-07-10 14:15:31 - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@45f0c35e
2024-07-10 14:15:31 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@45f0c35e
2024-07-10 14:15:31 - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2f9f8fde
2024-07-10 14:15:31 - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@8bdaae
2024-07-10 14:15:31 - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@14849e75
2024-07-10 14:15:31 - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@14849e75
2024-07-10 14:15:31 - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@572d5588
2024-07-10 14:15:31 - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@41fd1cc
2024-07-10 14:15:31 - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@5a1f254b
2024-07-10 14:15:31 - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@6ad86f4b
2024-07-10 14:15:31 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@6ad86f4b
2024-07-10 14:15:31 - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@57e4e68d
2024-07-10 14:15:31 - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@2d8fcc0c
2024-07-10 14:15:31 - Adding type registration date -> org.hibernate.type.BasicTypeReference@e19918b
2024-07-10 14:15:31 - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@e19918b
2024-07-10 14:15:31 - Adding type registration time -> org.hibernate.type.BasicTypeReference@27920534
2024-07-10 14:15:31 - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@27920534
2024-07-10 14:15:31 - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@57325fc5
2024-07-10 14:15:31 - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@57325fc5
2024-07-10 14:15:31 - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@57325fc5
2024-07-10 14:15:31 - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@40e1683
2024-07-10 14:15:31 - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@40e1683
2024-07-10 14:15:31 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@40e1683
2024-07-10 14:15:31 - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@46595a40
2024-07-10 14:15:31 - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@71554c1a
2024-07-10 14:15:31 - Adding type registration instant -> org.hibernate.type.BasicTypeReference@345ce982
2024-07-10 14:15:31 - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@345ce982
2024-07-10 14:15:31 - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@40125b84
2024-07-10 14:15:31 - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@40125b84
2024-07-10 14:15:31 - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@40125b84
2024-07-10 14:15:31 - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@4c15929c
2024-07-10 14:15:31 - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@177b3298
2024-07-10 14:15:31 - Adding type registration class -> org.hibernate.type.BasicTypeReference@44b8d90c
2024-07-10 14:15:31 - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@44b8d90c
2024-07-10 14:15:31 - Adding type registration currency -> org.hibernate.type.BasicTypeReference@16247464
2024-07-10 14:15:31 - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@16247464
2024-07-10 14:15:31 - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@16247464
2024-07-10 14:15:31 - Adding type registration locale -> org.hibernate.type.BasicTypeReference@7645954e
2024-07-10 14:15:31 - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@7645954e
2024-07-10 14:15:31 - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@386486ec
2024-07-10 14:15:31 - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@386486ec
2024-07-10 14:15:31 - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@3a165855
2024-07-10 14:15:31 - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@3a165855
2024-07-10 14:15:31 - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@f249c27
2024-07-10 14:15:31 - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@f249c27
2024-07-10 14:15:31 - Adding type registration url -> org.hibernate.type.BasicTypeReference@55919768
2024-07-10 14:15:31 - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@55919768
2024-07-10 14:15:31 - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@495e28d0
2024-07-10 14:15:31 - Adding type registration object -> org.hibernate.type.JavaObjectType@5682c99a
2024-07-10 14:15:31 - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@5682c99a
2024-07-10 14:15:31 - Adding type registration null -> org.hibernate.type.NullType@4939ec4c
2024-07-10 14:15:31 - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@3a8a72d9
2024-07-10 14:15:31 - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@469be97d
2024-07-10 14:15:31 - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@7f979c1a
2024-07-10 14:15:31 - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@6fe5bde6
2024-07-10 14:15:31 - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@6901679
2024-07-10 14:15:31 - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@1f59c7d7
2024-07-10 14:15:31 - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@5cedff6a
2024-07-10 14:15:31 - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@1ea5639c
2024-07-10 14:15:31 - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-10 14:15:31 - HikariPool-3 - Starting...
2024-07-10 14:15:31 - HikariPool-3 - Added connection org.postgresql.jdbc.PgConnection@4f1f03e9
2024-07-10 14:15:31 - HikariPool-3 - Start completed.
2024-07-10 14:15:31 - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-07-10 14:15:31 - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@536c8010) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2e153094)
2024-07-10 14:15:31 - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2024-07-10 14:15:31 - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-07-10 14:15:31 - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@4d501574
2024-07-10 14:15:31 - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@4d501574
2024-07-10 14:15:31 - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@5682c99a`
2024-07-10 14:15:31 - Adding type registration Duration -> basicType@39(java.time.Duration,2)
2024-07-10 14:15:31 - Adding type registration java.time.Duration -> basicType@39(java.time.Duration,2)
2024-07-10 14:15:31 - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@40(java.time.OffsetDateTime,3003)
2024-07-10 14:15:31 - Adding type registration OffsetDateTime -> basicType@40(java.time.OffsetDateTime,3003)
2024-07-10 14:15:31 - Adding type registration java.time.OffsetDateTime -> basicType@40(java.time.OffsetDateTime,3003)
2024-07-10 14:15:31 - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@41(java.time.ZonedDateTime,3003)
2024-07-10 14:15:31 - Adding type registration ZonedDateTime -> basicType@41(java.time.ZonedDateTime,3003)
2024-07-10 14:15:31 - Adding type registration java.time.ZonedDateTime -> basicType@41(java.time.ZonedDateTime,3003)
2024-07-10 14:15:31 - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@42(java.time.OffsetTime,3007)
2024-07-10 14:15:31 - Adding type registration OffsetTime -> basicType@42(java.time.OffsetTime,3007)
2024-07-10 14:15:31 - Adding type registration java.time.OffsetTime -> basicType@42(java.time.OffsetTime,3007)
2024-07-10 14:15:31 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7a67577c] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4dbc3420]
2024-07-10 14:15:31 - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-10 14:15:31 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7a67577c] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@3c674f6d]
2024-07-10 14:15:31 - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@3c674f6d] for TypeConfiguration
2024-07-10 14:15:31 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-10 14:15:32 - No authentication manager set. Reauthentication of users when changing passwords will not be performed.
2024-07-10 14:15:32 - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@15624f8a, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@38f3e35c, org.springframework.security.web.context.SecurityContextHolderFilter@5e4e5897, org.springframework.security.web.header.HeaderWriterFilter@404edbe4, org.springframework.security.web.authentication.logout.LogoutFilter@1b005408, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@514bca76, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@48726443, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@849e7df, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@10152b4, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3764864e, org.springframework.security.web.access.ExceptionTranslationFilter@47a9cd17, org.springframework.security.web.access.intercept.AuthorizationFilter@572f5268]
2024-07-10 14:15:32 - LiveReload server is running on port 35729
2024-07-10 14:15:32 - Starting ProtocolHandler ["http-nio-5001"]
2024-07-10 14:15:32 - Tomcat started on port(s): 5001 (http) with context path ''
2024-07-10 14:15:32 - Started SpringThymeleafApplication in 1.57 seconds (process running for 304.333)
2024-07-10 14:15:32 - Condition evaluation unchanged
2024-07-10 14:15:36 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-07-10 14:15:36 - Initializing Servlet 'dispatcherServlet'
2024-07-10 14:15:36 - Completed initialization in 1 ms
2024-07-10 14:15:36 - select m1_0.ibge,m1_0.codigo,m1_0.nome,m1_0.uf from municipio m1_0 where m1_0.ibge=?
2024-07-10 14:15:36 - select p1_0.cnpj,p1_0.nome from permissionario p1_0 where p1_0.cnpj=?
2024-07-10 14:15:36 - ID da entidade: null
2024-07-10 14:15:36 - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.reflect.UndeclaredThrowableException] with root cause
com.fasterxml.jackson.databind.exc.InvalidDefinitionException: Java 8 date/time type `java.time.LocalDate` not supported by default: add Module "com.fasterxml.jackson.datatype:jackson-datatype-jsr310" to enable handling (through reference chain: com.flc.springthymeleaf.domain.Nota["dataCaptura"])
	at com.fasterxml.jackson.databind.exc.InvalidDefinitionException.from(InvalidDefinitionException.java:77)
	at com.fasterxml.jackson.databind.SerializerProvider.reportBadDefinition(SerializerProvider.java:1308)
	at com.fasterxml.jackson.databind.ser.impl.UnsupportedTypeSerializer.serialize(UnsupportedTypeSerializer.java:35)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider._serialize(DefaultSerializerProvider.java:479)
	at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.serializeValue(DefaultSerializerProvider.java:318)
	at com.fasterxml.jackson.databind.ObjectMapper._writeValueAndClose(ObjectMapper.java:4719)
	at com.fasterxml.jackson.databind.ObjectMapper.writeValueAsString(ObjectMapper.java:3964)
	at com.flc.springthymeleaf.aspect.AuditAspect.beforeSave(AuditAspect.java:41)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJMethodBeforeAdvice.before(AspectJMethodBeforeAdvice.java:44)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:57)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at com.flc.springthymeleaf.service.NotaService$$SpringCGLIB$$0.save(<generated>)
	at com.flc.springthymeleaf.web.NotaController.salvarNota(NotaController.java:98)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:168)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2024-07-10 14:15:44 - select n1_0.id,n1_0.cnpj_emissor,n1_0.data_captura,n1_0.data_emissao,n1_0.faixa_horario,n1_0.local_destino,n1_0.municipio_codigo,n1_0.numero_da_nota,n1_0.permissionario_cnpj,n1_0.portaria,n1_0.tipo_veiculo from nota n1_0 order by n1_0.data_captura desc offset ? rows fetch first ? rows only
2024-07-10 14:15:44 - select m1_0.ibge,m1_0.codigo,m1_0.nome,m1_0.uf from municipio m1_0
2024-07-10 14:15:45 - select p1_0.cnpj,p1_0.nome from permissionario p1_0
2024-07-10 14:15:59 - select m1_0.ibge,m1_0.codigo,m1_0.nome,m1_0.uf from municipio m1_0 where m1_0.ibge=?
2024-07-10 14:15:59 - select p1_0.cnpj,p1_0.nome from permissionario p1_0 where p1_0.cnpj=?
2024-07-10 14:15:59 - ID da entidade: null
2024-07-10 14:15:59 - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.reflect.UndeclaredThrowableException] with root cause
com.fasterxml.jackson.databind.exc.InvalidDefinitionException: Java 8 date/time type `java.time.LocalDate` not supported by default: add Module "com.fasterxml.jackson.datatype:jackson-datatype-jsr310" to enable handling (through reference chain: com.flc.springthymeleaf.domain.Nota["dataCaptura"])
	at com.fasterxml.jackson.databind.exc.InvalidDefinitionException.from(InvalidDefinitionException.java:77)
	at com.fasterxml.jackson.databind.SerializerProvider.reportBadDefinition(SerializerProvider.java:1308)
	at com.fasterxml.jackson.databind.ser.impl.UnsupportedTypeSerializer.serialize(UnsupportedTypeSerializer.java:35)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider._serialize(DefaultSerializerProvider.java:479)
	at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.serializeValue(DefaultSerializerProvider.java:318)
	at com.fasterxml.jackson.databind.ObjectMapper._writeValueAndClose(ObjectMapper.java:4719)
	at com.fasterxml.jackson.databind.ObjectMapper.writeValueAsString(ObjectMapper.java:3964)
	at com.flc.springthymeleaf.aspect.AuditAspect.beforeSave(AuditAspect.java:41)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJMethodBeforeAdvice.before(AspectJMethodBeforeAdvice.java:44)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:57)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at com.flc.springthymeleaf.service.NotaService$$SpringCGLIB$$0.save(<generated>)
	at com.flc.springthymeleaf.web.NotaController.salvarNota(NotaController.java:98)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:168)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2024-07-10 14:18:16 - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2024-07-10 14:18:16 - Pausing ProtocolHandler ["http-nio-5001"]
2024-07-10 14:18:16 - Stopping service [Tomcat]
2024-07-10 14:18:16 - Destroying Spring FrameworkServlet 'dispatcherServlet'
2024-07-10 14:18:16 - Stopping ProtocolHandler ["http-nio-5001"]
2024-07-10 14:18:16 - Destroying ProtocolHandler ["http-nio-5001"]
2024-07-10 14:18:16 - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-10 14:18:16 - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@3c674f6d] for TypeConfiguration
2024-07-10 14:18:16 - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@5f734fb] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@3c674f6d]
2024-07-10 14:18:16 - HikariPool-3 - Shutdown initiated...
2024-07-10 14:18:16 - HikariPool-3 - Shutdown completed.
2024-07-10 14:18:16 - Starting SpringThymeleafApplication using Java 17.0.7 with PID 9900 (C:\Users\fernando.correa\Documents\GitHub\workspace2023\app-devceasa01.2003\target\classes started by fernando.correa in C:\Users\fernando.correa\Documents\GitHub\workspace2023\app-devceasa01.2003)
2024-07-10 14:18:16 - No active profile set, falling back to 1 default profile: "default"
2024-07-10 14:18:16 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-10 14:18:16 - Finished Spring Data repository scanning in 37 ms. Found 15 JPA repository interfaces.
2024-07-10 14:18:16 - Tomcat initialized with port(s): 5001 (http)
2024-07-10 14:18:16 - Initializing ProtocolHandler ["http-nio-5001"]
2024-07-10 14:18:16 - Starting service [Tomcat]
2024-07-10 14:18:16 - Starting Servlet engine: [Apache Tomcat/10.1.15]
2024-07-10 14:18:16 - Initializing Spring embedded WebApplicationContext
2024-07-10 14:18:16 - Root WebApplicationContext: initialization completed in 361 ms
2024-07-10 14:18:16 - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-10 14:18:16 - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@1c0b1c8
2024-07-10 14:18:16 - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@1c0b1c8
2024-07-10 14:18:16 - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@1c0b1c8
2024-07-10 14:18:16 - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@3f95de2c
2024-07-10 14:18:16 - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@3f95de2c
2024-07-10 14:18:16 - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@216f31d1
2024-07-10 14:18:16 - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@216f31d1
2024-07-10 14:18:16 - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@1babda35
2024-07-10 14:18:16 - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@1babda35
2024-07-10 14:18:16 - Adding type registration byte -> org.hibernate.type.BasicTypeReference@1fe17679
2024-07-10 14:18:16 - Adding type registration byte -> org.hibernate.type.BasicTypeReference@1fe17679
2024-07-10 14:18:16 - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@1fe17679
2024-07-10 14:18:16 - Adding type registration binary -> org.hibernate.type.BasicTypeReference@1392e42f
2024-07-10 14:18:16 - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@1392e42f
2024-07-10 14:18:16 - Adding type registration [B -> org.hibernate.type.BasicTypeReference@1392e42f
2024-07-10 14:18:16 - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@7540a9a
2024-07-10 14:18:16 - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@7540a9a
2024-07-10 14:18:16 - Adding type registration image -> org.hibernate.type.BasicTypeReference@2c137160
2024-07-10 14:18:16 - Adding type registration blob -> org.hibernate.type.BasicTypeReference@153262d1
2024-07-10 14:18:16 - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@153262d1
2024-07-10 14:18:16 - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@11054fc4
2024-07-10 14:18:16 - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@362287a4
2024-07-10 14:18:16 - Adding type registration short -> org.hibernate.type.BasicTypeReference@18d7871
2024-07-10 14:18:16 - Adding type registration short -> org.hibernate.type.BasicTypeReference@18d7871
2024-07-10 14:18:16 - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@18d7871
2024-07-10 14:18:16 - Adding type registration integer -> org.hibernate.type.BasicTypeReference@72fa67b
2024-07-10 14:18:16 - Adding type registration int -> org.hibernate.type.BasicTypeReference@72fa67b
2024-07-10 14:18:16 - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@72fa67b
2024-07-10 14:18:16 - Adding type registration long -> org.hibernate.type.BasicTypeReference@3cefb235
2024-07-10 14:18:16 - Adding type registration long -> org.hibernate.type.BasicTypeReference@3cefb235
2024-07-10 14:18:16 - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@3cefb235
2024-07-10 14:18:16 - Adding type registration float -> org.hibernate.type.BasicTypeReference@1e521dab
2024-07-10 14:18:16 - Adding type registration float -> org.hibernate.type.BasicTypeReference@1e521dab
2024-07-10 14:18:16 - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@1e521dab
2024-07-10 14:18:16 - Adding type registration double -> org.hibernate.type.BasicTypeReference@74f6a0e0
2024-07-10 14:18:16 - Adding type registration double -> org.hibernate.type.BasicTypeReference@74f6a0e0
2024-07-10 14:18:16 - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@74f6a0e0
2024-07-10 14:18:16 - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@e90dc7b
2024-07-10 14:18:16 - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@e90dc7b
2024-07-10 14:18:16 - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@4f2fa986
2024-07-10 14:18:16 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@4f2fa986
2024-07-10 14:18:16 - Adding type registration character -> org.hibernate.type.BasicTypeReference@411e5a8d
2024-07-10 14:18:16 - Adding type registration char -> org.hibernate.type.BasicTypeReference@411e5a8d
2024-07-10 14:18:16 - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@411e5a8d
2024-07-10 14:18:16 - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@ae13ee
2024-07-10 14:18:16 - Adding type registration string -> org.hibernate.type.BasicTypeReference@8d57484
2024-07-10 14:18:16 - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@8d57484
2024-07-10 14:18:16 - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@3a849f81
2024-07-10 14:18:16 - Adding type registration characters -> org.hibernate.type.BasicTypeReference@97d706e
2024-07-10 14:18:16 - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@97d706e
2024-07-10 14:18:16 - Adding type registration [C -> org.hibernate.type.BasicTypeReference@97d706e
2024-07-10 14:18:16 - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@79bc33cc
2024-07-10 14:18:16 - Adding type registration text -> org.hibernate.type.BasicTypeReference@5aee192b
2024-07-10 14:18:16 - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@4408fd60
2024-07-10 14:18:16 - Adding type registration clob -> org.hibernate.type.BasicTypeReference@26941b8f
2024-07-10 14:18:16 - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@26941b8f
2024-07-10 14:18:16 - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@3e2e7ec2
2024-07-10 14:18:16 - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@3e2e7ec2
2024-07-10 14:18:16 - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@14231f6d
2024-07-10 14:18:16 - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@17430374
2024-07-10 14:18:16 - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@110d3a70
2024-07-10 14:18:16 - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@5c989efd
2024-07-10 14:18:16 - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@504c2a74
2024-07-10 14:18:16 - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@5f9bcbaa
2024-07-10 14:18:16 - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@27bda493
2024-07-10 14:18:16 - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@27bda493
2024-07-10 14:18:16 - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@3fcaa9ef
2024-07-10 14:18:16 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@3fcaa9ef
2024-07-10 14:18:16 - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@e642be8
2024-07-10 14:18:16 - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@e642be8
2024-07-10 14:18:16 - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@f237715
2024-07-10 14:18:16 - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@f237715
2024-07-10 14:18:16 - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@45f0c35e
2024-07-10 14:18:16 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@45f0c35e
2024-07-10 14:18:16 - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2f9f8fde
2024-07-10 14:18:16 - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@8bdaae
2024-07-10 14:18:16 - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@14849e75
2024-07-10 14:18:16 - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@14849e75
2024-07-10 14:18:16 - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@572d5588
2024-07-10 14:18:16 - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@41fd1cc
2024-07-10 14:18:16 - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@5a1f254b
2024-07-10 14:18:16 - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@6ad86f4b
2024-07-10 14:18:16 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@6ad86f4b
2024-07-10 14:18:16 - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@57e4e68d
2024-07-10 14:18:16 - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@2d8fcc0c
2024-07-10 14:18:16 - Adding type registration date -> org.hibernate.type.BasicTypeReference@e19918b
2024-07-10 14:18:16 - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@e19918b
2024-07-10 14:18:16 - Adding type registration time -> org.hibernate.type.BasicTypeReference@27920534
2024-07-10 14:18:16 - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@27920534
2024-07-10 14:18:16 - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@57325fc5
2024-07-10 14:18:16 - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@57325fc5
2024-07-10 14:18:16 - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@57325fc5
2024-07-10 14:18:16 - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@40e1683
2024-07-10 14:18:16 - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@40e1683
2024-07-10 14:18:16 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@40e1683
2024-07-10 14:18:16 - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@46595a40
2024-07-10 14:18:16 - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@71554c1a
2024-07-10 14:18:16 - Adding type registration instant -> org.hibernate.type.BasicTypeReference@345ce982
2024-07-10 14:18:16 - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@345ce982
2024-07-10 14:18:16 - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@40125b84
2024-07-10 14:18:16 - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@40125b84
2024-07-10 14:18:16 - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@40125b84
2024-07-10 14:18:16 - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@4c15929c
2024-07-10 14:18:16 - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@177b3298
2024-07-10 14:18:16 - Adding type registration class -> org.hibernate.type.BasicTypeReference@44b8d90c
2024-07-10 14:18:16 - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@44b8d90c
2024-07-10 14:18:16 - Adding type registration currency -> org.hibernate.type.BasicTypeReference@16247464
2024-07-10 14:18:16 - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@16247464
2024-07-10 14:18:16 - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@16247464
2024-07-10 14:18:16 - Adding type registration locale -> org.hibernate.type.BasicTypeReference@7645954e
2024-07-10 14:18:16 - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@7645954e
2024-07-10 14:18:16 - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@386486ec
2024-07-10 14:18:16 - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@386486ec
2024-07-10 14:18:16 - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@3a165855
2024-07-10 14:18:16 - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@3a165855
2024-07-10 14:18:16 - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@f249c27
2024-07-10 14:18:16 - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@f249c27
2024-07-10 14:18:16 - Adding type registration url -> org.hibernate.type.BasicTypeReference@55919768
2024-07-10 14:18:16 - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@55919768
2024-07-10 14:18:16 - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@495e28d0
2024-07-10 14:18:16 - Adding type registration object -> org.hibernate.type.JavaObjectType@5682c99a
2024-07-10 14:18:16 - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@5682c99a
2024-07-10 14:18:16 - Adding type registration null -> org.hibernate.type.NullType@4939ec4c
2024-07-10 14:18:16 - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@12267608
2024-07-10 14:18:16 - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@47bd4542
2024-07-10 14:18:16 - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@413fedd
2024-07-10 14:18:16 - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@578d6ccf
2024-07-10 14:18:16 - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@76bac600
2024-07-10 14:18:16 - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@5b001ac0
2024-07-10 14:18:16 - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@407ef26b
2024-07-10 14:18:16 - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@7ca905bf
2024-07-10 14:18:16 - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-10 14:18:16 - HikariPool-4 - Starting...
2024-07-10 14:18:16 - HikariPool-4 - Added connection org.postgresql.jdbc.PgConnection@4e4a9de
2024-07-10 14:18:16 - HikariPool-4 - Start completed.
2024-07-10 14:18:16 - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-07-10 14:18:16 - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4296bb88) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3166815d)
2024-07-10 14:18:16 - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2024-07-10 14:18:16 - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-07-10 14:18:16 - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@27101181
2024-07-10 14:18:16 - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@27101181
2024-07-10 14:18:16 - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@5682c99a`
2024-07-10 14:18:16 - Adding type registration Duration -> basicType@58(java.time.Duration,2)
2024-07-10 14:18:16 - Adding type registration java.time.Duration -> basicType@58(java.time.Duration,2)
2024-07-10 14:18:16 - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@59(java.time.OffsetDateTime,3003)
2024-07-10 14:18:16 - Adding type registration OffsetDateTime -> basicType@59(java.time.OffsetDateTime,3003)
2024-07-10 14:18:16 - Adding type registration java.time.OffsetDateTime -> basicType@59(java.time.OffsetDateTime,3003)
2024-07-10 14:18:16 - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@60(java.time.ZonedDateTime,3003)
2024-07-10 14:18:16 - Adding type registration ZonedDateTime -> basicType@60(java.time.ZonedDateTime,3003)
2024-07-10 14:18:16 - Adding type registration java.time.ZonedDateTime -> basicType@60(java.time.ZonedDateTime,3003)
2024-07-10 14:18:16 - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@61(java.time.OffsetTime,3007)
2024-07-10 14:18:16 - Adding type registration OffsetTime -> basicType@61(java.time.OffsetTime,3007)
2024-07-10 14:18:16 - Adding type registration java.time.OffsetTime -> basicType@61(java.time.OffsetTime,3007)
2024-07-10 14:18:16 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@69be6e4] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@71265744]
2024-07-10 14:18:16 - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-10 14:18:16 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@69be6e4] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@205ef647]
2024-07-10 14:18:17 - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@205ef647] for TypeConfiguration
2024-07-10 14:18:17 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-10 14:18:17 - No authentication manager set. Reauthentication of users when changing passwords will not be performed.
2024-07-10 14:18:17 - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@3312b587, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3791e62f, org.springframework.security.web.context.SecurityContextHolderFilter@8756fa5, org.springframework.security.web.header.HeaderWriterFilter@55e57105, org.springframework.security.web.authentication.logout.LogoutFilter@5b8a919f, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@4e4b267a, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@41c25045, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7b512655, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@632e5e3, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@207e7e51, org.springframework.security.web.access.ExceptionTranslationFilter@80ea20e, org.springframework.security.web.access.intercept.AuthorizationFilter@38978208]
2024-07-10 14:18:17 - LiveReload server is running on port 35729
2024-07-10 14:18:17 - Starting ProtocolHandler ["http-nio-5001"]
2024-07-10 14:18:17 - Tomcat started on port(s): 5001 (http) with context path ''
2024-07-10 14:18:17 - Started SpringThymeleafApplication in 1.468 seconds (process running for 469.396)
2024-07-10 14:18:17 - Condition evaluation unchanged
2024-07-10 14:18:23 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-07-10 14:18:23 - Initializing Servlet 'dispatcherServlet'
2024-07-10 14:18:23 - Completed initialization in 1 ms
2024-07-10 14:18:23 - select n1_0.id,n1_0.cnpj_emissor,n1_0.data_captura,n1_0.data_emissao,n1_0.faixa_horario,n1_0.local_destino,n1_0.municipio_codigo,n1_0.numero_da_nota,n1_0.permissionario_cnpj,n1_0.portaria,n1_0.tipo_veiculo from nota n1_0 order by n1_0.data_captura desc offset ? rows fetch first ? rows only
2024-07-10 14:18:23 - select m1_0.ibge,m1_0.codigo,m1_0.nome,m1_0.uf from municipio m1_0
2024-07-10 14:18:23 - select p1_0.cnpj,p1_0.nome from permissionario p1_0
2024-07-10 14:18:33 - select m1_0.ibge,m1_0.codigo,m1_0.nome,m1_0.uf from municipio m1_0 where m1_0.ibge=?
2024-07-10 14:18:33 - select p1_0.cnpj,p1_0.nome from permissionario p1_0 where p1_0.cnpj=?
2024-07-10 14:18:33 - ID da entidade: null
2024-07-10 14:18:33 - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.reflect.UndeclaredThrowableException] with root cause
com.fasterxml.jackson.databind.exc.InvalidDefinitionException: Java 8 date/time type `java.time.LocalDate` not supported by default: add Module "com.fasterxml.jackson.datatype:jackson-datatype-jsr310" to enable handling (through reference chain: com.flc.springthymeleaf.domain.Nota["dataCaptura"])
	at com.fasterxml.jackson.databind.exc.InvalidDefinitionException.from(InvalidDefinitionException.java:77)
	at com.fasterxml.jackson.databind.SerializerProvider.reportBadDefinition(SerializerProvider.java:1308)
	at com.fasterxml.jackson.databind.ser.impl.UnsupportedTypeSerializer.serialize(UnsupportedTypeSerializer.java:35)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider._serialize(DefaultSerializerProvider.java:479)
	at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.serializeValue(DefaultSerializerProvider.java:318)
	at com.fasterxml.jackson.databind.ObjectMapper._writeValueAndClose(ObjectMapper.java:4719)
	at com.fasterxml.jackson.databind.ObjectMapper.writeValueAsString(ObjectMapper.java:3964)
	at com.flc.springthymeleaf.aspect.AuditAspect.beforeSave(AuditAspect.java:41)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJMethodBeforeAdvice.before(AspectJMethodBeforeAdvice.java:44)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:57)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at com.flc.springthymeleaf.service.NotaService$$SpringCGLIB$$0.save(<generated>)
	at com.flc.springthymeleaf.web.NotaController.salvarNota(NotaController.java:101)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:168)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2024-07-10 14:19:31 - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2024-07-10 14:19:31 - Pausing ProtocolHandler ["http-nio-5001"]
2024-07-10 14:19:31 - Stopping service [Tomcat]
2024-07-10 14:19:31 - Destroying Spring FrameworkServlet 'dispatcherServlet'
2024-07-10 14:19:31 - Stopping ProtocolHandler ["http-nio-5001"]
2024-07-10 14:19:31 - Destroying ProtocolHandler ["http-nio-5001"]
2024-07-10 14:19:31 - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-10 14:19:31 - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@205ef647] for TypeConfiguration
2024-07-10 14:19:31 - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@2034eb80] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@205ef647]
2024-07-10 14:19:31 - HikariPool-4 - Shutdown initiated...
2024-07-10 14:19:31 - HikariPool-4 - Shutdown completed.
2024-07-10 14:19:31 - Starting SpringThymeleafApplication using Java 17.0.7 with PID 9900 (C:\Users\fernando.correa\Documents\GitHub\workspace2023\app-devceasa01.2003\target\classes started by fernando.correa in C:\Users\fernando.correa\Documents\GitHub\workspace2023\app-devceasa01.2003)
2024-07-10 14:19:31 - No active profile set, falling back to 1 default profile: "default"
2024-07-10 14:19:32 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-10 14:19:32 - Finished Spring Data repository scanning in 37 ms. Found 15 JPA repository interfaces.
2024-07-10 14:19:32 - Tomcat initialized with port(s): 5001 (http)
2024-07-10 14:19:32 - Initializing ProtocolHandler ["http-nio-5001"]
2024-07-10 14:19:32 - Starting service [Tomcat]
2024-07-10 14:19:32 - Starting Servlet engine: [Apache Tomcat/10.1.15]
2024-07-10 14:19:32 - Initializing Spring embedded WebApplicationContext
2024-07-10 14:19:32 - Root WebApplicationContext: initialization completed in 358 ms
2024-07-10 14:19:32 - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-10 14:19:32 - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@1c0b1c8
2024-07-10 14:19:32 - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@1c0b1c8
2024-07-10 14:19:32 - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@1c0b1c8
2024-07-10 14:19:32 - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@3f95de2c
2024-07-10 14:19:32 - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@3f95de2c
2024-07-10 14:19:32 - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@216f31d1
2024-07-10 14:19:32 - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@216f31d1
2024-07-10 14:19:32 - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@1babda35
2024-07-10 14:19:32 - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@1babda35
2024-07-10 14:19:32 - Adding type registration byte -> org.hibernate.type.BasicTypeReference@1fe17679
2024-07-10 14:19:32 - Adding type registration byte -> org.hibernate.type.BasicTypeReference@1fe17679
2024-07-10 14:19:32 - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@1fe17679
2024-07-10 14:19:32 - Adding type registration binary -> org.hibernate.type.BasicTypeReference@1392e42f
2024-07-10 14:19:32 - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@1392e42f
2024-07-10 14:19:32 - Adding type registration [B -> org.hibernate.type.BasicTypeReference@1392e42f
2024-07-10 14:19:32 - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@7540a9a
2024-07-10 14:19:32 - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@7540a9a
2024-07-10 14:19:32 - Adding type registration image -> org.hibernate.type.BasicTypeReference@2c137160
2024-07-10 14:19:32 - Adding type registration blob -> org.hibernate.type.BasicTypeReference@153262d1
2024-07-10 14:19:32 - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@153262d1
2024-07-10 14:19:32 - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@11054fc4
2024-07-10 14:19:32 - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@362287a4
2024-07-10 14:19:32 - Adding type registration short -> org.hibernate.type.BasicTypeReference@18d7871
2024-07-10 14:19:32 - Adding type registration short -> org.hibernate.type.BasicTypeReference@18d7871
2024-07-10 14:19:32 - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@18d7871
2024-07-10 14:19:32 - Adding type registration integer -> org.hibernate.type.BasicTypeReference@72fa67b
2024-07-10 14:19:32 - Adding type registration int -> org.hibernate.type.BasicTypeReference@72fa67b
2024-07-10 14:19:32 - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@72fa67b
2024-07-10 14:19:32 - Adding type registration long -> org.hibernate.type.BasicTypeReference@3cefb235
2024-07-10 14:19:32 - Adding type registration long -> org.hibernate.type.BasicTypeReference@3cefb235
2024-07-10 14:19:32 - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@3cefb235
2024-07-10 14:19:32 - Adding type registration float -> org.hibernate.type.BasicTypeReference@1e521dab
2024-07-10 14:19:32 - Adding type registration float -> org.hibernate.type.BasicTypeReference@1e521dab
2024-07-10 14:19:32 - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@1e521dab
2024-07-10 14:19:32 - Adding type registration double -> org.hibernate.type.BasicTypeReference@74f6a0e0
2024-07-10 14:19:32 - Adding type registration double -> org.hibernate.type.BasicTypeReference@74f6a0e0
2024-07-10 14:19:32 - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@74f6a0e0
2024-07-10 14:19:32 - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@e90dc7b
2024-07-10 14:19:32 - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@e90dc7b
2024-07-10 14:19:32 - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@4f2fa986
2024-07-10 14:19:32 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@4f2fa986
2024-07-10 14:19:32 - Adding type registration character -> org.hibernate.type.BasicTypeReference@411e5a8d
2024-07-10 14:19:32 - Adding type registration char -> org.hibernate.type.BasicTypeReference@411e5a8d
2024-07-10 14:19:32 - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@411e5a8d
2024-07-10 14:19:32 - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@ae13ee
2024-07-10 14:19:32 - Adding type registration string -> org.hibernate.type.BasicTypeReference@8d57484
2024-07-10 14:19:32 - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@8d57484
2024-07-10 14:19:32 - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@3a849f81
2024-07-10 14:19:32 - Adding type registration characters -> org.hibernate.type.BasicTypeReference@97d706e
2024-07-10 14:19:32 - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@97d706e
2024-07-10 14:19:32 - Adding type registration [C -> org.hibernate.type.BasicTypeReference@97d706e
2024-07-10 14:19:32 - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@79bc33cc
2024-07-10 14:19:32 - Adding type registration text -> org.hibernate.type.BasicTypeReference@5aee192b
2024-07-10 14:19:32 - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@4408fd60
2024-07-10 14:19:32 - Adding type registration clob -> org.hibernate.type.BasicTypeReference@26941b8f
2024-07-10 14:19:32 - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@26941b8f
2024-07-10 14:19:32 - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@3e2e7ec2
2024-07-10 14:19:32 - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@3e2e7ec2
2024-07-10 14:19:32 - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@14231f6d
2024-07-10 14:19:32 - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@17430374
2024-07-10 14:19:32 - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@110d3a70
2024-07-10 14:19:32 - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@5c989efd
2024-07-10 14:19:32 - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@504c2a74
2024-07-10 14:19:32 - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@5f9bcbaa
2024-07-10 14:19:32 - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@27bda493
2024-07-10 14:19:32 - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@27bda493
2024-07-10 14:19:32 - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@3fcaa9ef
2024-07-10 14:19:32 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@3fcaa9ef
2024-07-10 14:19:32 - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@e642be8
2024-07-10 14:19:32 - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@e642be8
2024-07-10 14:19:32 - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@f237715
2024-07-10 14:19:32 - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@f237715
2024-07-10 14:19:32 - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@45f0c35e
2024-07-10 14:19:32 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@45f0c35e
2024-07-10 14:19:32 - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2f9f8fde
2024-07-10 14:19:32 - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@8bdaae
2024-07-10 14:19:32 - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@14849e75
2024-07-10 14:19:32 - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@14849e75
2024-07-10 14:19:32 - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@572d5588
2024-07-10 14:19:32 - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@41fd1cc
2024-07-10 14:19:32 - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@5a1f254b
2024-07-10 14:19:32 - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@6ad86f4b
2024-07-10 14:19:32 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@6ad86f4b
2024-07-10 14:19:32 - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@57e4e68d
2024-07-10 14:19:32 - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@2d8fcc0c
2024-07-10 14:19:32 - Adding type registration date -> org.hibernate.type.BasicTypeReference@e19918b
2024-07-10 14:19:32 - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@e19918b
2024-07-10 14:19:32 - Adding type registration time -> org.hibernate.type.BasicTypeReference@27920534
2024-07-10 14:19:32 - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@27920534
2024-07-10 14:19:32 - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@57325fc5
2024-07-10 14:19:32 - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@57325fc5
2024-07-10 14:19:32 - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@57325fc5
2024-07-10 14:19:32 - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@40e1683
2024-07-10 14:19:32 - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@40e1683
2024-07-10 14:19:32 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@40e1683
2024-07-10 14:19:32 - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@46595a40
2024-07-10 14:19:32 - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@71554c1a
2024-07-10 14:19:32 - Adding type registration instant -> org.hibernate.type.BasicTypeReference@345ce982
2024-07-10 14:19:32 - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@345ce982
2024-07-10 14:19:32 - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@40125b84
2024-07-10 14:19:32 - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@40125b84
2024-07-10 14:19:32 - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@40125b84
2024-07-10 14:19:32 - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@4c15929c
2024-07-10 14:19:32 - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@177b3298
2024-07-10 14:19:32 - Adding type registration class -> org.hibernate.type.BasicTypeReference@44b8d90c
2024-07-10 14:19:32 - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@44b8d90c
2024-07-10 14:19:32 - Adding type registration currency -> org.hibernate.type.BasicTypeReference@16247464
2024-07-10 14:19:32 - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@16247464
2024-07-10 14:19:32 - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@16247464
2024-07-10 14:19:32 - Adding type registration locale -> org.hibernate.type.BasicTypeReference@7645954e
2024-07-10 14:19:32 - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@7645954e
2024-07-10 14:19:32 - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@386486ec
2024-07-10 14:19:32 - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@386486ec
2024-07-10 14:19:32 - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@3a165855
2024-07-10 14:19:32 - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@3a165855
2024-07-10 14:19:32 - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@f249c27
2024-07-10 14:19:32 - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@f249c27
2024-07-10 14:19:32 - Adding type registration url -> org.hibernate.type.BasicTypeReference@55919768
2024-07-10 14:19:32 - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@55919768
2024-07-10 14:19:32 - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@495e28d0
2024-07-10 14:19:32 - Adding type registration object -> org.hibernate.type.JavaObjectType@5682c99a
2024-07-10 14:19:32 - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@5682c99a
2024-07-10 14:19:32 - Adding type registration null -> org.hibernate.type.NullType@4939ec4c
2024-07-10 14:19:32 - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@342f298
2024-07-10 14:19:32 - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@103162f2
2024-07-10 14:19:32 - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@2410a09e
2024-07-10 14:19:32 - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@1f562814
2024-07-10 14:19:32 - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@b14df54
2024-07-10 14:19:32 - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@10a90a36
2024-07-10 14:19:32 - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@311c5ced
2024-07-10 14:19:32 - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@1f24c452
2024-07-10 14:19:32 - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-10 14:19:32 - HikariPool-5 - Starting...
2024-07-10 14:19:32 - HikariPool-5 - Added connection org.postgresql.jdbc.PgConnection@5085e7
2024-07-10 14:19:32 - HikariPool-5 - Start completed.
2024-07-10 14:19:32 - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-07-10 14:19:32 - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@80bf8ce) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5a0c4678)
2024-07-10 14:19:32 - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2024-07-10 14:19:32 - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-07-10 14:19:32 - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@1da28455
2024-07-10 14:19:32 - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@1da28455
2024-07-10 14:19:32 - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@5682c99a`
2024-07-10 14:19:32 - Adding type registration Duration -> basicType@77(java.time.Duration,2)
2024-07-10 14:19:32 - Adding type registration java.time.Duration -> basicType@77(java.time.Duration,2)
2024-07-10 14:19:32 - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@78(java.time.OffsetDateTime,3003)
2024-07-10 14:19:32 - Adding type registration OffsetDateTime -> basicType@78(java.time.OffsetDateTime,3003)
2024-07-10 14:19:32 - Adding type registration java.time.OffsetDateTime -> basicType@78(java.time.OffsetDateTime,3003)
2024-07-10 14:19:32 - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@79(java.time.ZonedDateTime,3003)
2024-07-10 14:19:32 - Adding type registration ZonedDateTime -> basicType@79(java.time.ZonedDateTime,3003)
2024-07-10 14:19:32 - Adding type registration java.time.ZonedDateTime -> basicType@79(java.time.ZonedDateTime,3003)
2024-07-10 14:19:32 - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@80(java.time.OffsetTime,3007)
2024-07-10 14:19:32 - Adding type registration OffsetTime -> basicType@80(java.time.OffsetTime,3007)
2024-07-10 14:19:32 - Adding type registration java.time.OffsetTime -> basicType@80(java.time.OffsetTime,3007)
2024-07-10 14:19:32 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@19d955bb] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4e4303c6]
2024-07-10 14:19:32 - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-10 14:19:32 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@19d955bb] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@38cccc2a]
2024-07-10 14:19:32 - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@38cccc2a] for TypeConfiguration
2024-07-10 14:19:32 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-10 14:19:33 - No authentication manager set. Reauthentication of users when changing passwords will not be performed.
2024-07-10 14:19:33 - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@1611e931, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@41cd8388, org.springframework.security.web.context.SecurityContextHolderFilter@419f2a7b, org.springframework.security.web.header.HeaderWriterFilter@7087c1b5, org.springframework.security.web.authentication.logout.LogoutFilter@3d92e039, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@59329668, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@730b265f, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@ef064be, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4b2234b4, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@c81cc0f, org.springframework.security.web.access.ExceptionTranslationFilter@7ba7c602, org.springframework.security.web.access.intercept.AuthorizationFilter@6a17b388]
2024-07-10 14:19:33 - LiveReload server is running on port 35729
2024-07-10 14:19:33 - Starting ProtocolHandler ["http-nio-5001"]
2024-07-10 14:19:33 - Tomcat started on port(s): 5001 (http) with context path ''
2024-07-10 14:19:33 - Started SpringThymeleafApplication in 1.452 seconds (process running for 544.99)
2024-07-10 14:19:33 - Condition evaluation unchanged
2024-07-10 14:19:50 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-07-10 14:19:50 - Initializing Servlet 'dispatcherServlet'
2024-07-10 14:19:50 - Completed initialization in 1 ms
2024-07-10 14:19:50 - select n1_0.id,n1_0.cnpj_emissor,n1_0.data_captura,n1_0.data_emissao,n1_0.faixa_horario,n1_0.local_destino,n1_0.municipio_codigo,n1_0.numero_da_nota,n1_0.permissionario_cnpj,n1_0.portaria,n1_0.tipo_veiculo from nota n1_0 order by n1_0.data_captura desc offset ? rows fetch first ? rows only
2024-07-10 14:19:50 - select m1_0.ibge,m1_0.codigo,m1_0.nome,m1_0.uf from municipio m1_0
2024-07-10 14:19:50 - select p1_0.cnpj,p1_0.nome from permissionario p1_0
2024-07-10 14:20:06 - select m1_0.ibge,m1_0.codigo,m1_0.nome,m1_0.uf from municipio m1_0 where m1_0.ibge=?
2024-07-10 14:20:06 - select p1_0.cnpj,p1_0.nome from permissionario p1_0 where p1_0.cnpj=?
2024-07-10 14:20:06 - ID da entidade: null
2024-07-10 14:20:06 - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.reflect.UndeclaredThrowableException] with root cause
com.fasterxml.jackson.databind.exc.InvalidDefinitionException: Java 8 date/time type `java.time.LocalDate` not supported by default: add Module "com.fasterxml.jackson.datatype:jackson-datatype-jsr310" to enable handling (through reference chain: com.flc.springthymeleaf.domain.Nota["dataCaptura"])
	at com.fasterxml.jackson.databind.exc.InvalidDefinitionException.from(InvalidDefinitionException.java:77)
	at com.fasterxml.jackson.databind.SerializerProvider.reportBadDefinition(SerializerProvider.java:1308)
	at com.fasterxml.jackson.databind.ser.impl.UnsupportedTypeSerializer.serialize(UnsupportedTypeSerializer.java:35)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider._serialize(DefaultSerializerProvider.java:479)
	at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.serializeValue(DefaultSerializerProvider.java:318)
	at com.fasterxml.jackson.databind.ObjectMapper._writeValueAndClose(ObjectMapper.java:4719)
	at com.fasterxml.jackson.databind.ObjectMapper.writeValueAsString(ObjectMapper.java:3964)
	at com.flc.springthymeleaf.aspect.AuditAspect.beforeSave(AuditAspect.java:41)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJMethodBeforeAdvice.before(AspectJMethodBeforeAdvice.java:44)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:57)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at com.flc.springthymeleaf.service.NotaService$$SpringCGLIB$$0.save(<generated>)
	at com.flc.springthymeleaf.web.NotaController.salvarNota(NotaController.java:94)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:168)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2024-07-10 14:20:58 - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2024-07-10 14:20:58 - Pausing ProtocolHandler ["http-nio-5001"]
2024-07-10 14:20:58 - Stopping service [Tomcat]
2024-07-10 14:20:58 - Destroying Spring FrameworkServlet 'dispatcherServlet'
2024-07-10 14:20:58 - Stopping ProtocolHandler ["http-nio-5001"]
2024-07-10 14:20:58 - Destroying ProtocolHandler ["http-nio-5001"]
2024-07-10 14:20:58 - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-10 14:20:58 - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@38cccc2a] for TypeConfiguration
2024-07-10 14:20:58 - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@755e9837] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@38cccc2a]
2024-07-10 14:20:58 - HikariPool-5 - Shutdown initiated...
2024-07-10 14:20:58 - HikariPool-5 - Shutdown completed.
2024-07-10 14:20:58 - Starting SpringThymeleafApplication using Java 17.0.7 with PID 9900 (C:\Users\fernando.correa\Documents\GitHub\workspace2023\app-devceasa01.2003\target\classes started by fernando.correa in C:\Users\fernando.correa\Documents\GitHub\workspace2023\app-devceasa01.2003)
2024-07-10 14:20:58 - No active profile set, falling back to 1 default profile: "default"
2024-07-10 14:20:58 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-10 14:20:58 - Finished Spring Data repository scanning in 36 ms. Found 15 JPA repository interfaces.
2024-07-10 14:20:58 - Tomcat initialized with port(s): 5001 (http)
2024-07-10 14:20:58 - Initializing ProtocolHandler ["http-nio-5001"]
2024-07-10 14:20:58 - Starting service [Tomcat]
2024-07-10 14:20:58 - Starting Servlet engine: [Apache Tomcat/10.1.15]
2024-07-10 14:20:58 - Initializing Spring embedded WebApplicationContext
2024-07-10 14:20:58 - Root WebApplicationContext: initialization completed in 350 ms
2024-07-10 14:20:58 - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-10 14:20:58 - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@1c0b1c8
2024-07-10 14:20:58 - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@1c0b1c8
2024-07-10 14:20:58 - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@1c0b1c8
2024-07-10 14:20:58 - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@3f95de2c
2024-07-10 14:20:58 - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@3f95de2c
2024-07-10 14:20:58 - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@216f31d1
2024-07-10 14:20:58 - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@216f31d1
2024-07-10 14:20:58 - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@1babda35
2024-07-10 14:20:58 - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@1babda35
2024-07-10 14:20:58 - Adding type registration byte -> org.hibernate.type.BasicTypeReference@1fe17679
2024-07-10 14:20:58 - Adding type registration byte -> org.hibernate.type.BasicTypeReference@1fe17679
2024-07-10 14:20:58 - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@1fe17679
2024-07-10 14:20:58 - Adding type registration binary -> org.hibernate.type.BasicTypeReference@1392e42f
2024-07-10 14:20:58 - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@1392e42f
2024-07-10 14:20:58 - Adding type registration [B -> org.hibernate.type.BasicTypeReference@1392e42f
2024-07-10 14:20:58 - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@7540a9a
2024-07-10 14:20:58 - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@7540a9a
2024-07-10 14:20:58 - Adding type registration image -> org.hibernate.type.BasicTypeReference@2c137160
2024-07-10 14:20:58 - Adding type registration blob -> org.hibernate.type.BasicTypeReference@153262d1
2024-07-10 14:20:58 - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@153262d1
2024-07-10 14:20:58 - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@11054fc4
2024-07-10 14:20:58 - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@362287a4
2024-07-10 14:20:58 - Adding type registration short -> org.hibernate.type.BasicTypeReference@18d7871
2024-07-10 14:20:58 - Adding type registration short -> org.hibernate.type.BasicTypeReference@18d7871
2024-07-10 14:20:58 - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@18d7871
2024-07-10 14:20:58 - Adding type registration integer -> org.hibernate.type.BasicTypeReference@72fa67b
2024-07-10 14:20:58 - Adding type registration int -> org.hibernate.type.BasicTypeReference@72fa67b
2024-07-10 14:20:58 - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@72fa67b
2024-07-10 14:20:58 - Adding type registration long -> org.hibernate.type.BasicTypeReference@3cefb235
2024-07-10 14:20:58 - Adding type registration long -> org.hibernate.type.BasicTypeReference@3cefb235
2024-07-10 14:20:58 - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@3cefb235
2024-07-10 14:20:58 - Adding type registration float -> org.hibernate.type.BasicTypeReference@1e521dab
2024-07-10 14:20:58 - Adding type registration float -> org.hibernate.type.BasicTypeReference@1e521dab
2024-07-10 14:20:58 - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@1e521dab
2024-07-10 14:20:58 - Adding type registration double -> org.hibernate.type.BasicTypeReference@74f6a0e0
2024-07-10 14:20:58 - Adding type registration double -> org.hibernate.type.BasicTypeReference@74f6a0e0
2024-07-10 14:20:58 - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@74f6a0e0
2024-07-10 14:20:58 - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@e90dc7b
2024-07-10 14:20:58 - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@e90dc7b
2024-07-10 14:20:58 - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@4f2fa986
2024-07-10 14:20:58 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@4f2fa986
2024-07-10 14:20:58 - Adding type registration character -> org.hibernate.type.BasicTypeReference@411e5a8d
2024-07-10 14:20:58 - Adding type registration char -> org.hibernate.type.BasicTypeReference@411e5a8d
2024-07-10 14:20:58 - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@411e5a8d
2024-07-10 14:20:58 - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@ae13ee
2024-07-10 14:20:58 - Adding type registration string -> org.hibernate.type.BasicTypeReference@8d57484
2024-07-10 14:20:58 - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@8d57484
2024-07-10 14:20:58 - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@3a849f81
2024-07-10 14:20:58 - Adding type registration characters -> org.hibernate.type.BasicTypeReference@97d706e
2024-07-10 14:20:58 - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@97d706e
2024-07-10 14:20:58 - Adding type registration [C -> org.hibernate.type.BasicTypeReference@97d706e
2024-07-10 14:20:58 - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@79bc33cc
2024-07-10 14:20:58 - Adding type registration text -> org.hibernate.type.BasicTypeReference@5aee192b
2024-07-10 14:20:58 - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@4408fd60
2024-07-10 14:20:58 - Adding type registration clob -> org.hibernate.type.BasicTypeReference@26941b8f
2024-07-10 14:20:58 - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@26941b8f
2024-07-10 14:20:58 - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@3e2e7ec2
2024-07-10 14:20:58 - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@3e2e7ec2
2024-07-10 14:20:58 - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@14231f6d
2024-07-10 14:20:58 - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@17430374
2024-07-10 14:20:58 - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@110d3a70
2024-07-10 14:20:58 - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@5c989efd
2024-07-10 14:20:58 - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@504c2a74
2024-07-10 14:20:58 - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@5f9bcbaa
2024-07-10 14:20:58 - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@27bda493
2024-07-10 14:20:58 - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@27bda493
2024-07-10 14:20:58 - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@3fcaa9ef
2024-07-10 14:20:58 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@3fcaa9ef
2024-07-10 14:20:58 - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@e642be8
2024-07-10 14:20:58 - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@e642be8
2024-07-10 14:20:58 - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@f237715
2024-07-10 14:20:58 - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@f237715
2024-07-10 14:20:58 - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@45f0c35e
2024-07-10 14:20:58 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@45f0c35e
2024-07-10 14:20:58 - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2f9f8fde
2024-07-10 14:20:58 - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@8bdaae
2024-07-10 14:20:58 - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@14849e75
2024-07-10 14:20:58 - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@14849e75
2024-07-10 14:20:58 - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@572d5588
2024-07-10 14:20:58 - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@41fd1cc
2024-07-10 14:20:58 - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@5a1f254b
2024-07-10 14:20:58 - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@6ad86f4b
2024-07-10 14:20:58 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@6ad86f4b
2024-07-10 14:20:58 - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@57e4e68d
2024-07-10 14:20:58 - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@2d8fcc0c
2024-07-10 14:20:58 - Adding type registration date -> org.hibernate.type.BasicTypeReference@e19918b
2024-07-10 14:20:58 - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@e19918b
2024-07-10 14:20:58 - Adding type registration time -> org.hibernate.type.BasicTypeReference@27920534
2024-07-10 14:20:58 - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@27920534
2024-07-10 14:20:58 - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@57325fc5
2024-07-10 14:20:58 - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@57325fc5
2024-07-10 14:20:58 - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@57325fc5
2024-07-10 14:20:58 - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@40e1683
2024-07-10 14:20:58 - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@40e1683
2024-07-10 14:20:58 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@40e1683
2024-07-10 14:20:58 - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@46595a40
2024-07-10 14:20:58 - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@71554c1a
2024-07-10 14:20:58 - Adding type registration instant -> org.hibernate.type.BasicTypeReference@345ce982
2024-07-10 14:20:58 - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@345ce982
2024-07-10 14:20:58 - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@40125b84
2024-07-10 14:20:58 - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@40125b84
2024-07-10 14:20:58 - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@40125b84
2024-07-10 14:20:58 - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@4c15929c
2024-07-10 14:20:58 - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@177b3298
2024-07-10 14:20:58 - Adding type registration class -> org.hibernate.type.BasicTypeReference@44b8d90c
2024-07-10 14:20:58 - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@44b8d90c
2024-07-10 14:20:58 - Adding type registration currency -> org.hibernate.type.BasicTypeReference@16247464
2024-07-10 14:20:58 - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@16247464
2024-07-10 14:20:58 - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@16247464
2024-07-10 14:20:58 - Adding type registration locale -> org.hibernate.type.BasicTypeReference@7645954e
2024-07-10 14:20:58 - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@7645954e
2024-07-10 14:20:58 - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@386486ec
2024-07-10 14:20:58 - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@386486ec
2024-07-10 14:20:58 - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@3a165855
2024-07-10 14:20:58 - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@3a165855
2024-07-10 14:20:58 - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@f249c27
2024-07-10 14:20:58 - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@f249c27
2024-07-10 14:20:58 - Adding type registration url -> org.hibernate.type.BasicTypeReference@55919768
2024-07-10 14:20:58 - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@55919768
2024-07-10 14:20:58 - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@495e28d0
2024-07-10 14:20:58 - Adding type registration object -> org.hibernate.type.JavaObjectType@5682c99a
2024-07-10 14:20:58 - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@5682c99a
2024-07-10 14:20:58 - Adding type registration null -> org.hibernate.type.NullType@4939ec4c
2024-07-10 14:20:58 - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@7a6b2205
2024-07-10 14:20:58 - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@51dd20bc
2024-07-10 14:20:58 - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@7a26b9a7
2024-07-10 14:20:58 - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@22bb2e62
2024-07-10 14:20:58 - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@1e34b3a
2024-07-10 14:20:58 - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@3903437a
2024-07-10 14:20:58 - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@76a73e7c
2024-07-10 14:20:58 - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@d14d6f4
2024-07-10 14:20:58 - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-10 14:20:58 - HikariPool-6 - Starting...
2024-07-10 14:20:58 - HikariPool-6 - Added connection org.postgresql.jdbc.PgConnection@519d290b
2024-07-10 14:20:58 - HikariPool-6 - Start completed.
2024-07-10 14:20:58 - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-07-10 14:20:58 - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@68267f91) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2e103de2)
2024-07-10 14:20:58 - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2024-07-10 14:20:58 - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-07-10 14:20:58 - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@7b4e1840
2024-07-10 14:20:58 - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@7b4e1840
2024-07-10 14:20:58 - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@5682c99a`
2024-07-10 14:20:58 - Adding type registration Duration -> basicType@96(java.time.Duration,2)
2024-07-10 14:20:58 - Adding type registration java.time.Duration -> basicType@96(java.time.Duration,2)
2024-07-10 14:20:58 - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@97(java.time.OffsetDateTime,3003)
2024-07-10 14:20:58 - Adding type registration OffsetDateTime -> basicType@97(java.time.OffsetDateTime,3003)
2024-07-10 14:20:58 - Adding type registration java.time.OffsetDateTime -> basicType@97(java.time.OffsetDateTime,3003)
2024-07-10 14:20:58 - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@98(java.time.ZonedDateTime,3003)
2024-07-10 14:20:58 - Adding type registration ZonedDateTime -> basicType@98(java.time.ZonedDateTime,3003)
2024-07-10 14:20:58 - Adding type registration java.time.ZonedDateTime -> basicType@98(java.time.ZonedDateTime,3003)
2024-07-10 14:20:58 - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@99(java.time.OffsetTime,3007)
2024-07-10 14:20:58 - Adding type registration OffsetTime -> basicType@99(java.time.OffsetTime,3007)
2024-07-10 14:20:58 - Adding type registration java.time.OffsetTime -> basicType@99(java.time.OffsetTime,3007)
2024-07-10 14:20:58 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4323a353] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@18228651]
2024-07-10 14:20:58 - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-10 14:20:58 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4323a353] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@7931e4f4]
2024-07-10 14:20:58 - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@7931e4f4] for TypeConfiguration
2024-07-10 14:20:58 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-10 14:20:59 - No authentication manager set. Reauthentication of users when changing passwords will not be performed.
2024-07-10 14:20:59 - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@7f8bbb24, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3d54defd, org.springframework.security.web.context.SecurityContextHolderFilter@27d20360, org.springframework.security.web.header.HeaderWriterFilter@1ebd338a, org.springframework.security.web.authentication.logout.LogoutFilter@55fc30b2, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@2b20cc6c, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@1fed001a, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@31a14aea, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@15d4b6d2, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@10ba2697, org.springframework.security.web.access.ExceptionTranslationFilter@64481327, org.springframework.security.web.access.intercept.AuthorizationFilter@5e639fcf]
2024-07-10 14:20:59 - LiveReload server is running on port 35729
2024-07-10 14:20:59 - Starting ProtocolHandler ["http-nio-5001"]
2024-07-10 14:20:59 - Tomcat started on port(s): 5001 (http) with context path ''
2024-07-10 14:20:59 - Started SpringThymeleafApplication in 1.403 seconds (process running for 631.334)
2024-07-10 14:20:59 - Condition evaluation unchanged
2024-07-10 14:21:03 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-07-10 14:21:03 - Initializing Servlet 'dispatcherServlet'
2024-07-10 14:21:03 - Completed initialization in 1 ms
2024-07-10 14:21:03 - select n1_0.id,n1_0.cnpj_emissor,n1_0.data_captura,n1_0.data_emissao,n1_0.faixa_horario,n1_0.local_destino,n1_0.municipio_codigo,n1_0.numero_da_nota,n1_0.permissionario_cnpj,n1_0.portaria,n1_0.tipo_veiculo from nota n1_0 order by n1_0.data_captura desc offset ? rows fetch first ? rows only
2024-07-10 14:21:03 - select m1_0.ibge,m1_0.codigo,m1_0.nome,m1_0.uf from municipio m1_0
2024-07-10 14:21:03 - select p1_0.cnpj,p1_0.nome from permissionario p1_0
2024-07-10 14:21:16 - select m1_0.ibge,m1_0.codigo,m1_0.nome,m1_0.uf from municipio m1_0 where m1_0.ibge=?
2024-07-10 14:21:16 - select p1_0.cnpj,p1_0.nome from permissionario p1_0 where p1_0.cnpj=?
2024-07-10 14:21:16 - select n1_0.id,n1_0.cnpj_emissor,n1_0.data_captura,n1_0.data_emissao,n1_0.faixa_horario,n1_0.local_destino,n1_0.municipio_codigo,n1_0.numero_da_nota,n1_0.permissionario_cnpj,n1_0.portaria,n1_0.tipo_veiculo from nota n1_0 order by n1_0.data_captura desc offset ? rows fetch first ? rows only
2024-07-10 14:21:16 - select m1_0.ibge,m1_0.codigo,m1_0.nome,m1_0.uf from municipio m1_0
2024-07-10 14:21:16 - select p1_0.cnpj,p1_0.nome from permissionario p1_0
2024-07-10 14:21:16 - ID da entidade: null
2024-07-10 14:21:16 - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.reflect.UndeclaredThrowableException] with root cause
com.fasterxml.jackson.databind.exc.InvalidDefinitionException: Java 8 date/time type `java.time.LocalDate` not supported by default: add Module "com.fasterxml.jackson.datatype:jackson-datatype-jsr310" to enable handling (through reference chain: com.flc.springthymeleaf.domain.Nota["dataCaptura"])
	at com.fasterxml.jackson.databind.exc.InvalidDefinitionException.from(InvalidDefinitionException.java:77)
	at com.fasterxml.jackson.databind.SerializerProvider.reportBadDefinition(SerializerProvider.java:1308)
	at com.fasterxml.jackson.databind.ser.impl.UnsupportedTypeSerializer.serialize(UnsupportedTypeSerializer.java:35)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider._serialize(DefaultSerializerProvider.java:479)
	at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.serializeValue(DefaultSerializerProvider.java:318)
	at com.fasterxml.jackson.databind.ObjectMapper._writeValueAndClose(ObjectMapper.java:4719)
	at com.fasterxml.jackson.databind.ObjectMapper.writeValueAsString(ObjectMapper.java:3964)
	at com.flc.springthymeleaf.aspect.AuditAspect.beforeSave(AuditAspect.java:41)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJMethodBeforeAdvice.before(AspectJMethodBeforeAdvice.java:44)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:57)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at com.flc.springthymeleaf.service.NotaService$$SpringCGLIB$$0.save(<generated>)
	at com.flc.springthymeleaf.web.NotaController.salvarNota(NotaController.java:94)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:168)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2024-07-10 14:22:25 - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2024-07-10 14:22:25 - Pausing ProtocolHandler ["http-nio-5001"]
2024-07-10 14:22:25 - Stopping service [Tomcat]
2024-07-10 14:22:25 - Destroying Spring FrameworkServlet 'dispatcherServlet'
2024-07-10 14:22:25 - Stopping ProtocolHandler ["http-nio-5001"]
2024-07-10 14:22:25 - Destroying ProtocolHandler ["http-nio-5001"]
2024-07-10 14:22:25 - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-10 14:22:25 - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@7931e4f4] for TypeConfiguration
2024-07-10 14:22:25 - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@6308cdfa] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@7931e4f4]
2024-07-10 14:22:25 - HikariPool-6 - Shutdown initiated...
2024-07-10 14:22:25 - HikariPool-6 - Shutdown completed.
2024-07-10 14:22:25 - Starting SpringThymeleafApplication using Java 17.0.7 with PID 9900 (C:\Users\fernando.correa\Documents\GitHub\workspace2023\app-devceasa01.2003\target\classes started by fernando.correa in C:\Users\fernando.correa\Documents\GitHub\workspace2023\app-devceasa01.2003)
2024-07-10 14:22:25 - No active profile set, falling back to 1 default profile: "default"
2024-07-10 14:22:25 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-10 14:22:25 - Finished Spring Data repository scanning in 37 ms. Found 15 JPA repository interfaces.
2024-07-10 14:22:26 - Tomcat initialized with port(s): 5001 (http)
2024-07-10 14:22:26 - Initializing ProtocolHandler ["http-nio-5001"]
2024-07-10 14:22:26 - Starting service [Tomcat]
2024-07-10 14:22:26 - Starting Servlet engine: [Apache Tomcat/10.1.15]
2024-07-10 14:22:26 - Initializing Spring embedded WebApplicationContext
2024-07-10 14:22:26 - Root WebApplicationContext: initialization completed in 361 ms
2024-07-10 14:22:26 - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-10 14:22:26 - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@1c0b1c8
2024-07-10 14:22:26 - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@1c0b1c8
2024-07-10 14:22:26 - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@1c0b1c8
2024-07-10 14:22:26 - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@3f95de2c
2024-07-10 14:22:26 - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@3f95de2c
2024-07-10 14:22:26 - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@216f31d1
2024-07-10 14:22:26 - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@216f31d1
2024-07-10 14:22:26 - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@1babda35
2024-07-10 14:22:26 - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@1babda35
2024-07-10 14:22:26 - Adding type registration byte -> org.hibernate.type.BasicTypeReference@1fe17679
2024-07-10 14:22:26 - Adding type registration byte -> org.hibernate.type.BasicTypeReference@1fe17679
2024-07-10 14:22:26 - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@1fe17679
2024-07-10 14:22:26 - Adding type registration binary -> org.hibernate.type.BasicTypeReference@1392e42f
2024-07-10 14:22:26 - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@1392e42f
2024-07-10 14:22:26 - Adding type registration [B -> org.hibernate.type.BasicTypeReference@1392e42f
2024-07-10 14:22:26 - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@7540a9a
2024-07-10 14:22:26 - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@7540a9a
2024-07-10 14:22:26 - Adding type registration image -> org.hibernate.type.BasicTypeReference@2c137160
2024-07-10 14:22:26 - Adding type registration blob -> org.hibernate.type.BasicTypeReference@153262d1
2024-07-10 14:22:26 - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@153262d1
2024-07-10 14:22:26 - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@11054fc4
2024-07-10 14:22:26 - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@362287a4
2024-07-10 14:22:26 - Adding type registration short -> org.hibernate.type.BasicTypeReference@18d7871
2024-07-10 14:22:26 - Adding type registration short -> org.hibernate.type.BasicTypeReference@18d7871
2024-07-10 14:22:26 - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@18d7871
2024-07-10 14:22:26 - Adding type registration integer -> org.hibernate.type.BasicTypeReference@72fa67b
2024-07-10 14:22:26 - Adding type registration int -> org.hibernate.type.BasicTypeReference@72fa67b
2024-07-10 14:22:26 - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@72fa67b
2024-07-10 14:22:26 - Adding type registration long -> org.hibernate.type.BasicTypeReference@3cefb235
2024-07-10 14:22:26 - Adding type registration long -> org.hibernate.type.BasicTypeReference@3cefb235
2024-07-10 14:22:26 - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@3cefb235
2024-07-10 14:22:26 - Adding type registration float -> org.hibernate.type.BasicTypeReference@1e521dab
2024-07-10 14:22:26 - Adding type registration float -> org.hibernate.type.BasicTypeReference@1e521dab
2024-07-10 14:22:26 - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@1e521dab
2024-07-10 14:22:26 - Adding type registration double -> org.hibernate.type.BasicTypeReference@74f6a0e0
2024-07-10 14:22:26 - Adding type registration double -> org.hibernate.type.BasicTypeReference@74f6a0e0
2024-07-10 14:22:26 - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@74f6a0e0
2024-07-10 14:22:26 - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@e90dc7b
2024-07-10 14:22:26 - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@e90dc7b
2024-07-10 14:22:26 - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@4f2fa986
2024-07-10 14:22:26 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@4f2fa986
2024-07-10 14:22:26 - Adding type registration character -> org.hibernate.type.BasicTypeReference@411e5a8d
2024-07-10 14:22:26 - Adding type registration char -> org.hibernate.type.BasicTypeReference@411e5a8d
2024-07-10 14:22:26 - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@411e5a8d
2024-07-10 14:22:26 - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@ae13ee
2024-07-10 14:22:26 - Adding type registration string -> org.hibernate.type.BasicTypeReference@8d57484
2024-07-10 14:22:26 - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@8d57484
2024-07-10 14:22:26 - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@3a849f81
2024-07-10 14:22:26 - Adding type registration characters -> org.hibernate.type.BasicTypeReference@97d706e
2024-07-10 14:22:26 - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@97d706e
2024-07-10 14:22:26 - Adding type registration [C -> org.hibernate.type.BasicTypeReference@97d706e
2024-07-10 14:22:26 - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@79bc33cc
2024-07-10 14:22:26 - Adding type registration text -> org.hibernate.type.BasicTypeReference@5aee192b
2024-07-10 14:22:26 - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@4408fd60
2024-07-10 14:22:26 - Adding type registration clob -> org.hibernate.type.BasicTypeReference@26941b8f
2024-07-10 14:22:26 - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@26941b8f
2024-07-10 14:22:26 - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@3e2e7ec2
2024-07-10 14:22:26 - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@3e2e7ec2
2024-07-10 14:22:26 - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@14231f6d
2024-07-10 14:22:26 - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@17430374
2024-07-10 14:22:26 - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@110d3a70
2024-07-10 14:22:26 - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@5c989efd
2024-07-10 14:22:26 - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@504c2a74
2024-07-10 14:22:26 - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@5f9bcbaa
2024-07-10 14:22:26 - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@27bda493
2024-07-10 14:22:26 - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@27bda493
2024-07-10 14:22:26 - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@3fcaa9ef
2024-07-10 14:22:26 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@3fcaa9ef
2024-07-10 14:22:26 - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@e642be8
2024-07-10 14:22:26 - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@e642be8
2024-07-10 14:22:26 - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@f237715
2024-07-10 14:22:26 - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@f237715
2024-07-10 14:22:26 - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@45f0c35e
2024-07-10 14:22:26 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@45f0c35e
2024-07-10 14:22:26 - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2f9f8fde
2024-07-10 14:22:26 - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@8bdaae
2024-07-10 14:22:26 - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@14849e75
2024-07-10 14:22:26 - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@14849e75
2024-07-10 14:22:26 - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@572d5588
2024-07-10 14:22:26 - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@41fd1cc
2024-07-10 14:22:26 - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@5a1f254b
2024-07-10 14:22:26 - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@6ad86f4b
2024-07-10 14:22:26 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@6ad86f4b
2024-07-10 14:22:26 - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@57e4e68d
2024-07-10 14:22:26 - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@2d8fcc0c
2024-07-10 14:22:26 - Adding type registration date -> org.hibernate.type.BasicTypeReference@e19918b
2024-07-10 14:22:26 - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@e19918b
2024-07-10 14:22:26 - Adding type registration time -> org.hibernate.type.BasicTypeReference@27920534
2024-07-10 14:22:26 - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@27920534
2024-07-10 14:22:26 - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@57325fc5
2024-07-10 14:22:26 - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@57325fc5
2024-07-10 14:22:26 - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@57325fc5
2024-07-10 14:22:26 - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@40e1683
2024-07-10 14:22:26 - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@40e1683
2024-07-10 14:22:26 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@40e1683
2024-07-10 14:22:26 - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@46595a40
2024-07-10 14:22:26 - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@71554c1a
2024-07-10 14:22:26 - Adding type registration instant -> org.hibernate.type.BasicTypeReference@345ce982
2024-07-10 14:22:26 - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@345ce982
2024-07-10 14:22:26 - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@40125b84
2024-07-10 14:22:26 - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@40125b84
2024-07-10 14:22:26 - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@40125b84
2024-07-10 14:22:26 - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@4c15929c
2024-07-10 14:22:26 - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@177b3298
2024-07-10 14:22:26 - Adding type registration class -> org.hibernate.type.BasicTypeReference@44b8d90c
2024-07-10 14:22:26 - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@44b8d90c
2024-07-10 14:22:26 - Adding type registration currency -> org.hibernate.type.BasicTypeReference@16247464
2024-07-10 14:22:26 - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@16247464
2024-07-10 14:22:26 - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@16247464
2024-07-10 14:22:26 - Adding type registration locale -> org.hibernate.type.BasicTypeReference@7645954e
2024-07-10 14:22:26 - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@7645954e
2024-07-10 14:22:26 - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@386486ec
2024-07-10 14:22:26 - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@386486ec
2024-07-10 14:22:26 - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@3a165855
2024-07-10 14:22:26 - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@3a165855
2024-07-10 14:22:26 - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@f249c27
2024-07-10 14:22:26 - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@f249c27
2024-07-10 14:22:26 - Adding type registration url -> org.hibernate.type.BasicTypeReference@55919768
2024-07-10 14:22:26 - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@55919768
2024-07-10 14:22:26 - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@495e28d0
2024-07-10 14:22:26 - Adding type registration object -> org.hibernate.type.JavaObjectType@5682c99a
2024-07-10 14:22:26 - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@5682c99a
2024-07-10 14:22:26 - Adding type registration null -> org.hibernate.type.NullType@4939ec4c
2024-07-10 14:22:26 - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@68104870
2024-07-10 14:22:26 - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@54a079b
2024-07-10 14:22:26 - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@e1f9d7a
2024-07-10 14:22:26 - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@7d18282
2024-07-10 14:22:26 - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@6d6809c0
2024-07-10 14:22:26 - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@38cbad29
2024-07-10 14:22:26 - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@4acd0307
2024-07-10 14:22:26 - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@41035d4e
2024-07-10 14:22:26 - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-10 14:22:26 - HikariPool-7 - Starting...
2024-07-10 14:22:26 - HikariPool-7 - Added connection org.postgresql.jdbc.PgConnection@2fc02c7a
2024-07-10 14:22:26 - HikariPool-7 - Start completed.
2024-07-10 14:22:26 - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-07-10 14:22:26 - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@426ad94a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@62376aaa)
2024-07-10 14:22:26 - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2024-07-10 14:22:26 - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-07-10 14:22:26 - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@792c9104
2024-07-10 14:22:26 - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@792c9104
2024-07-10 14:22:26 - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@5682c99a`
2024-07-10 14:22:26 - Adding type registration Duration -> basicType@115(java.time.Duration,2)
2024-07-10 14:22:26 - Adding type registration java.time.Duration -> basicType@115(java.time.Duration,2)
2024-07-10 14:22:26 - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@116(java.time.OffsetDateTime,3003)
2024-07-10 14:22:26 - Adding type registration OffsetDateTime -> basicType@116(java.time.OffsetDateTime,3003)
2024-07-10 14:22:26 - Adding type registration java.time.OffsetDateTime -> basicType@116(java.time.OffsetDateTime,3003)
2024-07-10 14:22:26 - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@117(java.time.ZonedDateTime,3003)
2024-07-10 14:22:26 - Adding type registration ZonedDateTime -> basicType@117(java.time.ZonedDateTime,3003)
2024-07-10 14:22:26 - Adding type registration java.time.ZonedDateTime -> basicType@117(java.time.ZonedDateTime,3003)
2024-07-10 14:22:26 - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@118(java.time.OffsetTime,3007)
2024-07-10 14:22:26 - Adding type registration OffsetTime -> basicType@118(java.time.OffsetTime,3007)
2024-07-10 14:22:26 - Adding type registration java.time.OffsetTime -> basicType@118(java.time.OffsetTime,3007)
2024-07-10 14:22:26 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@57a1d1a7] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4315e290]
2024-07-10 14:22:26 - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-10 14:22:26 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@57a1d1a7] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@6d979b0d]
2024-07-10 14:22:26 - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@6d979b0d] for TypeConfiguration
2024-07-10 14:22:26 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-10 14:22:26 - No authentication manager set. Reauthentication of users when changing passwords will not be performed.
2024-07-10 14:22:26 - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@5d35f92c, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3909296e, org.springframework.security.web.context.SecurityContextHolderFilter@5fc6ac8b, org.springframework.security.web.header.HeaderWriterFilter@719c0f3d, org.springframework.security.web.authentication.logout.LogoutFilter@1f40fa0b, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@69a93408, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@71210b94, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3f7f1cdf, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@647cbc80, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@19205333, org.springframework.security.web.access.ExceptionTranslationFilter@6f6697df, org.springframework.security.web.access.intercept.AuthorizationFilter@5987abf7]
2024-07-10 14:22:27 - LiveReload server is running on port 35729
2024-07-10 14:22:27 - Starting ProtocolHandler ["http-nio-5001"]
2024-07-10 14:22:27 - Tomcat started on port(s): 5001 (http) with context path ''
2024-07-10 14:22:27 - Started SpringThymeleafApplication in 1.425 seconds (process running for 718.79)
2024-07-10 14:22:27 - Condition evaluation unchanged
2024-07-10 14:22:33 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-07-10 14:22:33 - Initializing Servlet 'dispatcherServlet'
2024-07-10 14:22:33 - Completed initialization in 1 ms
2024-07-10 14:22:33 - select n1_0.id,n1_0.cnpj_emissor,n1_0.data_captura,n1_0.data_emissao,n1_0.faixa_horario,n1_0.local_destino,n1_0.municipio_codigo,n1_0.numero_da_nota,n1_0.permissionario_cnpj,n1_0.portaria,n1_0.tipo_veiculo from nota n1_0 order by n1_0.data_captura desc offset ? rows fetch first ? rows only
2024-07-10 14:22:33 - select m1_0.ibge,m1_0.codigo,m1_0.nome,m1_0.uf from municipio m1_0
2024-07-10 14:22:33 - select p1_0.cnpj,p1_0.nome from permissionario p1_0
2024-07-10 14:22:46 - select m1_0.ibge,m1_0.codigo,m1_0.nome,m1_0.uf from municipio m1_0 where m1_0.ibge=?
2024-07-10 14:22:46 - select p1_0.cnpj,p1_0.nome from permissionario p1_0 where p1_0.cnpj=?
2024-07-10 14:22:46 - select n1_0.id,n1_0.cnpj_emissor,n1_0.data_captura,n1_0.data_emissao,n1_0.faixa_horario,n1_0.local_destino,n1_0.municipio_codigo,n1_0.numero_da_nota,n1_0.permissionario_cnpj,n1_0.portaria,n1_0.tipo_veiculo from nota n1_0 order by n1_0.data_captura desc offset ? rows fetch first ? rows only
2024-07-10 14:22:46 - select m1_0.ibge,m1_0.codigo,m1_0.nome,m1_0.uf from municipio m1_0
2024-07-10 14:22:46 - select p1_0.cnpj,p1_0.nome from permissionario p1_0
2024-07-10 14:22:46 - ID da entidade: null
2024-07-10 14:22:46 - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.reflect.UndeclaredThrowableException] with root cause
com.fasterxml.jackson.databind.exc.InvalidDefinitionException: Java 8 date/time type `java.time.LocalDate` not supported by default: add Module "com.fasterxml.jackson.datatype:jackson-datatype-jsr310" to enable handling (through reference chain: com.flc.springthymeleaf.domain.Nota["dataCaptura"])
	at com.fasterxml.jackson.databind.exc.InvalidDefinitionException.from(InvalidDefinitionException.java:77)
	at com.fasterxml.jackson.databind.SerializerProvider.reportBadDefinition(SerializerProvider.java:1308)
	at com.fasterxml.jackson.databind.ser.impl.UnsupportedTypeSerializer.serialize(UnsupportedTypeSerializer.java:35)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider._serialize(DefaultSerializerProvider.java:479)
	at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.serializeValue(DefaultSerializerProvider.java:318)
	at com.fasterxml.jackson.databind.ObjectMapper._writeValueAndClose(ObjectMapper.java:4719)
	at com.fasterxml.jackson.databind.ObjectMapper.writeValueAsString(ObjectMapper.java:3964)
	at com.flc.springthymeleaf.aspect.AuditAspect.beforeSave(AuditAspect.java:41)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJMethodBeforeAdvice.before(AspectJMethodBeforeAdvice.java:44)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:57)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at com.flc.springthymeleaf.service.NotaService$$SpringCGLIB$$0.save(<generated>)
	at com.flc.springthymeleaf.web.NotaController.salvarNota(NotaController.java:94)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:168)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2024-07-10 14:24:22 - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2024-07-10 14:24:22 - Pausing ProtocolHandler ["http-nio-5001"]
2024-07-10 14:24:22 - Stopping service [Tomcat]
2024-07-10 14:24:22 - Destroying Spring FrameworkServlet 'dispatcherServlet'
2024-07-10 14:24:22 - Stopping ProtocolHandler ["http-nio-5001"]
2024-07-10 14:24:22 - Destroying ProtocolHandler ["http-nio-5001"]
2024-07-10 14:24:22 - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-10 14:24:22 - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@6d979b0d] for TypeConfiguration
2024-07-10 14:24:22 - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@397eb18] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@6d979b0d]
2024-07-10 14:24:22 - HikariPool-7 - Shutdown initiated...
2024-07-10 14:24:22 - HikariPool-7 - Shutdown completed.
2024-07-10 14:24:22 - Starting SpringThymeleafApplication using Java 17.0.7 with PID 9900 (C:\Users\fernando.correa\Documents\GitHub\workspace2023\app-devceasa01.2003\target\classes started by fernando.correa in C:\Users\fernando.correa\Documents\GitHub\workspace2023\app-devceasa01.2003)
2024-07-10 14:24:22 - No active profile set, falling back to 1 default profile: "default"
2024-07-10 14:24:22 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-10 14:24:22 - Finished Spring Data repository scanning in 39 ms. Found 15 JPA repository interfaces.
2024-07-10 14:24:22 - Tomcat initialized with port(s): 5001 (http)
2024-07-10 14:24:22 - Initializing ProtocolHandler ["http-nio-5001"]
2024-07-10 14:24:22 - Starting service [Tomcat]
2024-07-10 14:24:22 - Starting Servlet engine: [Apache Tomcat/10.1.15]
2024-07-10 14:24:22 - Initializing Spring embedded WebApplicationContext
2024-07-10 14:24:22 - Root WebApplicationContext: initialization completed in 357 ms
2024-07-10 14:24:22 - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-10 14:24:22 - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@1c0b1c8
2024-07-10 14:24:22 - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@1c0b1c8
2024-07-10 14:24:22 - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@1c0b1c8
2024-07-10 14:24:22 - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@3f95de2c
2024-07-10 14:24:22 - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@3f95de2c
2024-07-10 14:24:22 - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@216f31d1
2024-07-10 14:24:22 - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@216f31d1
2024-07-10 14:24:22 - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@1babda35
2024-07-10 14:24:22 - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@1babda35
2024-07-10 14:24:22 - Adding type registration byte -> org.hibernate.type.BasicTypeReference@1fe17679
2024-07-10 14:24:22 - Adding type registration byte -> org.hibernate.type.BasicTypeReference@1fe17679
2024-07-10 14:24:22 - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@1fe17679
2024-07-10 14:24:22 - Adding type registration binary -> org.hibernate.type.BasicTypeReference@1392e42f
2024-07-10 14:24:22 - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@1392e42f
2024-07-10 14:24:22 - Adding type registration [B -> org.hibernate.type.BasicTypeReference@1392e42f
2024-07-10 14:24:22 - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@7540a9a
2024-07-10 14:24:22 - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@7540a9a
2024-07-10 14:24:22 - Adding type registration image -> org.hibernate.type.BasicTypeReference@2c137160
2024-07-10 14:24:22 - Adding type registration blob -> org.hibernate.type.BasicTypeReference@153262d1
2024-07-10 14:24:22 - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@153262d1
2024-07-10 14:24:22 - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@11054fc4
2024-07-10 14:24:22 - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@362287a4
2024-07-10 14:24:22 - Adding type registration short -> org.hibernate.type.BasicTypeReference@18d7871
2024-07-10 14:24:22 - Adding type registration short -> org.hibernate.type.BasicTypeReference@18d7871
2024-07-10 14:24:22 - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@18d7871
2024-07-10 14:24:22 - Adding type registration integer -> org.hibernate.type.BasicTypeReference@72fa67b
2024-07-10 14:24:22 - Adding type registration int -> org.hibernate.type.BasicTypeReference@72fa67b
2024-07-10 14:24:22 - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@72fa67b
2024-07-10 14:24:22 - Adding type registration long -> org.hibernate.type.BasicTypeReference@3cefb235
2024-07-10 14:24:22 - Adding type registration long -> org.hibernate.type.BasicTypeReference@3cefb235
2024-07-10 14:24:22 - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@3cefb235
2024-07-10 14:24:22 - Adding type registration float -> org.hibernate.type.BasicTypeReference@1e521dab
2024-07-10 14:24:22 - Adding type registration float -> org.hibernate.type.BasicTypeReference@1e521dab
2024-07-10 14:24:22 - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@1e521dab
2024-07-10 14:24:22 - Adding type registration double -> org.hibernate.type.BasicTypeReference@74f6a0e0
2024-07-10 14:24:22 - Adding type registration double -> org.hibernate.type.BasicTypeReference@74f6a0e0
2024-07-10 14:24:22 - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@74f6a0e0
2024-07-10 14:24:22 - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@e90dc7b
2024-07-10 14:24:22 - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@e90dc7b
2024-07-10 14:24:22 - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@4f2fa986
2024-07-10 14:24:22 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@4f2fa986
2024-07-10 14:24:22 - Adding type registration character -> org.hibernate.type.BasicTypeReference@411e5a8d
2024-07-10 14:24:22 - Adding type registration char -> org.hibernate.type.BasicTypeReference@411e5a8d
2024-07-10 14:24:22 - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@411e5a8d
2024-07-10 14:24:22 - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@ae13ee
2024-07-10 14:24:22 - Adding type registration string -> org.hibernate.type.BasicTypeReference@8d57484
2024-07-10 14:24:22 - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@8d57484
2024-07-10 14:24:22 - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@3a849f81
2024-07-10 14:24:22 - Adding type registration characters -> org.hibernate.type.BasicTypeReference@97d706e
2024-07-10 14:24:22 - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@97d706e
2024-07-10 14:24:22 - Adding type registration [C -> org.hibernate.type.BasicTypeReference@97d706e
2024-07-10 14:24:22 - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@79bc33cc
2024-07-10 14:24:22 - Adding type registration text -> org.hibernate.type.BasicTypeReference@5aee192b
2024-07-10 14:24:22 - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@4408fd60
2024-07-10 14:24:22 - Adding type registration clob -> org.hibernate.type.BasicTypeReference@26941b8f
2024-07-10 14:24:22 - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@26941b8f
2024-07-10 14:24:22 - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@3e2e7ec2
2024-07-10 14:24:22 - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@3e2e7ec2
2024-07-10 14:24:22 - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@14231f6d
2024-07-10 14:24:22 - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@17430374
2024-07-10 14:24:22 - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@110d3a70
2024-07-10 14:24:22 - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@5c989efd
2024-07-10 14:24:22 - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@504c2a74
2024-07-10 14:24:22 - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@5f9bcbaa
2024-07-10 14:24:22 - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@27bda493
2024-07-10 14:24:22 - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@27bda493
2024-07-10 14:24:22 - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@3fcaa9ef
2024-07-10 14:24:22 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@3fcaa9ef
2024-07-10 14:24:22 - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@e642be8
2024-07-10 14:24:22 - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@e642be8
2024-07-10 14:24:22 - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@f237715
2024-07-10 14:24:22 - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@f237715
2024-07-10 14:24:22 - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@45f0c35e
2024-07-10 14:24:22 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@45f0c35e
2024-07-10 14:24:22 - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2f9f8fde
2024-07-10 14:24:22 - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@8bdaae
2024-07-10 14:24:22 - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@14849e75
2024-07-10 14:24:22 - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@14849e75
2024-07-10 14:24:22 - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@572d5588
2024-07-10 14:24:22 - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@41fd1cc
2024-07-10 14:24:22 - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@5a1f254b
2024-07-10 14:24:22 - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@6ad86f4b
2024-07-10 14:24:22 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@6ad86f4b
2024-07-10 14:24:22 - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@57e4e68d
2024-07-10 14:24:22 - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@2d8fcc0c
2024-07-10 14:24:22 - Adding type registration date -> org.hibernate.type.BasicTypeReference@e19918b
2024-07-10 14:24:22 - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@e19918b
2024-07-10 14:24:22 - Adding type registration time -> org.hibernate.type.BasicTypeReference@27920534
2024-07-10 14:24:22 - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@27920534
2024-07-10 14:24:22 - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@57325fc5
2024-07-10 14:24:22 - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@57325fc5
2024-07-10 14:24:22 - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@57325fc5
2024-07-10 14:24:22 - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@40e1683
2024-07-10 14:24:22 - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@40e1683
2024-07-10 14:24:22 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@40e1683
2024-07-10 14:24:22 - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@46595a40
2024-07-10 14:24:22 - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@71554c1a
2024-07-10 14:24:22 - Adding type registration instant -> org.hibernate.type.BasicTypeReference@345ce982
2024-07-10 14:24:22 - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@345ce982
2024-07-10 14:24:22 - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@40125b84
2024-07-10 14:24:22 - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@40125b84
2024-07-10 14:24:22 - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@40125b84
2024-07-10 14:24:22 - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@4c15929c
2024-07-10 14:24:22 - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@177b3298
2024-07-10 14:24:22 - Adding type registration class -> org.hibernate.type.BasicTypeReference@44b8d90c
2024-07-10 14:24:22 - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@44b8d90c
2024-07-10 14:24:22 - Adding type registration currency -> org.hibernate.type.BasicTypeReference@16247464
2024-07-10 14:24:22 - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@16247464
2024-07-10 14:24:22 - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@16247464
2024-07-10 14:24:22 - Adding type registration locale -> org.hibernate.type.BasicTypeReference@7645954e
2024-07-10 14:24:22 - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@7645954e
2024-07-10 14:24:22 - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@386486ec
2024-07-10 14:24:22 - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@386486ec
2024-07-10 14:24:22 - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@3a165855
2024-07-10 14:24:22 - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@3a165855
2024-07-10 14:24:22 - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@f249c27
2024-07-10 14:24:22 - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@f249c27
2024-07-10 14:24:22 - Adding type registration url -> org.hibernate.type.BasicTypeReference@55919768
2024-07-10 14:24:22 - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@55919768
2024-07-10 14:24:22 - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@495e28d0
2024-07-10 14:24:22 - Adding type registration object -> org.hibernate.type.JavaObjectType@5682c99a
2024-07-10 14:24:22 - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@5682c99a
2024-07-10 14:24:22 - Adding type registration null -> org.hibernate.type.NullType@4939ec4c
2024-07-10 14:24:22 - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@2c302bac
2024-07-10 14:24:22 - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@322bbbc3
2024-07-10 14:24:22 - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@68b10f2f
2024-07-10 14:24:22 - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@36847f85
2024-07-10 14:24:22 - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@1bc45fb2
2024-07-10 14:24:22 - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@745e0aaa
2024-07-10 14:24:22 - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@1476bb79
2024-07-10 14:24:22 - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@11b8625
2024-07-10 14:24:22 - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-10 14:24:22 - HikariPool-8 - Starting...
2024-07-10 14:24:22 - HikariPool-8 - Added connection org.postgresql.jdbc.PgConnection@406f7838
2024-07-10 14:24:22 - HikariPool-8 - Start completed.
2024-07-10 14:24:22 - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-07-10 14:24:22 - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2314d0f6) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3e29127a)
2024-07-10 14:24:22 - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2024-07-10 14:24:22 - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-07-10 14:24:22 - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@64139ad0
2024-07-10 14:24:22 - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@64139ad0
2024-07-10 14:24:22 - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@5682c99a`
2024-07-10 14:24:22 - Adding type registration Duration -> basicType@134(java.time.Duration,2)
2024-07-10 14:24:22 - Adding type registration java.time.Duration -> basicType@134(java.time.Duration,2)
2024-07-10 14:24:22 - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@135(java.time.OffsetDateTime,3003)
2024-07-10 14:24:22 - Adding type registration OffsetDateTime -> basicType@135(java.time.OffsetDateTime,3003)
2024-07-10 14:24:22 - Adding type registration java.time.OffsetDateTime -> basicType@135(java.time.OffsetDateTime,3003)
2024-07-10 14:24:22 - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@136(java.time.ZonedDateTime,3003)
2024-07-10 14:24:22 - Adding type registration ZonedDateTime -> basicType@136(java.time.ZonedDateTime,3003)
2024-07-10 14:24:22 - Adding type registration java.time.ZonedDateTime -> basicType@136(java.time.ZonedDateTime,3003)
2024-07-10 14:24:22 - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@137(java.time.OffsetTime,3007)
2024-07-10 14:24:22 - Adding type registration OffsetTime -> basicType@137(java.time.OffsetTime,3007)
2024-07-10 14:24:22 - Adding type registration java.time.OffsetTime -> basicType@137(java.time.OffsetTime,3007)
2024-07-10 14:24:22 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5f8680d2] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@5a9078b4]
2024-07-10 14:24:23 - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-10 14:24:23 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5f8680d2] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@1e1a3f00]
2024-07-10 14:24:23 - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@1e1a3f00] for TypeConfiguration
2024-07-10 14:24:23 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-10 14:24:23 - No authentication manager set. Reauthentication of users when changing passwords will not be performed.
2024-07-10 14:24:23 - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@644748ad, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6ce124e4, org.springframework.security.web.context.SecurityContextHolderFilter@76b30b70, org.springframework.security.web.header.HeaderWriterFilter@51b3c7ff, org.springframework.security.web.authentication.logout.LogoutFilter@6c97dcf9, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@527e69d3, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@5c0771, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@70339e82, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4dd2053a, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4d70e85a, org.springframework.security.web.access.ExceptionTranslationFilter@6d77177, org.springframework.security.web.access.intercept.AuthorizationFilter@5d1aa69f]
2024-07-10 14:24:23 - LiveReload server is running on port 35729
2024-07-10 14:24:23 - Starting ProtocolHandler ["http-nio-5001"]
2024-07-10 14:24:23 - Tomcat started on port(s): 5001 (http) with context path ''
2024-07-10 14:24:23 - Started SpringThymeleafApplication in 1.404 seconds (process running for 835.494)
2024-07-10 14:24:23 - Condition evaluation unchanged
2024-07-10 14:24:44 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-07-10 14:24:44 - Initializing Servlet 'dispatcherServlet'
2024-07-10 14:24:44 - Completed initialization in 1 ms
2024-07-10 14:24:44 - select n1_0.id,n1_0.cnpj_emissor,n1_0.data_captura,n1_0.data_emissao,n1_0.faixa_horario,n1_0.local_destino,n1_0.municipio_codigo,n1_0.numero_da_nota,n1_0.permissionario_cnpj,n1_0.portaria,n1_0.tipo_veiculo from nota n1_0 order by n1_0.data_captura desc offset ? rows fetch first ? rows only
2024-07-10 14:24:44 - select m1_0.ibge,m1_0.codigo,m1_0.nome,m1_0.uf from municipio m1_0
2024-07-10 14:24:44 - select p1_0.cnpj,p1_0.nome from permissionario p1_0
2024-07-10 14:24:59 - select m1_0.ibge,m1_0.codigo,m1_0.nome,m1_0.uf from municipio m1_0 where m1_0.ibge=?
2024-07-10 14:24:59 - select p1_0.cnpj,p1_0.nome from permissionario p1_0 where p1_0.cnpj=?
2024-07-10 14:24:59 - select n1_0.id,n1_0.cnpj_emissor,n1_0.data_captura,n1_0.data_emissao,n1_0.faixa_horario,n1_0.local_destino,n1_0.municipio_codigo,n1_0.numero_da_nota,n1_0.permissionario_cnpj,n1_0.portaria,n1_0.tipo_veiculo from nota n1_0 order by n1_0.data_captura desc offset ? rows fetch first ? rows only
2024-07-10 14:24:59 - select m1_0.ibge,m1_0.codigo,m1_0.nome,m1_0.uf from municipio m1_0
2024-07-10 14:24:59 - select p1_0.cnpj,p1_0.nome from permissionario p1_0
2024-07-10 14:24:59 - ID da entidade: null
2024-07-10 14:24:59 - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.reflect.UndeclaredThrowableException] with root cause
com.fasterxml.jackson.databind.exc.InvalidDefinitionException: Java 8 date/time type `java.time.LocalDate` not supported by default: add Module "com.fasterxml.jackson.datatype:jackson-datatype-jsr310" to enable handling (through reference chain: com.flc.springthymeleaf.domain.Nota["dataCaptura"])
	at com.fasterxml.jackson.databind.exc.InvalidDefinitionException.from(InvalidDefinitionException.java:77)
	at com.fasterxml.jackson.databind.SerializerProvider.reportBadDefinition(SerializerProvider.java:1308)
	at com.fasterxml.jackson.databind.ser.impl.UnsupportedTypeSerializer.serialize(UnsupportedTypeSerializer.java:35)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider._serialize(DefaultSerializerProvider.java:479)
	at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.serializeValue(DefaultSerializerProvider.java:318)
	at com.fasterxml.jackson.databind.ObjectMapper._writeValueAndClose(ObjectMapper.java:4719)
	at com.fasterxml.jackson.databind.ObjectMapper.writeValueAsString(ObjectMapper.java:3964)
	at com.flc.springthymeleaf.aspect.AuditAspect.beforeSave(AuditAspect.java:41)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJMethodBeforeAdvice.before(AspectJMethodBeforeAdvice.java:44)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:57)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at com.flc.springthymeleaf.service.NotaService$$SpringCGLIB$$0.save(<generated>)
	at com.flc.springthymeleaf.web.NotaController.salvarNota(NotaController.java:94)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:168)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2024-07-10 14:25:57 - Restarting due to 87 class path changes (0 additions, 0 deletions, 87 modifications)
2024-07-10 14:25:57 - Pausing ProtocolHandler ["http-nio-5001"]
2024-07-10 14:25:57 - Stopping service [Tomcat]
2024-07-10 14:25:57 - Destroying Spring FrameworkServlet 'dispatcherServlet'
2024-07-10 14:25:57 - Stopping ProtocolHandler ["http-nio-5001"]
2024-07-10 14:25:57 - Destroying ProtocolHandler ["http-nio-5001"]
2024-07-10 14:25:57 - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-10 14:25:57 - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@1e1a3f00] for TypeConfiguration
2024-07-10 14:25:57 - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@4ddcde9f] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@1e1a3f00]
2024-07-10 14:25:57 - HikariPool-8 - Shutdown initiated...
2024-07-10 14:25:57 - HikariPool-8 - Shutdown completed.
2024-07-10 14:25:57 - Starting SpringThymeleafApplication using Java 17.0.7 with PID 9900 (C:\Users\fernando.correa\Documents\GitHub\workspace2023\app-devceasa01.2003\target\classes started by fernando.correa in C:\Users\fernando.correa\Documents\GitHub\workspace2023\app-devceasa01.2003)
2024-07-10 14:25:57 - No active profile set, falling back to 1 default profile: "default"
2024-07-10 14:25:57 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-10 14:25:57 - Finished Spring Data repository scanning in 43 ms. Found 15 JPA repository interfaces.
2024-07-10 14:25:57 - Tomcat initialized with port(s): 5001 (http)
2024-07-10 14:25:57 - Initializing ProtocolHandler ["http-nio-5001"]
2024-07-10 14:25:57 - Starting service [Tomcat]
2024-07-10 14:25:57 - Starting Servlet engine: [Apache Tomcat/10.1.15]
2024-07-10 14:25:57 - Initializing Spring embedded WebApplicationContext
2024-07-10 14:25:57 - Root WebApplicationContext: initialization completed in 391 ms
2024-07-10 14:25:57 - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-10 14:25:57 - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@1c0b1c8
2024-07-10 14:25:57 - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@1c0b1c8
2024-07-10 14:25:57 - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@1c0b1c8
2024-07-10 14:25:57 - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@3f95de2c
2024-07-10 14:25:57 - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@3f95de2c
2024-07-10 14:25:57 - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@216f31d1
2024-07-10 14:25:57 - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@216f31d1
2024-07-10 14:25:57 - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@1babda35
2024-07-10 14:25:57 - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@1babda35
2024-07-10 14:25:57 - Adding type registration byte -> org.hibernate.type.BasicTypeReference@1fe17679
2024-07-10 14:25:57 - Adding type registration byte -> org.hibernate.type.BasicTypeReference@1fe17679
2024-07-10 14:25:57 - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@1fe17679
2024-07-10 14:25:57 - Adding type registration binary -> org.hibernate.type.BasicTypeReference@1392e42f
2024-07-10 14:25:57 - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@1392e42f
2024-07-10 14:25:57 - Adding type registration [B -> org.hibernate.type.BasicTypeReference@1392e42f
2024-07-10 14:25:57 - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@7540a9a
2024-07-10 14:25:57 - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@7540a9a
2024-07-10 14:25:57 - Adding type registration image -> org.hibernate.type.BasicTypeReference@2c137160
2024-07-10 14:25:57 - Adding type registration blob -> org.hibernate.type.BasicTypeReference@153262d1
2024-07-10 14:25:57 - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@153262d1
2024-07-10 14:25:57 - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@11054fc4
2024-07-10 14:25:57 - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@362287a4
2024-07-10 14:25:57 - Adding type registration short -> org.hibernate.type.BasicTypeReference@18d7871
2024-07-10 14:25:57 - Adding type registration short -> org.hibernate.type.BasicTypeReference@18d7871
2024-07-10 14:25:57 - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@18d7871
2024-07-10 14:25:57 - Adding type registration integer -> org.hibernate.type.BasicTypeReference@72fa67b
2024-07-10 14:25:57 - Adding type registration int -> org.hibernate.type.BasicTypeReference@72fa67b
2024-07-10 14:25:57 - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@72fa67b
2024-07-10 14:25:57 - Adding type registration long -> org.hibernate.type.BasicTypeReference@3cefb235
2024-07-10 14:25:57 - Adding type registration long -> org.hibernate.type.BasicTypeReference@3cefb235
2024-07-10 14:25:57 - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@3cefb235
2024-07-10 14:25:57 - Adding type registration float -> org.hibernate.type.BasicTypeReference@1e521dab
2024-07-10 14:25:57 - Adding type registration float -> org.hibernate.type.BasicTypeReference@1e521dab
2024-07-10 14:25:57 - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@1e521dab
2024-07-10 14:25:57 - Adding type registration double -> org.hibernate.type.BasicTypeReference@74f6a0e0
2024-07-10 14:25:57 - Adding type registration double -> org.hibernate.type.BasicTypeReference@74f6a0e0
2024-07-10 14:25:57 - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@74f6a0e0
2024-07-10 14:25:57 - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@e90dc7b
2024-07-10 14:25:57 - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@e90dc7b
2024-07-10 14:25:57 - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@4f2fa986
2024-07-10 14:25:57 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@4f2fa986
2024-07-10 14:25:57 - Adding type registration character -> org.hibernate.type.BasicTypeReference@411e5a8d
2024-07-10 14:25:57 - Adding type registration char -> org.hibernate.type.BasicTypeReference@411e5a8d
2024-07-10 14:25:57 - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@411e5a8d
2024-07-10 14:25:57 - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@ae13ee
2024-07-10 14:25:57 - Adding type registration string -> org.hibernate.type.BasicTypeReference@8d57484
2024-07-10 14:25:57 - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@8d57484
2024-07-10 14:25:57 - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@3a849f81
2024-07-10 14:25:57 - Adding type registration characters -> org.hibernate.type.BasicTypeReference@97d706e
2024-07-10 14:25:57 - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@97d706e
2024-07-10 14:25:57 - Adding type registration [C -> org.hibernate.type.BasicTypeReference@97d706e
2024-07-10 14:25:57 - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@79bc33cc
2024-07-10 14:25:57 - Adding type registration text -> org.hibernate.type.BasicTypeReference@5aee192b
2024-07-10 14:25:57 - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@4408fd60
2024-07-10 14:25:57 - Adding type registration clob -> org.hibernate.type.BasicTypeReference@26941b8f
2024-07-10 14:25:57 - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@26941b8f
2024-07-10 14:25:57 - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@3e2e7ec2
2024-07-10 14:25:57 - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@3e2e7ec2
2024-07-10 14:25:57 - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@14231f6d
2024-07-10 14:25:57 - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@17430374
2024-07-10 14:25:57 - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@110d3a70
2024-07-10 14:25:57 - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@5c989efd
2024-07-10 14:25:57 - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@504c2a74
2024-07-10 14:25:57 - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@5f9bcbaa
2024-07-10 14:25:57 - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@27bda493
2024-07-10 14:25:57 - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@27bda493
2024-07-10 14:25:57 - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@3fcaa9ef
2024-07-10 14:25:57 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@3fcaa9ef
2024-07-10 14:25:57 - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@e642be8
2024-07-10 14:25:57 - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@e642be8
2024-07-10 14:25:57 - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@f237715
2024-07-10 14:25:57 - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@f237715
2024-07-10 14:25:57 - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@45f0c35e
2024-07-10 14:25:57 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@45f0c35e
2024-07-10 14:25:57 - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2f9f8fde
2024-07-10 14:25:57 - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@8bdaae
2024-07-10 14:25:57 - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@14849e75
2024-07-10 14:25:57 - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@14849e75
2024-07-10 14:25:57 - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@572d5588
2024-07-10 14:25:57 - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@41fd1cc
2024-07-10 14:25:57 - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@5a1f254b
2024-07-10 14:25:57 - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@6ad86f4b
2024-07-10 14:25:57 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@6ad86f4b
2024-07-10 14:25:57 - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@57e4e68d
2024-07-10 14:25:57 - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@2d8fcc0c
2024-07-10 14:25:57 - Adding type registration date -> org.hibernate.type.BasicTypeReference@e19918b
2024-07-10 14:25:57 - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@e19918b
2024-07-10 14:25:57 - Adding type registration time -> org.hibernate.type.BasicTypeReference@27920534
2024-07-10 14:25:57 - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@27920534
2024-07-10 14:25:57 - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@57325fc5
2024-07-10 14:25:57 - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@57325fc5
2024-07-10 14:25:57 - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@57325fc5
2024-07-10 14:25:57 - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@40e1683
2024-07-10 14:25:57 - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@40e1683
2024-07-10 14:25:57 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@40e1683
2024-07-10 14:25:57 - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@46595a40
2024-07-10 14:25:57 - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@71554c1a
2024-07-10 14:25:57 - Adding type registration instant -> org.hibernate.type.BasicTypeReference@345ce982
2024-07-10 14:25:57 - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@345ce982
2024-07-10 14:25:57 - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@40125b84
2024-07-10 14:25:57 - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@40125b84
2024-07-10 14:25:57 - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@40125b84
2024-07-10 14:25:57 - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@4c15929c
2024-07-10 14:25:57 - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@177b3298
2024-07-10 14:25:57 - Adding type registration class -> org.hibernate.type.BasicTypeReference@44b8d90c
2024-07-10 14:25:57 - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@44b8d90c
2024-07-10 14:25:57 - Adding type registration currency -> org.hibernate.type.BasicTypeReference@16247464
2024-07-10 14:25:57 - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@16247464
2024-07-10 14:25:57 - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@16247464
2024-07-10 14:25:57 - Adding type registration locale -> org.hibernate.type.BasicTypeReference@7645954e
2024-07-10 14:25:57 - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@7645954e
2024-07-10 14:25:57 - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@386486ec
2024-07-10 14:25:57 - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@386486ec
2024-07-10 14:25:57 - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@3a165855
2024-07-10 14:25:57 - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@3a165855
2024-07-10 14:25:57 - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@f249c27
2024-07-10 14:25:57 - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@f249c27
2024-07-10 14:25:57 - Adding type registration url -> org.hibernate.type.BasicTypeReference@55919768
2024-07-10 14:25:57 - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@55919768
2024-07-10 14:25:57 - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@495e28d0
2024-07-10 14:25:57 - Adding type registration object -> org.hibernate.type.JavaObjectType@5682c99a
2024-07-10 14:25:57 - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@5682c99a
2024-07-10 14:25:57 - Adding type registration null -> org.hibernate.type.NullType@4939ec4c
2024-07-10 14:25:57 - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@37ffe096
2024-07-10 14:25:57 - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@773274c2
2024-07-10 14:25:57 - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@8dd45c3
2024-07-10 14:25:57 - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@1d70ed9a
2024-07-10 14:25:57 - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@554355f2
2024-07-10 14:25:57 - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@31b3affc
2024-07-10 14:25:57 - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@53a20754
2024-07-10 14:25:57 - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@49a43c87
2024-07-10 14:25:57 - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-10 14:25:57 - HikariPool-9 - Starting...
2024-07-10 14:25:57 - HikariPool-9 - Added connection org.postgresql.jdbc.PgConnection@194fcec
2024-07-10 14:25:57 - HikariPool-9 - Start completed.
2024-07-10 14:25:57 - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-07-10 14:25:57 - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3f49b376) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@29c71b4f)
2024-07-10 14:25:57 - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2024-07-10 14:25:57 - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-07-10 14:25:57 - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@25ddfdda
2024-07-10 14:25:57 - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@25ddfdda
2024-07-10 14:25:57 - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@5682c99a`
2024-07-10 14:25:57 - Adding type registration Duration -> basicType@153(java.time.Duration,2)
2024-07-10 14:25:57 - Adding type registration java.time.Duration -> basicType@153(java.time.Duration,2)
2024-07-10 14:25:57 - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@154(java.time.OffsetDateTime,3003)
2024-07-10 14:25:57 - Adding type registration OffsetDateTime -> basicType@154(java.time.OffsetDateTime,3003)
2024-07-10 14:25:57 - Adding type registration java.time.OffsetDateTime -> basicType@154(java.time.OffsetDateTime,3003)
2024-07-10 14:25:57 - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@155(java.time.ZonedDateTime,3003)
2024-07-10 14:25:57 - Adding type registration ZonedDateTime -> basicType@155(java.time.ZonedDateTime,3003)
2024-07-10 14:25:57 - Adding type registration java.time.ZonedDateTime -> basicType@155(java.time.ZonedDateTime,3003)
2024-07-10 14:25:57 - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@156(java.time.OffsetTime,3007)
2024-07-10 14:25:57 - Adding type registration OffsetTime -> basicType@156(java.time.OffsetTime,3007)
2024-07-10 14:25:57 - Adding type registration java.time.OffsetTime -> basicType@156(java.time.OffsetTime,3007)
2024-07-10 14:25:57 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3080611] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@7128d705]
2024-07-10 14:25:58 - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-10 14:25:58 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3080611] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@2080998c]
2024-07-10 14:25:58 - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@2080998c] for TypeConfiguration
2024-07-10 14:25:58 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-10 14:25:58 - No authentication manager set. Reauthentication of users when changing passwords will not be performed.
2024-07-10 14:25:58 - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@3bad1458, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@48f9b7f, org.springframework.security.web.context.SecurityContextHolderFilter@7a2e07ab, org.springframework.security.web.header.HeaderWriterFilter@55dbe5a, org.springframework.security.web.authentication.logout.LogoutFilter@64873a39, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@3ba8e40c, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@662347b2, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@4be85a09, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@659aaf1, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@787b8766, org.springframework.security.web.access.ExceptionTranslationFilter@69548500, org.springframework.security.web.access.intercept.AuthorizationFilter@26f33dd7]
2024-07-10 14:25:58 - LiveReload server is running on port 35729
2024-07-10 14:25:58 - Starting ProtocolHandler ["http-nio-5001"]
2024-07-10 14:25:58 - Tomcat started on port(s): 5001 (http) with context path ''
2024-07-10 14:25:58 - Started SpringThymeleafApplication in 1.478 seconds (process running for 930.521)
2024-07-10 14:25:58 - Condition evaluation unchanged
2024-07-10 14:29:31 - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2024-07-10 14:29:31 - Pausing ProtocolHandler ["http-nio-5001"]
2024-07-10 14:29:31 - Stopping service [Tomcat]
2024-07-10 14:29:31 - Stopping ProtocolHandler ["http-nio-5001"]
2024-07-10 14:29:31 - Destroying ProtocolHandler ["http-nio-5001"]
2024-07-10 14:29:31 - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-10 14:29:31 - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@2080998c] for TypeConfiguration
2024-07-10 14:29:31 - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@2fb91780] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@2080998c]
2024-07-10 14:29:31 - HikariPool-9 - Shutdown initiated...
2024-07-10 14:29:31 - HikariPool-9 - Shutdown completed.
2024-07-10 14:29:31 - Starting SpringThymeleafApplication using Java 17.0.7 with PID 9900 (C:\Users\fernando.correa\Documents\GitHub\workspace2023\app-devceasa01.2003\target\classes started by fernando.correa in C:\Users\fernando.correa\Documents\GitHub\workspace2023\app-devceasa01.2003)
2024-07-10 14:29:31 - No active profile set, falling back to 1 default profile: "default"
2024-07-10 14:29:31 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-10 14:29:31 - Finished Spring Data repository scanning in 36 ms. Found 15 JPA repository interfaces.
2024-07-10 14:29:32 - Tomcat initialized with port(s): 5001 (http)
2024-07-10 14:29:32 - Initializing ProtocolHandler ["http-nio-5001"]
2024-07-10 14:29:32 - Starting service [Tomcat]
2024-07-10 14:29:32 - Starting Servlet engine: [Apache Tomcat/10.1.15]
2024-07-10 14:29:32 - Initializing Spring embedded WebApplicationContext
2024-07-10 14:29:32 - Root WebApplicationContext: initialization completed in 348 ms
2024-07-10 14:29:32 - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-10 14:29:32 - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@1c0b1c8
2024-07-10 14:29:32 - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@1c0b1c8
2024-07-10 14:29:32 - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@1c0b1c8
2024-07-10 14:29:32 - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@3f95de2c
2024-07-10 14:29:32 - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@3f95de2c
2024-07-10 14:29:32 - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@216f31d1
2024-07-10 14:29:32 - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@216f31d1
2024-07-10 14:29:32 - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@1babda35
2024-07-10 14:29:32 - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@1babda35
2024-07-10 14:29:32 - Adding type registration byte -> org.hibernate.type.BasicTypeReference@1fe17679
2024-07-10 14:29:32 - Adding type registration byte -> org.hibernate.type.BasicTypeReference@1fe17679
2024-07-10 14:29:32 - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@1fe17679
2024-07-10 14:29:32 - Adding type registration binary -> org.hibernate.type.BasicTypeReference@1392e42f
2024-07-10 14:29:32 - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@1392e42f
2024-07-10 14:29:32 - Adding type registration [B -> org.hibernate.type.BasicTypeReference@1392e42f
2024-07-10 14:29:32 - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@7540a9a
2024-07-10 14:29:32 - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@7540a9a
2024-07-10 14:29:32 - Adding type registration image -> org.hibernate.type.BasicTypeReference@2c137160
2024-07-10 14:29:32 - Adding type registration blob -> org.hibernate.type.BasicTypeReference@153262d1
2024-07-10 14:29:32 - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@153262d1
2024-07-10 14:29:32 - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@11054fc4
2024-07-10 14:29:32 - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@362287a4
2024-07-10 14:29:32 - Adding type registration short -> org.hibernate.type.BasicTypeReference@18d7871
2024-07-10 14:29:32 - Adding type registration short -> org.hibernate.type.BasicTypeReference@18d7871
2024-07-10 14:29:32 - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@18d7871
2024-07-10 14:29:32 - Adding type registration integer -> org.hibernate.type.BasicTypeReference@72fa67b
2024-07-10 14:29:32 - Adding type registration int -> org.hibernate.type.BasicTypeReference@72fa67b
2024-07-10 14:29:32 - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@72fa67b
2024-07-10 14:29:32 - Adding type registration long -> org.hibernate.type.BasicTypeReference@3cefb235
2024-07-10 14:29:32 - Adding type registration long -> org.hibernate.type.BasicTypeReference@3cefb235
2024-07-10 14:29:32 - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@3cefb235
2024-07-10 14:29:32 - Adding type registration float -> org.hibernate.type.BasicTypeReference@1e521dab
2024-07-10 14:29:32 - Adding type registration float -> org.hibernate.type.BasicTypeReference@1e521dab
2024-07-10 14:29:32 - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@1e521dab
2024-07-10 14:29:32 - Adding type registration double -> org.hibernate.type.BasicTypeReference@74f6a0e0
2024-07-10 14:29:32 - Adding type registration double -> org.hibernate.type.BasicTypeReference@74f6a0e0
2024-07-10 14:29:32 - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@74f6a0e0
2024-07-10 14:29:32 - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@e90dc7b
2024-07-10 14:29:32 - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@e90dc7b
2024-07-10 14:29:32 - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@4f2fa986
2024-07-10 14:29:32 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@4f2fa986
2024-07-10 14:29:32 - Adding type registration character -> org.hibernate.type.BasicTypeReference@411e5a8d
2024-07-10 14:29:32 - Adding type registration char -> org.hibernate.type.BasicTypeReference@411e5a8d
2024-07-10 14:29:32 - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@411e5a8d
2024-07-10 14:29:32 - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@ae13ee
2024-07-10 14:29:32 - Adding type registration string -> org.hibernate.type.BasicTypeReference@8d57484
2024-07-10 14:29:32 - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@8d57484
2024-07-10 14:29:32 - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@3a849f81
2024-07-10 14:29:32 - Adding type registration characters -> org.hibernate.type.BasicTypeReference@97d706e
2024-07-10 14:29:32 - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@97d706e
2024-07-10 14:29:32 - Adding type registration [C -> org.hibernate.type.BasicTypeReference@97d706e
2024-07-10 14:29:32 - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@79bc33cc
2024-07-10 14:29:32 - Adding type registration text -> org.hibernate.type.BasicTypeReference@5aee192b
2024-07-10 14:29:32 - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@4408fd60
2024-07-10 14:29:32 - Adding type registration clob -> org.hibernate.type.BasicTypeReference@26941b8f
2024-07-10 14:29:32 - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@26941b8f
2024-07-10 14:29:32 - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@3e2e7ec2
2024-07-10 14:29:32 - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@3e2e7ec2
2024-07-10 14:29:32 - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@14231f6d
2024-07-10 14:29:32 - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@17430374
2024-07-10 14:29:32 - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@110d3a70
2024-07-10 14:29:32 - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@5c989efd
2024-07-10 14:29:32 - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@504c2a74
2024-07-10 14:29:32 - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@5f9bcbaa
2024-07-10 14:29:32 - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@27bda493
2024-07-10 14:29:32 - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@27bda493
2024-07-10 14:29:32 - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@3fcaa9ef
2024-07-10 14:29:32 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@3fcaa9ef
2024-07-10 14:29:32 - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@e642be8
2024-07-10 14:29:32 - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@e642be8
2024-07-10 14:29:32 - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@f237715
2024-07-10 14:29:32 - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@f237715
2024-07-10 14:29:32 - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@45f0c35e
2024-07-10 14:29:32 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@45f0c35e
2024-07-10 14:29:32 - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2f9f8fde
2024-07-10 14:29:32 - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@8bdaae
2024-07-10 14:29:32 - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@14849e75
2024-07-10 14:29:32 - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@14849e75
2024-07-10 14:29:32 - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@572d5588
2024-07-10 14:29:32 - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@41fd1cc
2024-07-10 14:29:32 - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@5a1f254b
2024-07-10 14:29:32 - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@6ad86f4b
2024-07-10 14:29:32 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@6ad86f4b
2024-07-10 14:29:32 - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@57e4e68d
2024-07-10 14:29:32 - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@2d8fcc0c
2024-07-10 14:29:32 - Adding type registration date -> org.hibernate.type.BasicTypeReference@e19918b
2024-07-10 14:29:32 - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@e19918b
2024-07-10 14:29:32 - Adding type registration time -> org.hibernate.type.BasicTypeReference@27920534
2024-07-10 14:29:32 - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@27920534
2024-07-10 14:29:32 - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@57325fc5
2024-07-10 14:29:32 - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@57325fc5
2024-07-10 14:29:32 - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@57325fc5
2024-07-10 14:29:32 - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@40e1683
2024-07-10 14:29:32 - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@40e1683
2024-07-10 14:29:32 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@40e1683
2024-07-10 14:29:32 - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@46595a40
2024-07-10 14:29:32 - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@71554c1a
2024-07-10 14:29:32 - Adding type registration instant -> org.hibernate.type.BasicTypeReference@345ce982
2024-07-10 14:29:32 - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@345ce982
2024-07-10 14:29:32 - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@40125b84
2024-07-10 14:29:32 - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@40125b84
2024-07-10 14:29:32 - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@40125b84
2024-07-10 14:29:32 - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@4c15929c
2024-07-10 14:29:32 - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@177b3298
2024-07-10 14:29:32 - Adding type registration class -> org.hibernate.type.BasicTypeReference@44b8d90c
2024-07-10 14:29:32 - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@44b8d90c
2024-07-10 14:29:32 - Adding type registration currency -> org.hibernate.type.BasicTypeReference@16247464
2024-07-10 14:29:32 - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@16247464
2024-07-10 14:29:32 - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@16247464
2024-07-10 14:29:32 - Adding type registration locale -> org.hibernate.type.BasicTypeReference@7645954e
2024-07-10 14:29:32 - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@7645954e
2024-07-10 14:29:32 - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@386486ec
2024-07-10 14:29:32 - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@386486ec
2024-07-10 14:29:32 - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@3a165855
2024-07-10 14:29:32 - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@3a165855
2024-07-10 14:29:32 - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@f249c27
2024-07-10 14:29:32 - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@f249c27
2024-07-10 14:29:32 - Adding type registration url -> org.hibernate.type.BasicTypeReference@55919768
2024-07-10 14:29:32 - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@55919768
2024-07-10 14:29:32 - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@495e28d0
2024-07-10 14:29:32 - Adding type registration object -> org.hibernate.type.JavaObjectType@5682c99a
2024-07-10 14:29:32 - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@5682c99a
2024-07-10 14:29:32 - Adding type registration null -> org.hibernate.type.NullType@4939ec4c
2024-07-10 14:29:32 - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@375b456f
2024-07-10 14:29:32 - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@8422c8d
2024-07-10 14:29:32 - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@453d6764
2024-07-10 14:29:32 - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@74ff9ee9
2024-07-10 14:29:32 - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@1962cd24
2024-07-10 14:29:32 - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@ddacc1
2024-07-10 14:29:32 - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@2e75fdf9
2024-07-10 14:29:32 - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@26752608
2024-07-10 14:29:32 - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-10 14:29:32 - HikariPool-10 - Starting...
2024-07-10 14:29:32 - HikariPool-10 - Added connection org.postgresql.jdbc.PgConnection@4a7642c5
2024-07-10 14:29:32 - HikariPool-10 - Start completed.
2024-07-10 14:29:32 - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-07-10 14:29:32 - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6d80a638) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@17af1032)
2024-07-10 14:29:32 - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2024-07-10 14:29:32 - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-07-10 14:29:32 - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@31fdef42
2024-07-10 14:29:32 - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@31fdef42
2024-07-10 14:29:32 - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@5682c99a`
2024-07-10 14:29:32 - Adding type registration Duration -> basicType@172(java.time.Duration,2)
2024-07-10 14:29:32 - Adding type registration java.time.Duration -> basicType@172(java.time.Duration,2)
2024-07-10 14:29:32 - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@173(java.time.OffsetDateTime,3003)
2024-07-10 14:29:32 - Adding type registration OffsetDateTime -> basicType@173(java.time.OffsetDateTime,3003)
2024-07-10 14:29:32 - Adding type registration java.time.OffsetDateTime -> basicType@173(java.time.OffsetDateTime,3003)
2024-07-10 14:29:32 - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@174(java.time.ZonedDateTime,3003)
2024-07-10 14:29:32 - Adding type registration ZonedDateTime -> basicType@174(java.time.ZonedDateTime,3003)
2024-07-10 14:29:32 - Adding type registration java.time.ZonedDateTime -> basicType@174(java.time.ZonedDateTime,3003)
2024-07-10 14:29:32 - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@175(java.time.OffsetTime,3007)
2024-07-10 14:29:32 - Adding type registration OffsetTime -> basicType@175(java.time.OffsetTime,3007)
2024-07-10 14:29:32 - Adding type registration java.time.OffsetTime -> basicType@175(java.time.OffsetTime,3007)
2024-07-10 14:29:32 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4965f3d2] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@213c2da0]
2024-07-10 14:29:32 - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-10 14:29:32 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4965f3d2] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@6e240142]
2024-07-10 14:29:32 - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@6e240142] for TypeConfiguration
2024-07-10 14:29:32 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-10 14:29:32 - No authentication manager set. Reauthentication of users when changing passwords will not be performed.
2024-07-10 14:29:33 - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@1fc023a8, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@34183db4, org.springframework.security.web.context.SecurityContextHolderFilter@4ed4cc53, org.springframework.security.web.header.HeaderWriterFilter@71137fb4, org.springframework.security.web.authentication.logout.LogoutFilter@76dccf1a, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@3d780ad1, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@2d4ca67b, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@554abbce, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@74061126, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@494b8764, org.springframework.security.web.access.ExceptionTranslationFilter@28813d9c, org.springframework.security.web.access.intercept.AuthorizationFilter@32832e1a]
2024-07-10 14:29:33 - LiveReload server is running on port 35729
2024-07-10 14:29:33 - Starting ProtocolHandler ["http-nio-5001"]
2024-07-10 14:29:33 - Tomcat started on port(s): 5001 (http) with context path ''
2024-07-10 14:29:33 - Started SpringThymeleafApplication in 1.41 seconds (process running for 1144.885)
2024-07-10 14:29:33 - Condition evaluation unchanged
2024-07-10 14:29:36 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-07-10 14:29:36 - Initializing Servlet 'dispatcherServlet'
2024-07-10 14:29:36 - Completed initialization in 1 ms
2024-07-10 14:29:36 - select n1_0.id,n1_0.cnpj_emissor,n1_0.data_captura,n1_0.data_emissao,n1_0.faixa_horario,n1_0.local_destino,n1_0.municipio_codigo,n1_0.numero_da_nota,n1_0.permissionario_cnpj,n1_0.portaria,n1_0.tipo_veiculo from nota n1_0 order by n1_0.data_captura desc offset ? rows fetch first ? rows only
2024-07-10 14:29:36 - select m1_0.ibge,m1_0.codigo,m1_0.nome,m1_0.uf from municipio m1_0
2024-07-10 14:29:36 - select p1_0.cnpj,p1_0.nome from permissionario p1_0
2024-07-10 14:29:38 - select n1_0.id,n1_0.cnpj_emissor,n1_0.data_captura,n1_0.data_emissao,n1_0.faixa_horario,n1_0.local_destino,n1_0.municipio_codigo,n1_0.numero_da_nota,n1_0.permissionario_cnpj,n1_0.portaria,n1_0.tipo_veiculo from nota n1_0 order by n1_0.data_captura desc offset ? rows fetch first ? rows only
2024-07-10 14:29:38 - select m1_0.ibge,m1_0.codigo,m1_0.nome,m1_0.uf from municipio m1_0
2024-07-10 14:29:38 - select p1_0.cnpj,p1_0.nome from permissionario p1_0
2024-07-10 14:29:48 - select m1_0.ibge,m1_0.codigo,m1_0.nome,m1_0.uf from municipio m1_0 where m1_0.ibge=?
2024-07-10 14:29:48 - select p1_0.cnpj,p1_0.nome from permissionario p1_0 where p1_0.cnpj=?
2024-07-10 14:29:48 - ID da entidade: null
2024-07-10 14:29:48 - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.reflect.UndeclaredThrowableException] with root cause
com.fasterxml.jackson.databind.exc.InvalidDefinitionException: Java 8 date/time type `java.time.LocalDate` not supported by default: add Module "com.fasterxml.jackson.datatype:jackson-datatype-jsr310" to enable handling (through reference chain: com.flc.springthymeleaf.domain.Nota["dataCaptura"])
	at com.fasterxml.jackson.databind.exc.InvalidDefinitionException.from(InvalidDefinitionException.java:77)
	at com.fasterxml.jackson.databind.SerializerProvider.reportBadDefinition(SerializerProvider.java:1308)
	at com.fasterxml.jackson.databind.ser.impl.UnsupportedTypeSerializer.serialize(UnsupportedTypeSerializer.java:35)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider._serialize(DefaultSerializerProvider.java:479)
	at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.serializeValue(DefaultSerializerProvider.java:318)
	at com.fasterxml.jackson.databind.ObjectMapper._writeValueAndClose(ObjectMapper.java:4719)
	at com.fasterxml.jackson.databind.ObjectMapper.writeValueAsString(ObjectMapper.java:3964)
	at com.flc.springthymeleaf.aspect.AuditAspect.beforeSave(AuditAspect.java:41)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJMethodBeforeAdvice.before(AspectJMethodBeforeAdvice.java:44)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:57)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at com.flc.springthymeleaf.service.NotaService$$SpringCGLIB$$0.save(<generated>)
	at com.flc.springthymeleaf.web.NotaController.salvarNota(NotaController.java:76)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:168)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2024-07-10 14:30:24 - Application shutdown requested.
2024-07-10 14:30:24 - Pausing ProtocolHandler ["http-nio-5001"]
2024-07-10 14:30:24 - Stopping service [Tomcat]
2024-07-10 14:30:24 - Destroying Spring FrameworkServlet 'dispatcherServlet'
2024-07-10 14:30:24 - Stopping ProtocolHandler ["http-nio-5001"]
2024-07-10 14:30:24 - Destroying ProtocolHandler ["http-nio-5001"]
2024-07-10 14:30:24 - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-10 14:30:24 - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@6e240142] for TypeConfiguration
2024-07-10 14:30:24 - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@21615f89] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@6e240142]
2024-07-10 14:30:24 - HikariPool-10 - Shutdown initiated...
2024-07-10 14:30:24 - HikariPool-10 - Shutdown completed.
2024-07-10 14:48:24 - HV000001: Hibernate Validator 8.0.1.Final
2024-07-10 14:48:24 - Starting SpringThymeleafApplication using Java 17.0.7 with PID 18164 (C:\Users\fernando.correa\Documents\GitHub\workspace2023\app-devceasa01.2003\target\classes started by fernando.correa in C:\Users\fernando.correa\Documents\GitHub\workspace2023\app-devceasa01.2003)
2024-07-10 14:48:24 - No active profile set, falling back to 1 default profile: "default"
2024-07-10 14:48:24 - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-07-10 14:48:24 - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-07-10 14:48:25 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-10 14:48:25 - Finished Spring Data repository scanning in 83 ms. Found 15 JPA repository interfaces.
2024-07-10 14:48:26 - Tomcat initialized with port(s): 5001 (http)
2024-07-10 14:48:26 - Initializing ProtocolHandler ["http-nio-5001"]
2024-07-10 14:48:26 - Starting service [Tomcat]
2024-07-10 14:48:26 - Starting Servlet engine: [Apache Tomcat/10.1.15]
2024-07-10 14:48:26 - Initializing Spring embedded WebApplicationContext
2024-07-10 14:48:26 - Root WebApplicationContext: initialization completed in 1480 ms
2024-07-10 14:48:26 - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-10 14:48:26 - HHH000412: Hibernate ORM core version 6.2.13.Final
2024-07-10 14:48:26 - HHH000406: Using bytecode reflection optimizer
2024-07-10 14:48:26 - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@2c137160
2024-07-10 14:48:26 - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@2c137160
2024-07-10 14:48:26 - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@2c137160
2024-07-10 14:48:26 - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@153262d1
2024-07-10 14:48:26 - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@153262d1
2024-07-10 14:48:26 - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@11054fc4
2024-07-10 14:48:26 - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@11054fc4
2024-07-10 14:48:26 - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@362287a4
2024-07-10 14:48:26 - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@362287a4
2024-07-10 14:48:26 - Adding type registration byte -> org.hibernate.type.BasicTypeReference@18d7871
2024-07-10 14:48:26 - Adding type registration byte -> org.hibernate.type.BasicTypeReference@18d7871
2024-07-10 14:48:26 - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@18d7871
2024-07-10 14:48:26 - Adding type registration binary -> org.hibernate.type.BasicTypeReference@1e521dab
2024-07-10 14:48:26 - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@1e521dab
2024-07-10 14:48:26 - Adding type registration [B -> org.hibernate.type.BasicTypeReference@1e521dab
2024-07-10 14:48:26 - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@74f6a0e0
2024-07-10 14:48:26 - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@74f6a0e0
2024-07-10 14:48:26 - Adding type registration image -> org.hibernate.type.BasicTypeReference@e90dc7b
2024-07-10 14:48:26 - Adding type registration blob -> org.hibernate.type.BasicTypeReference@4f2fa986
2024-07-10 14:48:26 - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@4f2fa986
2024-07-10 14:48:26 - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@411e5a8d
2024-07-10 14:48:26 - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@ae13ee
2024-07-10 14:48:26 - Adding type registration short -> org.hibernate.type.BasicTypeReference@8d57484
2024-07-10 14:48:26 - Adding type registration short -> org.hibernate.type.BasicTypeReference@8d57484
2024-07-10 14:48:26 - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@8d57484
2024-07-10 14:48:26 - Adding type registration integer -> org.hibernate.type.BasicTypeReference@3a849f81
2024-07-10 14:48:26 - Adding type registration int -> org.hibernate.type.BasicTypeReference@3a849f81
2024-07-10 14:48:26 - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@3a849f81
2024-07-10 14:48:26 - Adding type registration long -> org.hibernate.type.BasicTypeReference@97d706e
2024-07-10 14:48:26 - Adding type registration long -> org.hibernate.type.BasicTypeReference@97d706e
2024-07-10 14:48:26 - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@97d706e
2024-07-10 14:48:26 - Adding type registration float -> org.hibernate.type.BasicTypeReference@79bc33cc
2024-07-10 14:48:26 - Adding type registration float -> org.hibernate.type.BasicTypeReference@79bc33cc
2024-07-10 14:48:26 - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@79bc33cc
2024-07-10 14:48:26 - Adding type registration double -> org.hibernate.type.BasicTypeReference@5aee192b
2024-07-10 14:48:26 - Adding type registration double -> org.hibernate.type.BasicTypeReference@5aee192b
2024-07-10 14:48:26 - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@5aee192b
2024-07-10 14:48:26 - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@4408fd60
2024-07-10 14:48:26 - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@4408fd60
2024-07-10 14:48:26 - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@26941b8f
2024-07-10 14:48:26 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@26941b8f
2024-07-10 14:48:26 - Adding type registration character -> org.hibernate.type.BasicTypeReference@3e2e7ec2
2024-07-10 14:48:26 - Adding type registration char -> org.hibernate.type.BasicTypeReference@3e2e7ec2
2024-07-10 14:48:26 - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@3e2e7ec2
2024-07-10 14:48:26 - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@14231f6d
2024-07-10 14:48:26 - Adding type registration string -> org.hibernate.type.BasicTypeReference@17430374
2024-07-10 14:48:26 - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@17430374
2024-07-10 14:48:26 - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@110d3a70
2024-07-10 14:48:26 - Adding type registration characters -> org.hibernate.type.BasicTypeReference@5c989efd
2024-07-10 14:48:26 - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@5c989efd
2024-07-10 14:48:26 - Adding type registration [C -> org.hibernate.type.BasicTypeReference@5c989efd
2024-07-10 14:48:26 - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@504c2a74
2024-07-10 14:48:26 - Adding type registration text -> org.hibernate.type.BasicTypeReference@5f9bcbaa
2024-07-10 14:48:26 - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@27bda493
2024-07-10 14:48:26 - Adding type registration clob -> org.hibernate.type.BasicTypeReference@3fcaa9ef
2024-07-10 14:48:26 - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@3fcaa9ef
2024-07-10 14:48:26 - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@e642be8
2024-07-10 14:48:26 - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@e642be8
2024-07-10 14:48:26 - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@f237715
2024-07-10 14:48:26 - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@45f0c35e
2024-07-10 14:48:26 - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@2f9f8fde
2024-07-10 14:48:26 - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@8bdaae
2024-07-10 14:48:26 - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@14849e75
2024-07-10 14:48:26 - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@572d5588
2024-07-10 14:48:26 - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@41fd1cc
2024-07-10 14:48:26 - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@41fd1cc
2024-07-10 14:48:26 - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@5a1f254b
2024-07-10 14:48:26 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@5a1f254b
2024-07-10 14:48:26 - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@6ad86f4b
2024-07-10 14:48:26 - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@6ad86f4b
2024-07-10 14:48:26 - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@57e4e68d
2024-07-10 14:48:26 - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@57e4e68d
2024-07-10 14:48:26 - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@2d8fcc0c
2024-07-10 14:48:26 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@2d8fcc0c
2024-07-10 14:48:26 - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@e19918b
2024-07-10 14:48:26 - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@27920534
2024-07-10 14:48:26 - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@57325fc5
2024-07-10 14:48:26 - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@57325fc5
2024-07-10 14:48:26 - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@40e1683
2024-07-10 14:48:26 - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@46595a40
2024-07-10 14:48:26 - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@71554c1a
2024-07-10 14:48:26 - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@345ce982
2024-07-10 14:48:26 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@345ce982
2024-07-10 14:48:26 - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@40125b84
2024-07-10 14:48:26 - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4c15929c
2024-07-10 14:48:26 - Adding type registration date -> org.hibernate.type.BasicTypeReference@177b3298
2024-07-10 14:48:26 - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@177b3298
2024-07-10 14:48:26 - Adding type registration time -> org.hibernate.type.BasicTypeReference@44b8d90c
2024-07-10 14:48:26 - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@44b8d90c
2024-07-10 14:48:26 - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@16247464
2024-07-10 14:48:26 - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@16247464
2024-07-10 14:48:26 - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@16247464
2024-07-10 14:48:26 - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@7645954e
2024-07-10 14:48:26 - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@7645954e
2024-07-10 14:48:26 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@7645954e
2024-07-10 14:48:26 - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@386486ec
2024-07-10 14:48:26 - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@3a165855
2024-07-10 14:48:26 - Adding type registration instant -> org.hibernate.type.BasicTypeReference@f249c27
2024-07-10 14:48:26 - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@f249c27
2024-07-10 14:48:26 - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@55919768
2024-07-10 14:48:26 - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@55919768
2024-07-10 14:48:26 - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@55919768
2024-07-10 14:48:26 - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@495e28d0
2024-07-10 14:48:26 - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@4182155e
2024-07-10 14:48:26 - Adding type registration class -> org.hibernate.type.BasicTypeReference@6a6c6ced
2024-07-10 14:48:26 - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@6a6c6ced
2024-07-10 14:48:26 - Adding type registration currency -> org.hibernate.type.BasicTypeReference@339f8c1f
2024-07-10 14:48:26 - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@339f8c1f
2024-07-10 14:48:26 - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@339f8c1f
2024-07-10 14:48:26 - Adding type registration locale -> org.hibernate.type.BasicTypeReference@bbf3a14
2024-07-10 14:48:26 - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@bbf3a14
2024-07-10 14:48:26 - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@5a46f6d8
2024-07-10 14:48:26 - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@5a46f6d8
2024-07-10 14:48:26 - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@53c4e279
2024-07-10 14:48:26 - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@53c4e279
2024-07-10 14:48:26 - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@1cf4636a
2024-07-10 14:48:26 - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@1cf4636a
2024-07-10 14:48:26 - Adding type registration url -> org.hibernate.type.BasicTypeReference@6e69857a
2024-07-10 14:48:26 - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@6e69857a
2024-07-10 14:48:26 - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@3744e59
2024-07-10 14:48:26 - Adding type registration object -> org.hibernate.type.JavaObjectType@3fadd738
2024-07-10 14:48:26 - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@3fadd738
2024-07-10 14:48:26 - Adding type registration null -> org.hibernate.type.NullType@68dd0ab6
2024-07-10 14:48:26 - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@48997c74
2024-07-10 14:48:26 - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@2219fa19
2024-07-10 14:48:26 - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@61ec51f8
2024-07-10 14:48:26 - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@61e46fc9
2024-07-10 14:48:26 - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@629dd55d
2024-07-10 14:48:26 - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@f393225
2024-07-10 14:48:26 - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@c59d1ab
2024-07-10 14:48:26 - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@4e017dce
2024-07-10 14:48:26 - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-10 14:48:26 - HikariPool-1 - Starting...
2024-07-10 14:48:27 - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@3da79bd8
2024-07-10 14:48:27 - HikariPool-1 - Start completed.
2024-07-10 14:48:27 - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-07-10 14:48:27 - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2d5a53d6) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@773e2a9a)
2024-07-10 14:48:27 - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2024-07-10 14:48:27 - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-07-10 14:48:27 - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@613ef483
2024-07-10 14:48:27 - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@613ef483
2024-07-10 14:48:27 - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@3fadd738`
2024-07-10 14:48:27 - Adding type registration Duration -> basicType@1(java.time.Duration,2)
2024-07-10 14:48:27 - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
2024-07-10 14:48:27 - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-10 14:48:27 - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-10 14:48:27 - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-10 14:48:27 - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-10 14:48:27 - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-10 14:48:27 - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-10 14:48:27 - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-07-10 14:48:27 - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-07-10 14:48:27 - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-07-10 14:48:27 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@31ffa8ab] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@5a1fc303]
2024-07-10 14:48:28 - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-10 14:48:28 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@31ffa8ab] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@76a08ace]
2024-07-10 14:48:28 - create table nota (id serial not null, cnpj_emissor varchar(255), data_captura DATE, data_emissao DATE, faixa_horario varchar(255) check (faixa_horario in ('HORARIO_01','HORARIO_02','HORARIO_03')), local_destino varchar(255) check (local_destino in ('GP4','GP2','MLC')), numero_da_nota varchar(255), portaria varchar(255) check (portaria in ('PORTARIA_PRINCIPAL','PORTARIA_MERCADO_FLORES')), tipo_veiculo varchar(255) check (tipo_veiculo in ('UP','CT','LV')), municipio_codigo varchar(255), permissionario_cnpj varchar(14), primary key (id))
2024-07-10 14:48:28 - alter table if exists nota add constraint FKpju8i10mvr180nlyy2qq2s1h1 foreign key (municipio_codigo) references municipio
2024-07-10 14:48:28 - alter table if exists nota add constraint FK53ji4uehv7n3bmyetrvpk4wsy foreign key (permissionario_cnpj) references permissionario
2024-07-10 14:48:28 - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@76a08ace] for TypeConfiguration
2024-07-10 14:48:28 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-10 14:48:28 - Hibernate is in classpath; If applicable, HQL parser will be used.
2024-07-10 14:48:29 - No authentication manager set. Reauthentication of users when changing passwords will not be performed.
2024-07-10 14:48:29 - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@7e74e5db, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7b165afe, org.springframework.security.web.context.SecurityContextHolderFilter@5ac06e53, org.springframework.security.web.header.HeaderWriterFilter@7b6596, org.springframework.security.web.authentication.logout.LogoutFilter@9bb44ec, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@768e473e, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@4c3b2511, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1d6ddae8, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@24caa9c9, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7e3c9e80, org.springframework.security.web.access.ExceptionTranslationFilter@75e25cd, org.springframework.security.web.access.intercept.AuthorizationFilter@3e8f96aa]
2024-07-10 14:48:30 - LiveReload server is running on port 35729
2024-07-10 14:48:30 - Starting ProtocolHandler ["http-nio-5001"]
2024-07-10 14:48:30 - Tomcat started on port(s): 5001 (http) with context path ''
2024-07-10 14:48:30 - Started SpringThymeleafApplication in 5.764 seconds (process running for 6.535)
2024-07-10 14:50:11 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-07-10 14:50:11 - Initializing Servlet 'dispatcherServlet'
2024-07-10 14:50:11 - Completed initialization in 1 ms
2024-07-10 14:50:11 - select n1_0.id,n1_0.cnpj_emissor,n1_0.data_captura,n1_0.data_emissao,n1_0.faixa_horario,n1_0.local_destino,n1_0.municipio_codigo,n1_0.numero_da_nota,n1_0.permissionario_cnpj,n1_0.portaria,n1_0.tipo_veiculo from nota n1_0 order by n1_0.data_captura desc offset ? rows fetch first ? rows only
2024-07-10 14:50:11 - select m1_0.ibge,m1_0.codigo,m1_0.nome,m1_0.uf from municipio m1_0
2024-07-10 14:50:11 - select p1_0.cnpj,p1_0.nome from permissionario p1_0
2024-07-10 14:50:24 - select m1_0.ibge,m1_0.codigo,m1_0.nome,m1_0.uf from municipio m1_0 where m1_0.ibge=?
2024-07-10 14:50:24 - select p1_0.cnpj,p1_0.nome from permissionario p1_0 where p1_0.cnpj=?
2024-07-10 14:50:24 - ID da entidade: null
2024-07-10 14:50:24 - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.reflect.UndeclaredThrowableException] with root cause
com.fasterxml.jackson.databind.exc.InvalidDefinitionException: Java 8 date/time type `java.time.LocalDate` not supported by default: add Module "com.fasterxml.jackson.datatype:jackson-datatype-jsr310" to enable handling (through reference chain: com.flc.springthymeleaf.domain.Nota["dataCaptura"])
	at com.fasterxml.jackson.databind.exc.InvalidDefinitionException.from(InvalidDefinitionException.java:77)
	at com.fasterxml.jackson.databind.SerializerProvider.reportBadDefinition(SerializerProvider.java:1308)
	at com.fasterxml.jackson.databind.ser.impl.UnsupportedTypeSerializer.serialize(UnsupportedTypeSerializer.java:35)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider._serialize(DefaultSerializerProvider.java:479)
	at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.serializeValue(DefaultSerializerProvider.java:318)
	at com.fasterxml.jackson.databind.ObjectMapper._writeValueAndClose(ObjectMapper.java:4719)
	at com.fasterxml.jackson.databind.ObjectMapper.writeValueAsString(ObjectMapper.java:3964)
	at com.flc.springthymeleaf.aspect.AuditAspect.beforeSave(AuditAspect.java:41)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:637)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:620)
	at org.springframework.aop.aspectj.AspectJMethodBeforeAdvice.before(AspectJMethodBeforeAdvice.java:44)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:57)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at com.flc.springthymeleaf.service.NotaService$$SpringCGLIB$$0.save(<generated>)
	at com.flc.springthymeleaf.web.NotaController.salvarNota(NotaController.java:76)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:168)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2024-07-10 14:52:29 - Application shutdown requested.
2024-07-10 14:52:29 - Pausing ProtocolHandler ["http-nio-5001"]
2024-07-10 14:52:29 - Stopping service [Tomcat]
2024-07-10 14:52:29 - Destroying Spring FrameworkServlet 'dispatcherServlet'
2024-07-10 14:52:29 - Stopping ProtocolHandler ["http-nio-5001"]
2024-07-10 14:52:29 - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-10 14:52:29 - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@76a08ace] for TypeConfiguration
2024-07-10 14:52:29 - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@42e6442f] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@76a08ace]
2024-07-10 14:52:29 - HikariPool-1 - Shutdown initiated...
2024-07-10 14:52:29 - HikariPool-1 - Shutdown completed.
2024-07-10 15:00:45 - HV000001: Hibernate Validator 8.0.1.Final
2024-07-10 15:00:45 - Starting SpringThymeleafApplication using Java 17.0.7 with PID 6588 (C:\Users\fernando.correa\Documents\GitHub\workspace2023\app-devceasa01.2003\target\classes started by fernando.correa in C:\Users\fernando.correa\Documents\GitHub\workspace2023\app-devceasa01.2003)
2024-07-10 15:00:45 - No active profile set, falling back to 1 default profile: "default"
2024-07-10 15:00:45 - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-07-10 15:00:45 - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-07-10 15:00:46 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-10 15:00:46 - Finished Spring Data repository scanning in 77 ms. Found 15 JPA repository interfaces.
2024-07-10 15:00:46 - Tomcat initialized with port(s): 5001 (http)
2024-07-10 15:00:46 - Initializing ProtocolHandler ["http-nio-5001"]
2024-07-10 15:00:46 - Starting service [Tomcat]
2024-07-10 15:00:46 - Starting Servlet engine: [Apache Tomcat/10.1.15]
2024-07-10 15:00:47 - Initializing Spring embedded WebApplicationContext
2024-07-10 15:00:47 - Root WebApplicationContext: initialization completed in 1574 ms
2024-07-10 15:00:47 - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-10 15:00:47 - HHH000412: Hibernate ORM core version 6.2.13.Final
2024-07-10 15:00:47 - HHH000406: Using bytecode reflection optimizer
2024-07-10 15:00:47 - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@131dc77a
2024-07-10 15:00:47 - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@131dc77a
2024-07-10 15:00:47 - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@131dc77a
2024-07-10 15:00:47 - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@1fd88b78
2024-07-10 15:00:47 - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@1fd88b78
2024-07-10 15:00:47 - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@4fa8b9c3
2024-07-10 15:00:47 - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@4fa8b9c3
2024-07-10 15:00:47 - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@60050417
2024-07-10 15:00:47 - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@60050417
2024-07-10 15:00:47 - Adding type registration byte -> org.hibernate.type.BasicTypeReference@1dde397a
2024-07-10 15:00:47 - Adding type registration byte -> org.hibernate.type.BasicTypeReference@1dde397a
2024-07-10 15:00:47 - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@1dde397a
2024-07-10 15:00:47 - Adding type registration binary -> org.hibernate.type.BasicTypeReference@487bd76
2024-07-10 15:00:47 - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@487bd76
2024-07-10 15:00:47 - Adding type registration [B -> org.hibernate.type.BasicTypeReference@487bd76
2024-07-10 15:00:47 - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@68fe4175
2024-07-10 15:00:47 - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@68fe4175
2024-07-10 15:00:47 - Adding type registration image -> org.hibernate.type.BasicTypeReference@191eafea
2024-07-10 15:00:47 - Adding type registration blob -> org.hibernate.type.BasicTypeReference@48301a4
2024-07-10 15:00:47 - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@48301a4
2024-07-10 15:00:47 - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@3dd6604f
2024-07-10 15:00:47 - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@27b97b69
2024-07-10 15:00:47 - Adding type registration short -> org.hibernate.type.BasicTypeReference@4b34f18b
2024-07-10 15:00:47 - Adding type registration short -> org.hibernate.type.BasicTypeReference@4b34f18b
2024-07-10 15:00:47 - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@4b34f18b
2024-07-10 15:00:47 - Adding type registration integer -> org.hibernate.type.BasicTypeReference@57a65768
2024-07-10 15:00:47 - Adding type registration int -> org.hibernate.type.BasicTypeReference@57a65768
2024-07-10 15:00:47 - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@57a65768
2024-07-10 15:00:47 - Adding type registration long -> org.hibernate.type.BasicTypeReference@59fc91cb
2024-07-10 15:00:47 - Adding type registration long -> org.hibernate.type.BasicTypeReference@59fc91cb
2024-07-10 15:00:47 - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@59fc91cb
2024-07-10 15:00:47 - Adding type registration float -> org.hibernate.type.BasicTypeReference@35f2dbae
2024-07-10 15:00:47 - Adding type registration float -> org.hibernate.type.BasicTypeReference@35f2dbae
2024-07-10 15:00:47 - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@35f2dbae
2024-07-10 15:00:47 - Adding type registration double -> org.hibernate.type.BasicTypeReference@59a6dc32
2024-07-10 15:00:47 - Adding type registration double -> org.hibernate.type.BasicTypeReference@59a6dc32
2024-07-10 15:00:47 - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@59a6dc32
2024-07-10 15:00:47 - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@3cdedd79
2024-07-10 15:00:47 - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@3cdedd79
2024-07-10 15:00:47 - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@19161e0
2024-07-10 15:00:47 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@19161e0
2024-07-10 15:00:47 - Adding type registration character -> org.hibernate.type.BasicTypeReference@229de5d7
2024-07-10 15:00:47 - Adding type registration char -> org.hibernate.type.BasicTypeReference@229de5d7
2024-07-10 15:00:47 - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@229de5d7
2024-07-10 15:00:47 - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@4db5eafa
2024-07-10 15:00:47 - Adding type registration string -> org.hibernate.type.BasicTypeReference@74ac320
2024-07-10 15:00:47 - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@74ac320
2024-07-10 15:00:47 - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@d5e2c48
2024-07-10 15:00:47 - Adding type registration characters -> org.hibernate.type.BasicTypeReference@4020c369
2024-07-10 15:00:47 - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@4020c369
2024-07-10 15:00:47 - Adding type registration [C -> org.hibernate.type.BasicTypeReference@4020c369
2024-07-10 15:00:47 - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@222003ad
2024-07-10 15:00:47 - Adding type registration text -> org.hibernate.type.BasicTypeReference@73a2970a
2024-07-10 15:00:47 - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@f62d95a
2024-07-10 15:00:47 - Adding type registration clob -> org.hibernate.type.BasicTypeReference@499f6854
2024-07-10 15:00:47 - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@499f6854
2024-07-10 15:00:47 - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@6b8027a1
2024-07-10 15:00:47 - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@6b8027a1
2024-07-10 15:00:47 - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@c7de71c
2024-07-10 15:00:47 - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@15cc47c0
2024-07-10 15:00:47 - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@272350e5
2024-07-10 15:00:47 - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@4d74c68f
2024-07-10 15:00:47 - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@2ed29d3a
2024-07-10 15:00:47 - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@59572d67
2024-07-10 15:00:47 - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@64cefad0
2024-07-10 15:00:47 - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@64cefad0
2024-07-10 15:00:47 - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@fe50878
2024-07-10 15:00:47 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@fe50878
2024-07-10 15:00:47 - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@35647ff3
2024-07-10 15:00:47 - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@35647ff3
2024-07-10 15:00:47 - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@55b8402d
2024-07-10 15:00:47 - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@55b8402d
2024-07-10 15:00:47 - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@46b32830
2024-07-10 15:00:47 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@46b32830
2024-07-10 15:00:47 - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@61324e56
2024-07-10 15:00:47 - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@773f3e64
2024-07-10 15:00:47 - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@6011b186
2024-07-10 15:00:47 - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@6011b186
2024-07-10 15:00:47 - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@3f3ce71c
2024-07-10 15:00:47 - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4c8f4e53
2024-07-10 15:00:47 - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@424d95b8
2024-07-10 15:00:47 - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@2f3d81f6
2024-07-10 15:00:47 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@2f3d81f6
2024-07-10 15:00:47 - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@7761970a
2024-07-10 15:00:47 - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@41aaa263
2024-07-10 15:00:47 - Adding type registration date -> org.hibernate.type.BasicTypeReference@6f640fbb
2024-07-10 15:00:47 - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@6f640fbb
2024-07-10 15:00:47 - Adding type registration time -> org.hibernate.type.BasicTypeReference@2c151190
2024-07-10 15:00:47 - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@2c151190
2024-07-10 15:00:47 - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@57371adf
2024-07-10 15:00:47 - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@57371adf
2024-07-10 15:00:47 - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@57371adf
2024-07-10 15:00:47 - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@431a13e0
2024-07-10 15:00:47 - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@431a13e0
2024-07-10 15:00:47 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@431a13e0
2024-07-10 15:00:47 - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@cccc5ef
2024-07-10 15:00:47 - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@851cc77
2024-07-10 15:00:47 - Adding type registration instant -> org.hibernate.type.BasicTypeReference@675fce40
2024-07-10 15:00:47 - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@675fce40
2024-07-10 15:00:47 - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@74c94458
2024-07-10 15:00:47 - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@74c94458
2024-07-10 15:00:47 - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@74c94458
2024-07-10 15:00:47 - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@1e400493
2024-07-10 15:00:47 - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@18f45158
2024-07-10 15:00:47 - Adding type registration class -> org.hibernate.type.BasicTypeReference@1c0b1c8
2024-07-10 15:00:47 - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@1c0b1c8
2024-07-10 15:00:47 - Adding type registration currency -> org.hibernate.type.BasicTypeReference@3f95de2c
2024-07-10 15:00:47 - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@3f95de2c
2024-07-10 15:00:47 - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@3f95de2c
2024-07-10 15:00:47 - Adding type registration locale -> org.hibernate.type.BasicTypeReference@216f31d1
2024-07-10 15:00:47 - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@216f31d1
2024-07-10 15:00:47 - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@1babda35
2024-07-10 15:00:47 - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@1babda35
2024-07-10 15:00:47 - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@1fe17679
2024-07-10 15:00:47 - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@1fe17679
2024-07-10 15:00:47 - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@e94bf17
2024-07-10 15:00:47 - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@e94bf17
2024-07-10 15:00:47 - Adding type registration url -> org.hibernate.type.BasicTypeReference@562df6ad
2024-07-10 15:00:47 - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@562df6ad
2024-07-10 15:00:47 - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@1392e42f
2024-07-10 15:00:47 - Adding type registration object -> org.hibernate.type.JavaObjectType@bbf3a14
2024-07-10 15:00:47 - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@bbf3a14
2024-07-10 15:00:47 - Adding type registration null -> org.hibernate.type.NullType@723ce452
2024-07-10 15:00:47 - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@23f5ddd2
2024-07-10 15:00:47 - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@6fea30fd
2024-07-10 15:00:47 - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@5bbfd8f0
2024-07-10 15:00:47 - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@4e34a9a1
2024-07-10 15:00:47 - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@4322f6f8
2024-07-10 15:00:47 - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@7d714bb9
2024-07-10 15:00:47 - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@582c64bf
2024-07-10 15:00:47 - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@33beb7ba
2024-07-10 15:00:47 - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-10 15:00:47 - HikariPool-1 - Starting...
2024-07-10 15:00:47 - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@3d7b4daf
2024-07-10 15:00:47 - HikariPool-1 - Start completed.
2024-07-10 15:00:47 - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-07-10 15:00:47 - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@59b7094b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3c3f2a0b)
2024-07-10 15:00:47 - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2024-07-10 15:00:47 - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-07-10 15:00:47 - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@12d5b989
2024-07-10 15:00:47 - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@12d5b989
2024-07-10 15:00:47 - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@bbf3a14`
2024-07-10 15:00:47 - Adding type registration Duration -> basicType@1(java.time.Duration,2)
2024-07-10 15:00:47 - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
2024-07-10 15:00:47 - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-10 15:00:47 - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-10 15:00:47 - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-10 15:00:47 - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-10 15:00:47 - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-10 15:00:47 - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-10 15:00:47 - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-07-10 15:00:47 - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-07-10 15:00:47 - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-07-10 15:00:47 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@442a2a60] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4f780aab]
2024-07-10 15:00:48 - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-10 15:00:48 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@442a2a60] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@4c052e4c]
2024-07-10 15:00:48 - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@4c052e4c] for TypeConfiguration
2024-07-10 15:00:48 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-10 15:00:49 - Hibernate is in classpath; If applicable, HQL parser will be used.
2024-07-10 15:00:50 - No authentication manager set. Reauthentication of users when changing passwords will not be performed.
2024-07-10 15:00:50 - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@704daa7b, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3dc70e87, org.springframework.security.web.context.SecurityContextHolderFilter@66e8792e, org.springframework.security.web.header.HeaderWriterFilter@86a7def, org.springframework.security.web.authentication.logout.LogoutFilter@74f5b74a, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@2b3acdb4, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@70a9a9ba, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@29853c06, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1d4aef8d, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@318a48e9, org.springframework.security.web.access.ExceptionTranslationFilter@251a5d57, org.springframework.security.web.access.intercept.AuthorizationFilter@53ed1b1e]
2024-07-10 15:00:50 - LiveReload server is running on port 35729
2024-07-10 15:00:50 - Starting ProtocolHandler ["http-nio-5001"]
2024-07-10 15:00:50 - Tomcat started on port(s): 5001 (http) with context path ''
2024-07-10 15:00:50 - Started SpringThymeleafApplication in 5.741 seconds (process running for 6.472)
2024-07-10 15:01:00 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-07-10 15:01:00 - Initializing Servlet 'dispatcherServlet'
2024-07-10 15:01:00 - Completed initialization in 1 ms
2024-07-10 15:01:06 - select n1_0.id,n1_0.cnpj_emissor,n1_0.data_captura,n1_0.data_emissao,n1_0.faixa_horario,n1_0.local_destino,n1_0.municipio_codigo,n1_0.numero_da_nota,n1_0.permissionario_cnpj,n1_0.portaria,n1_0.tipo_veiculo from nota n1_0 order by n1_0.data_captura desc offset ? rows fetch first ? rows only
2024-07-10 15:01:06 - select m1_0.ibge,m1_0.codigo,m1_0.nome,m1_0.uf from municipio m1_0
2024-07-10 15:01:06 - select p1_0.cnpj,p1_0.nome from permissionario p1_0
2024-07-10 15:01:15 - select m1_0.ibge,m1_0.codigo,m1_0.nome,m1_0.uf from municipio m1_0 where m1_0.ibge=?
2024-07-10 15:01:15 - select p1_0.cnpj,p1_0.nome from permissionario p1_0 where p1_0.cnpj=?
2024-07-10 15:01:15 - insert into nota (cnpj_emissor,data_captura,data_emissao,faixa_horario,local_destino,municipio_codigo,numero_da_nota,permissionario_cnpj,portaria,tipo_veiculo) values (?,?,?,?,?,?,?,?,?,?)
2024-07-10 15:01:15 - SQL Error: 0, SQLState: 23505
2024-07-10 15:01:15 - ERROR: duplicate key value violates unique constraint "nota_pkey"
  Detalhe: Key (id)=(1) already exists.
2024-07-10 15:01:15 - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.DataIntegrityViolationException: could not execute statement [ERROR: duplicate key value violates unique constraint "nota_pkey"
  Detalhe: Key (id)=(1) already exists.] [insert into nota (cnpj_emissor,data_captura,data_emissao,faixa_horario,local_destino,municipio_codigo,numero_da_nota,permissionario_cnpj,portaria,tipo_veiculo) values (?,?,?,?,?,?,?,?,?,?)]; SQL [insert into nota (cnpj_emissor,data_captura,data_emissao,faixa_horario,local_destino,municipio_codigo,numero_da_nota,permissionario_cnpj,portaria,tipo_veiculo) values (?,?,?,?,?,?,?,?,?,?)]; constraint [nota_pkey]] with root cause
org.postgresql.util.PSQLException: ERROR: duplicate key value violates unique constraint "nota_pkey"
  Detalhe: Key (id)=(1) already exists.
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2713)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2401)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:368)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:498)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:415)
	at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:190)
	at org.postgresql.jdbc.PgPreparedStatement.executeUpdate(PgPreparedStatement.java:152)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:275)
	at org.hibernate.id.insert.GetGeneratedKeysDelegate.performInsert(GetGeneratedKeysDelegate.java:107)
	at org.hibernate.engine.jdbc.mutation.internal.MutationExecutorPostInsertSingleTable.execute(MutationExecutorPostInsertSingleTable.java:100)
	at org.hibernate.persister.entity.mutation.InsertCoordinator.doStaticInserts(InsertCoordinator.java:171)
	at org.hibernate.persister.entity.mutation.InsertCoordinator.coordinateInsert(InsertCoordinator.java:112)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:2780)
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:81)
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:676)
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:291)
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:272)
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:322)
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:363)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:277)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:180)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:140)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:175)
	at org.hibernate.event.internal.DefaultPersistEventListener.persist(DefaultPersistEventListener.java:93)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:77)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:54)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:755)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:739)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:360)
	at jdk.proxy4/jdk.proxy4.$Proxy134.persist(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:311)
	at jdk.proxy4/jdk.proxy4.$Proxy134.persist(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:618)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:288)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:136)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:120)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:516)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:628)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:168)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:391)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:164)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:244)
	at jdk.proxy4/jdk.proxy4.$Proxy148.save(Unknown Source)
	at com.flc.springthymeleaf.service.NotaService.save(NotaService.java:37)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:173)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at com.flc.springthymeleaf.service.NotaService$$SpringCGLIB$$0.save(<generated>)
	at com.flc.springthymeleaf.web.NotaController.salvarNota(NotaController.java:76)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:168)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2024-07-10 15:02:23 - Application shutdown requested.
2024-07-10 15:02:23 - Pausing ProtocolHandler ["http-nio-5001"]
2024-07-10 15:02:23 - Stopping service [Tomcat]
2024-07-10 15:02:23 - Destroying Spring FrameworkServlet 'dispatcherServlet'
2024-07-10 15:02:23 - Stopping ProtocolHandler ["http-nio-5001"]
2024-07-10 15:02:23 - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-10 15:02:23 - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@4c052e4c] for TypeConfiguration
2024-07-10 15:02:23 - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@32d89f9] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@4c052e4c]
2024-07-10 15:02:23 - HikariPool-1 - Shutdown initiated...
2024-07-10 15:02:23 - HikariPool-1 - Shutdown completed.
2024-07-10 15:02:28 - HV000001: Hibernate Validator 8.0.1.Final
2024-07-10 15:02:28 - Starting SpringThymeleafApplication using Java 17.0.7 with PID 14620 (C:\Users\fernando.correa\Documents\GitHub\workspace2023\app-devceasa01.2003\target\classes started by fernando.correa in C:\Users\fernando.correa\Documents\GitHub\workspace2023\app-devceasa01.2003)
2024-07-10 15:02:28 - No active profile set, falling back to 1 default profile: "default"
2024-07-10 15:02:28 - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-07-10 15:02:28 - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-07-10 15:02:29 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-10 15:02:29 - Finished Spring Data repository scanning in 80 ms. Found 15 JPA repository interfaces.
2024-07-10 15:02:30 - Tomcat initialized with port(s): 5001 (http)
2024-07-10 15:02:30 - Initializing ProtocolHandler ["http-nio-5001"]
2024-07-10 15:02:30 - Starting service [Tomcat]
2024-07-10 15:02:30 - Starting Servlet engine: [Apache Tomcat/10.1.15]
2024-07-10 15:02:30 - Initializing Spring embedded WebApplicationContext
2024-07-10 15:02:30 - Root WebApplicationContext: initialization completed in 1514 ms
2024-07-10 15:02:30 - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-10 15:02:30 - HHH000412: Hibernate ORM core version 6.2.13.Final
2024-07-10 15:02:30 - HHH000406: Using bytecode reflection optimizer
2024-07-10 15:02:30 - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@25b6fe98
2024-07-10 15:02:30 - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@25b6fe98
2024-07-10 15:02:30 - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@25b6fe98
2024-07-10 15:02:30 - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@45a80851
2024-07-10 15:02:30 - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@45a80851
2024-07-10 15:02:30 - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@4adb4f26
2024-07-10 15:02:30 - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@4adb4f26
2024-07-10 15:02:30 - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@65367e05
2024-07-10 15:02:30 - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@65367e05
2024-07-10 15:02:30 - Adding type registration byte -> org.hibernate.type.BasicTypeReference@77e60e05
2024-07-10 15:02:30 - Adding type registration byte -> org.hibernate.type.BasicTypeReference@77e60e05
2024-07-10 15:02:30 - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@77e60e05
2024-07-10 15:02:30 - Adding type registration binary -> org.hibernate.type.BasicTypeReference@342b2524
2024-07-10 15:02:30 - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@342b2524
2024-07-10 15:02:30 - Adding type registration [B -> org.hibernate.type.BasicTypeReference@342b2524
2024-07-10 15:02:30 - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@737a8382
2024-07-10 15:02:30 - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@737a8382
2024-07-10 15:02:30 - Adding type registration image -> org.hibernate.type.BasicTypeReference@4a1b6fff
2024-07-10 15:02:30 - Adding type registration blob -> org.hibernate.type.BasicTypeReference@7556bdb5
2024-07-10 15:02:30 - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@7556bdb5
2024-07-10 15:02:30 - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@18b9b43e
2024-07-10 15:02:30 - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@3f785238
2024-07-10 15:02:30 - Adding type registration short -> org.hibernate.type.BasicTypeReference@2e0da6bf
2024-07-10 15:02:30 - Adding type registration short -> org.hibernate.type.BasicTypeReference@2e0da6bf
2024-07-10 15:02:30 - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@2e0da6bf
2024-07-10 15:02:30 - Adding type registration integer -> org.hibernate.type.BasicTypeReference@6e760dde
2024-07-10 15:02:30 - Adding type registration int -> org.hibernate.type.BasicTypeReference@6e760dde
2024-07-10 15:02:30 - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@6e760dde
2024-07-10 15:02:30 - Adding type registration long -> org.hibernate.type.BasicTypeReference@3b3b4c6a
2024-07-10 15:02:30 - Adding type registration long -> org.hibernate.type.BasicTypeReference@3b3b4c6a
2024-07-10 15:02:30 - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@3b3b4c6a
2024-07-10 15:02:30 - Adding type registration float -> org.hibernate.type.BasicTypeReference@462f20a7
2024-07-10 15:02:30 - Adding type registration float -> org.hibernate.type.BasicTypeReference@462f20a7
2024-07-10 15:02:30 - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@462f20a7
2024-07-10 15:02:30 - Adding type registration double -> org.hibernate.type.BasicTypeReference@5544e83
2024-07-10 15:02:30 - Adding type registration double -> org.hibernate.type.BasicTypeReference@5544e83
2024-07-10 15:02:30 - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@5544e83
2024-07-10 15:02:30 - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@5b12ab0a
2024-07-10 15:02:30 - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@5b12ab0a
2024-07-10 15:02:30 - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@3a2be41e
2024-07-10 15:02:30 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@3a2be41e
2024-07-10 15:02:30 - Adding type registration character -> org.hibernate.type.BasicTypeReference@53ed1e4
2024-07-10 15:02:30 - Adding type registration char -> org.hibernate.type.BasicTypeReference@53ed1e4
2024-07-10 15:02:30 - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@53ed1e4
2024-07-10 15:02:30 - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@22b9a796
2024-07-10 15:02:30 - Adding type registration string -> org.hibernate.type.BasicTypeReference@6c3d0230
2024-07-10 15:02:30 - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@6c3d0230
2024-07-10 15:02:30 - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@95310bd
2024-07-10 15:02:30 - Adding type registration characters -> org.hibernate.type.BasicTypeReference@7a115182
2024-07-10 15:02:30 - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@7a115182
2024-07-10 15:02:30 - Adding type registration [C -> org.hibernate.type.BasicTypeReference@7a115182
2024-07-10 15:02:30 - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@15fbdc41
2024-07-10 15:02:30 - Adding type registration text -> org.hibernate.type.BasicTypeReference@1153604c
2024-07-10 15:02:30 - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@144c23
2024-07-10 15:02:30 - Adding type registration clob -> org.hibernate.type.BasicTypeReference@70f980e2
2024-07-10 15:02:30 - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@70f980e2
2024-07-10 15:02:30 - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@3bab5368
2024-07-10 15:02:30 - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@3bab5368
2024-07-10 15:02:30 - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@31701551
2024-07-10 15:02:30 - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@13273208
2024-07-10 15:02:30 - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@2fe55e1e
2024-07-10 15:02:30 - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@4e347899
2024-07-10 15:02:30 - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@7f5f2693
2024-07-10 15:02:30 - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@55c2ec02
2024-07-10 15:02:30 - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@50d25d0a
2024-07-10 15:02:30 - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@50d25d0a
2024-07-10 15:02:30 - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@3d4f1739
2024-07-10 15:02:30 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@3d4f1739
2024-07-10 15:02:30 - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@3ba2c5bd
2024-07-10 15:02:30 - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@3ba2c5bd
2024-07-10 15:02:30 - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@79428c37
2024-07-10 15:02:30 - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@79428c37
2024-07-10 15:02:30 - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@3bbaa418
2024-07-10 15:02:30 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@3bbaa418
2024-07-10 15:02:30 - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@7e098a89
2024-07-10 15:02:30 - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@532b27d8
2024-07-10 15:02:30 - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@3ee52abe
2024-07-10 15:02:30 - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@3ee52abe
2024-07-10 15:02:30 - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@5091d31e
2024-07-10 15:02:30 - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@62fe5647
2024-07-10 15:02:30 - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@6861b827
2024-07-10 15:02:30 - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@7fc6df4f
2024-07-10 15:02:30 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@7fc6df4f
2024-07-10 15:02:30 - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2191fa8a
2024-07-10 15:02:30 - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@31cddc91
2024-07-10 15:02:30 - Adding type registration date -> org.hibernate.type.BasicTypeReference@5408fa0f
2024-07-10 15:02:30 - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@5408fa0f
2024-07-10 15:02:30 - Adding type registration time -> org.hibernate.type.BasicTypeReference@1d7d6b66
2024-07-10 15:02:30 - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@1d7d6b66
2024-07-10 15:02:30 - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@339687e9
2024-07-10 15:02:30 - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@339687e9
2024-07-10 15:02:30 - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@339687e9
2024-07-10 15:02:30 - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@6ce0ec5e
2024-07-10 15:02:30 - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@6ce0ec5e
2024-07-10 15:02:30 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@6ce0ec5e
2024-07-10 15:02:30 - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@7f2bab4f
2024-07-10 15:02:30 - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@9fbc997
2024-07-10 15:02:30 - Adding type registration instant -> org.hibernate.type.BasicTypeReference@e55ae8e
2024-07-10 15:02:30 - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@e55ae8e
2024-07-10 15:02:30 - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@653c3106
2024-07-10 15:02:30 - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@653c3106
2024-07-10 15:02:30 - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@653c3106
2024-07-10 15:02:30 - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@47ef8f3d
2024-07-10 15:02:30 - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@108f4126
2024-07-10 15:02:30 - Adding type registration class -> org.hibernate.type.BasicTypeReference@330dac67
2024-07-10 15:02:30 - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@330dac67
2024-07-10 15:02:30 - Adding type registration currency -> org.hibernate.type.BasicTypeReference@37bd1f01
2024-07-10 15:02:30 - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@37bd1f01
2024-07-10 15:02:30 - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@37bd1f01
2024-07-10 15:02:30 - Adding type registration locale -> org.hibernate.type.BasicTypeReference@c10e8ac
2024-07-10 15:02:30 - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@c10e8ac
2024-07-10 15:02:30 - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@667c1e79
2024-07-10 15:02:30 - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@667c1e79
2024-07-10 15:02:30 - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@384cf845
2024-07-10 15:02:30 - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@384cf845
2024-07-10 15:02:30 - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@67d6bd5a
2024-07-10 15:02:30 - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@67d6bd5a
2024-07-10 15:02:30 - Adding type registration url -> org.hibernate.type.BasicTypeReference@6c086c84
2024-07-10 15:02:30 - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@6c086c84
2024-07-10 15:02:30 - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@6a8128aa
2024-07-10 15:02:30 - Adding type registration object -> org.hibernate.type.JavaObjectType@141bdfb1
2024-07-10 15:02:30 - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@141bdfb1
2024-07-10 15:02:30 - Adding type registration null -> org.hibernate.type.NullType@37c57159
2024-07-10 15:02:30 - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@9b8a8fb
2024-07-10 15:02:30 - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@43d847b7
2024-07-10 15:02:30 - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@6feabeeb
2024-07-10 15:02:30 - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@73b945f6
2024-07-10 15:02:30 - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@3f8ac40a
2024-07-10 15:02:30 - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@3e6ec9b3
2024-07-10 15:02:30 - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@4492573
2024-07-10 15:02:30 - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@3d6656f9
2024-07-10 15:02:30 - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-10 15:02:30 - HikariPool-1 - Starting...
2024-07-10 15:02:30 - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@460ee2dd
2024-07-10 15:02:30 - HikariPool-1 - Start completed.
2024-07-10 15:02:30 - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-07-10 15:02:30 - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@c73e195) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1f23510e)
2024-07-10 15:02:30 - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2024-07-10 15:02:30 - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-07-10 15:02:30 - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@6c3fc7fd
2024-07-10 15:02:30 - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@6c3fc7fd
2024-07-10 15:02:30 - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@141bdfb1`
2024-07-10 15:02:30 - Adding type registration Duration -> basicType@1(java.time.Duration,2)
2024-07-10 15:02:30 - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
2024-07-10 15:02:30 - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-10 15:02:30 - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-10 15:02:30 - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-10 15:02:30 - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-10 15:02:30 - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-10 15:02:30 - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-10 15:02:30 - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-07-10 15:02:30 - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-07-10 15:02:30 - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-07-10 15:02:30 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@17c5fb1] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@5bc292a3]
2024-07-10 15:02:31 - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-10 15:02:31 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@17c5fb1] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@175dff47]
2024-07-10 15:02:31 - create table nota (id serial not null, cnpj_emissor varchar(255), data_captura DATE, data_emissao DATE, faixa_horario varchar(255) check (faixa_horario in ('HORARIO_01','HORARIO_02','HORARIO_03')), local_destino varchar(255) check (local_destino in ('GP4','GP2','MLC')), numero_da_nota varchar(255), portaria varchar(255) check (portaria in ('PORTARIA_PRINCIPAL','PORTARIA_MERCADO_FLORES')), tipo_veiculo varchar(255) check (tipo_veiculo in ('UP','CT','LV')), municipio_codigo varchar(255), permissionario_cnpj varchar(14), primary key (id))
2024-07-10 15:02:32 - alter table if exists nota add constraint FKpju8i10mvr180nlyy2qq2s1h1 foreign key (municipio_codigo) references municipio
2024-07-10 15:02:32 - alter table if exists nota add constraint FK53ji4uehv7n3bmyetrvpk4wsy foreign key (permissionario_cnpj) references permissionario
2024-07-10 15:02:32 - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@175dff47] for TypeConfiguration
2024-07-10 15:02:32 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-10 15:02:32 - Hibernate is in classpath; If applicable, HQL parser will be used.
2024-07-10 15:02:33 - No authentication manager set. Reauthentication of users when changing passwords will not be performed.
2024-07-10 15:02:33 - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@73562e42, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@faeb3d5, org.springframework.security.web.context.SecurityContextHolderFilter@316329fb, org.springframework.security.web.header.HeaderWriterFilter@64f596d5, org.springframework.security.web.authentication.logout.LogoutFilter@670fe2b7, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@153f1486, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@5e142831, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2486d0b3, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@506a0930, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@69874feb, org.springframework.security.web.access.ExceptionTranslationFilter@4c1df116, org.springframework.security.web.access.intercept.AuthorizationFilter@3f9b697a]
2024-07-10 15:02:33 - LiveReload server is running on port 35729
2024-07-10 15:02:33 - Starting ProtocolHandler ["http-nio-5001"]
2024-07-10 15:02:33 - Tomcat started on port(s): 5001 (http) with context path ''
2024-07-10 15:02:33 - Started SpringThymeleafApplication in 5.75 seconds (process running for 6.459)
2024-07-10 15:02:34 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-07-10 15:02:34 - Initializing Servlet 'dispatcherServlet'
2024-07-10 15:02:34 - Completed initialization in 1 ms
2024-07-10 15:02:34 - select n1_0.id,n1_0.cnpj_emissor,n1_0.data_captura,n1_0.data_emissao,n1_0.faixa_horario,n1_0.local_destino,n1_0.municipio_codigo,n1_0.numero_da_nota,n1_0.permissionario_cnpj,n1_0.portaria,n1_0.tipo_veiculo from nota n1_0 order by n1_0.data_captura desc offset ? rows fetch first ? rows only
2024-07-10 15:02:34 - select m1_0.ibge,m1_0.codigo,m1_0.nome,m1_0.uf from municipio m1_0
2024-07-10 15:02:34 - select p1_0.cnpj,p1_0.nome from permissionario p1_0
2024-07-10 15:02:50 - select m1_0.ibge,m1_0.codigo,m1_0.nome,m1_0.uf from municipio m1_0 where m1_0.ibge=?
2024-07-10 15:02:50 - select p1_0.cnpj,p1_0.nome from permissionario p1_0 where p1_0.cnpj=?
2024-07-10 15:02:50 - insert into nota (cnpj_emissor,data_captura,data_emissao,faixa_horario,local_destino,municipio_codigo,numero_da_nota,permissionario_cnpj,portaria,tipo_veiculo) values (?,?,?,?,?,?,?,?,?,?)
2024-07-10 15:02:50 - select n1_0.id,n1_0.cnpj_emissor,n1_0.data_captura,n1_0.data_emissao,n1_0.faixa_horario,n1_0.local_destino,n1_0.municipio_codigo,n1_0.numero_da_nota,n1_0.permissionario_cnpj,n1_0.portaria,n1_0.tipo_veiculo from nota n1_0 order by n1_0.data_captura desc offset ? rows fetch first ? rows only
2024-07-10 15:02:50 - select m1_0.ibge,m1_0.codigo,m1_0.nome,m1_0.uf from municipio m1_0
2024-07-10 15:02:50 - select p1_0.cnpj,p1_0.nome from permissionario p1_0
2024-07-10 15:12:20 - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2024-07-10 15:12:20 - Pausing ProtocolHandler ["http-nio-5001"]
2024-07-10 15:12:20 - Stopping service [Tomcat]
2024-07-10 15:12:20 - Destroying Spring FrameworkServlet 'dispatcherServlet'
2024-07-10 15:12:20 - Stopping ProtocolHandler ["http-nio-5001"]
2024-07-10 15:12:20 - Destroying ProtocolHandler ["http-nio-5001"]
2024-07-10 15:12:20 - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-10 15:12:20 - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@175dff47] for TypeConfiguration
2024-07-10 15:12:20 - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@6cbfc590] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@175dff47]
2024-07-10 15:12:20 - HikariPool-1 - Shutdown initiated...
2024-07-10 15:12:20 - HikariPool-1 - Shutdown completed.
2024-07-10 15:12:20 - Starting SpringThymeleafApplication using Java 17.0.7 with PID 14620 (C:\Users\fernando.correa\Documents\GitHub\workspace2023\app-devceasa01.2003\target\classes started by fernando.correa in C:\Users\fernando.correa\Documents\GitHub\workspace2023\app-devceasa01.2003)
2024-07-10 15:12:20 - No active profile set, falling back to 1 default profile: "default"
2024-07-10 15:12:20 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-10 15:12:20 - Finished Spring Data repository scanning in 39 ms. Found 15 JPA repository interfaces.
2024-07-10 15:12:20 - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'projectingArgumentResolverBeanPostProcessor' defined in class path resource [org/springframework/data/web/config/ProjectingArgumentResolverRegistrar.class]: BeanPostProcessor before instantiation of bean failed
2024-07-10 15:12:20 - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2024-07-10 15:12:20 - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'projectingArgumentResolverBeanPostProcessor' defined in class path resource [org/springframework/data/web/config/ProjectingArgumentResolverRegistrar.class]: BeanPostProcessor before instantiation of bean failed
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.registerBeanPostProcessors(PostProcessorRegistrationDelegate.java:273)
	at org.springframework.context.support.AbstractApplicationContext.registerBeanPostProcessors(AbstractApplicationContext.java:796)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:600)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:738)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:440)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at com.flc.springthymeleaf.SpringThymeleafApplication.main(SpringThymeleafApplication.java:10)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration': BeanPostProcessor before instantiation of bean failed
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:412)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1332)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1162)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:560)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.aop.framework.autoproxy.BeanFactoryAdvisorRetrievalHelper.findAdvisorBeans(BeanFactoryAdvisorRetrievalHelper.java:91)
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.findCandidateAdvisors(AbstractAdvisorAutoProxyCreator.java:111)
	at org.springframework.aop.aspectj.annotation.AnnotationAwareAspectJAutoProxyCreator.findCandidateAdvisors(AnnotationAwareAspectJAutoProxyCreator.java:92)
	at org.springframework.aop.aspectj.autoproxy.AspectJAwareAdvisorAutoProxyCreator.shouldSkip(AspectJAwareAdvisorAutoProxyCreator.java:101)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.postProcessBeforeInstantiation(AbstractAutoProxyCreator.java:280)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInstantiation(AbstractAutowireCapableBeanFactory.java:1127)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.resolveBeforeInstantiation(AbstractAutowireCapableBeanFactory.java:1102)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:509)
	... 19 common frames omitted
Caused by: java.lang.NoClassDefFoundError: Nota
	at java.base/java.lang.Class.getDeclaredMethods0(Native Method)
	at java.base/java.lang.Class.privateGetDeclaredMethods(Class.java:3402)
	at java.base/java.lang.Class.getDeclaredMethods(Class.java:2504)
	at org.aspectj.internal.lang.reflect.AjTypeImpl.getDeclarePrecedence(AjTypeImpl.java:1005)
	at org.springframework.aop.aspectj.annotation.AspectMetadata.<init>(AspectMetadata.java:97)
	at org.springframework.aop.aspectj.annotation.BeanFactoryAspectJAdvisorsBuilder.buildAspectJAdvisors(BeanFactoryAspectJAdvisorsBuilder.java:106)
	at org.springframework.aop.aspectj.annotation.AnnotationAwareAspectJAutoProxyCreator.findCandidateAdvisors(AnnotationAwareAspectJAutoProxyCreator.java:95)
	at org.springframework.aop.aspectj.autoproxy.AspectJAwareAdvisorAutoProxyCreator.shouldSkip(AspectJAwareAdvisorAutoProxyCreator.java:101)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.postProcessBeforeInstantiation(AbstractAutoProxyCreator.java:280)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInstantiation(AbstractAutowireCapableBeanFactory.java:1127)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.resolveBeforeInstantiation(AbstractAutowireCapableBeanFactory.java:1102)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:509)
	... 40 common frames omitted
Caused by: java.lang.ClassNotFoundException: Nota
	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641)
	at java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:520)
	at java.base/java.lang.Class.forName0(Native Method)
	at java.base/java.lang.Class.forName(Class.java:467)
	at org.springframework.boot.devtools.restart.classloader.RestartClassLoader.loadClass(RestartClassLoader.java:121)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:520)
	... 52 common frames omitted
2024-07-10 15:12:44 - HV000001: Hibernate Validator 8.0.1.Final
2024-07-10 15:12:44 - Starting SpringThymeleafApplication using Java 17.0.7 with PID 12984 (C:\Users\fernando.correa\Documents\GitHub\workspace2023\app-devceasa01.2003\target\classes started by fernando.correa in C:\Users\fernando.correa\Documents\GitHub\workspace2023\app-devceasa01.2003)
2024-07-10 15:12:44 - No active profile set, falling back to 1 default profile: "default"
2024-07-10 15:12:44 - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-07-10 15:12:44 - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-07-10 15:12:45 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-10 15:12:45 - Finished Spring Data repository scanning in 76 ms. Found 15 JPA repository interfaces.
2024-07-10 15:12:46 - Tomcat initialized with port(s): 5001 (http)
2024-07-10 15:12:46 - Initializing ProtocolHandler ["http-nio-5001"]
2024-07-10 15:12:46 - Starting service [Tomcat]
2024-07-10 15:12:46 - Starting Servlet engine: [Apache Tomcat/10.1.15]
2024-07-10 15:12:46 - Initializing Spring embedded WebApplicationContext
2024-07-10 15:12:46 - Root WebApplicationContext: initialization completed in 1451 ms
2024-07-10 15:12:46 - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-10 15:12:46 - HHH000412: Hibernate ORM core version 6.2.13.Final
2024-07-10 15:12:46 - HHH000406: Using bytecode reflection optimizer
2024-07-10 15:12:46 - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@2995e27c
2024-07-10 15:12:46 - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@2995e27c
2024-07-10 15:12:46 - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@2995e27c
2024-07-10 15:12:46 - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@478173ad
2024-07-10 15:12:46 - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@478173ad
2024-07-10 15:12:46 - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@61584c9
2024-07-10 15:12:46 - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@61584c9
2024-07-10 15:12:46 - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@7f3b7783
2024-07-10 15:12:46 - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@7f3b7783
2024-07-10 15:12:46 - Adding type registration byte -> org.hibernate.type.BasicTypeReference@79bbec1a
2024-07-10 15:12:46 - Adding type registration byte -> org.hibernate.type.BasicTypeReference@79bbec1a
2024-07-10 15:12:46 - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@79bbec1a
2024-07-10 15:12:46 - Adding type registration binary -> org.hibernate.type.BasicTypeReference@3bd1e631
2024-07-10 15:12:46 - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@3bd1e631
2024-07-10 15:12:46 - Adding type registration [B -> org.hibernate.type.BasicTypeReference@3bd1e631
2024-07-10 15:12:46 - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@1d2c066d
2024-07-10 15:12:46 - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@1d2c066d
2024-07-10 15:12:46 - Adding type registration image -> org.hibernate.type.BasicTypeReference@7789e67f
2024-07-10 15:12:46 - Adding type registration blob -> org.hibernate.type.BasicTypeReference@781d6628
2024-07-10 15:12:46 - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@781d6628
2024-07-10 15:12:46 - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@4c49f774
2024-07-10 15:12:46 - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@312b8ffe
2024-07-10 15:12:46 - Adding type registration short -> org.hibernate.type.BasicTypeReference@9a92dba
2024-07-10 15:12:46 - Adding type registration short -> org.hibernate.type.BasicTypeReference@9a92dba
2024-07-10 15:12:46 - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@9a92dba
2024-07-10 15:12:46 - Adding type registration integer -> org.hibernate.type.BasicTypeReference@1a962681
2024-07-10 15:12:46 - Adding type registration int -> org.hibernate.type.BasicTypeReference@1a962681
2024-07-10 15:12:46 - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@1a962681
2024-07-10 15:12:46 - Adding type registration long -> org.hibernate.type.BasicTypeReference@196780f0
2024-07-10 15:12:46 - Adding type registration long -> org.hibernate.type.BasicTypeReference@196780f0
2024-07-10 15:12:46 - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@196780f0
2024-07-10 15:12:46 - Adding type registration float -> org.hibernate.type.BasicTypeReference@745ea85d
2024-07-10 15:12:46 - Adding type registration float -> org.hibernate.type.BasicTypeReference@745ea85d
2024-07-10 15:12:46 - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@745ea85d
2024-07-10 15:12:46 - Adding type registration double -> org.hibernate.type.BasicTypeReference@34da9f91
2024-07-10 15:12:46 - Adding type registration double -> org.hibernate.type.BasicTypeReference@34da9f91
2024-07-10 15:12:46 - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@34da9f91
2024-07-10 15:12:46 - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@1fd315a5
2024-07-10 15:12:46 - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@1fd315a5
2024-07-10 15:12:46 - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@3a9666af
2024-07-10 15:12:46 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@3a9666af
2024-07-10 15:12:46 - Adding type registration character -> org.hibernate.type.BasicTypeReference@3b0b2de0
2024-07-10 15:12:46 - Adding type registration char -> org.hibernate.type.BasicTypeReference@3b0b2de0
2024-07-10 15:12:46 - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@3b0b2de0
2024-07-10 15:12:46 - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@5bcd1b07
2024-07-10 15:12:46 - Adding type registration string -> org.hibernate.type.BasicTypeReference@5cb443e6
2024-07-10 15:12:46 - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@5cb443e6
2024-07-10 15:12:46 - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@551ee5c1
2024-07-10 15:12:46 - Adding type registration characters -> org.hibernate.type.BasicTypeReference@3718b6af
2024-07-10 15:12:46 - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@3718b6af
2024-07-10 15:12:46 - Adding type registration [C -> org.hibernate.type.BasicTypeReference@3718b6af
2024-07-10 15:12:46 - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@4be9668
2024-07-10 15:12:46 - Adding type registration text -> org.hibernate.type.BasicTypeReference@7a6b4e6a
2024-07-10 15:12:46 - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@58799c0b
2024-07-10 15:12:46 - Adding type registration clob -> org.hibernate.type.BasicTypeReference@2aa6f465
2024-07-10 15:12:46 - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@2aa6f465
2024-07-10 15:12:46 - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@5a5b2a8f
2024-07-10 15:12:46 - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@5a5b2a8f
2024-07-10 15:12:46 - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@7a6337b0
2024-07-10 15:12:46 - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@6e6e7533
2024-07-10 15:12:46 - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@7376a147
2024-07-10 15:12:46 - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@707af2f4
2024-07-10 15:12:46 - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@134795fc
2024-07-10 15:12:46 - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@e9dad4a
2024-07-10 15:12:46 - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@48275947
2024-07-10 15:12:46 - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@48275947
2024-07-10 15:12:46 - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@6f6defe5
2024-07-10 15:12:46 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@6f6defe5
2024-07-10 15:12:46 - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@402a6f81
2024-07-10 15:12:46 - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@402a6f81
2024-07-10 15:12:46 - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@23be6d33
2024-07-10 15:12:46 - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@23be6d33
2024-07-10 15:12:46 - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@5121e562
2024-07-10 15:12:46 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@5121e562
2024-07-10 15:12:46 - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@51b33a64
2024-07-10 15:12:46 - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@42f611b4
2024-07-10 15:12:46 - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@12f12b2c
2024-07-10 15:12:46 - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@12f12b2c
2024-07-10 15:12:46 - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@4ca5d6e5
2024-07-10 15:12:46 - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@48da50f
2024-07-10 15:12:46 - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@76846f9b
2024-07-10 15:12:46 - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@6db7822c
2024-07-10 15:12:46 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@6db7822c
2024-07-10 15:12:46 - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@fc77381
2024-07-10 15:12:46 - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@660b1aab
2024-07-10 15:12:46 - Adding type registration date -> org.hibernate.type.BasicTypeReference@33a64946
2024-07-10 15:12:46 - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@33a64946
2024-07-10 15:12:46 - Adding type registration time -> org.hibernate.type.BasicTypeReference@62511bfc
2024-07-10 15:12:46 - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@62511bfc
2024-07-10 15:12:46 - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@56be274c
2024-07-10 15:12:46 - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@56be274c
2024-07-10 15:12:46 - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@56be274c
2024-07-10 15:12:46 - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@68deb172
2024-07-10 15:12:46 - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@68deb172
2024-07-10 15:12:46 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@68deb172
2024-07-10 15:12:46 - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@69b33956
2024-07-10 15:12:46 - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@3574167
2024-07-10 15:12:46 - Adding type registration instant -> org.hibernate.type.BasicTypeReference@24748206
2024-07-10 15:12:46 - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@24748206
2024-07-10 15:12:46 - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@393ce2db
2024-07-10 15:12:46 - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@393ce2db
2024-07-10 15:12:46 - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@393ce2db
2024-07-10 15:12:46 - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@49b50523
2024-07-10 15:12:46 - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@7050290b
2024-07-10 15:12:46 - Adding type registration class -> org.hibernate.type.BasicTypeReference@7034e1b5
2024-07-10 15:12:46 - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@7034e1b5
2024-07-10 15:12:46 - Adding type registration currency -> org.hibernate.type.BasicTypeReference@2e40ef52
2024-07-10 15:12:46 - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@2e40ef52
2024-07-10 15:12:46 - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@2e40ef52
2024-07-10 15:12:46 - Adding type registration locale -> org.hibernate.type.BasicTypeReference@4f3d7ba4
2024-07-10 15:12:46 - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@4f3d7ba4
2024-07-10 15:12:46 - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@3e541b39
2024-07-10 15:12:46 - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@3e541b39
2024-07-10 15:12:46 - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@693a6c0f
2024-07-10 15:12:46 - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@693a6c0f
2024-07-10 15:12:46 - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@40a92405
2024-07-10 15:12:46 - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@40a92405
2024-07-10 15:12:46 - Adding type registration url -> org.hibernate.type.BasicTypeReference@64ed87ef
2024-07-10 15:12:46 - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@64ed87ef
2024-07-10 15:12:46 - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@7afed598
2024-07-10 15:12:46 - Adding type registration object -> org.hibernate.type.JavaObjectType@b9f317d
2024-07-10 15:12:46 - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@b9f317d
2024-07-10 15:12:46 - Adding type registration null -> org.hibernate.type.NullType@3a8ebf7c
2024-07-10 15:12:46 - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@3dc7f6ff
2024-07-10 15:12:46 - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@e945b5e
2024-07-10 15:12:46 - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@1ba2e732
2024-07-10 15:12:46 - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@5498de65
2024-07-10 15:12:46 - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@56eaba07
2024-07-10 15:12:46 - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@7a88452f
2024-07-10 15:12:46 - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@769fb63b
2024-07-10 15:12:46 - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@64e6257b
2024-07-10 15:12:46 - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-10 15:12:46 - HikariPool-1 - Starting...
2024-07-10 15:12:46 - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@703bc4e7
2024-07-10 15:12:46 - HikariPool-1 - Start completed.
2024-07-10 15:12:46 - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-07-10 15:12:46 - addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@49dcccac) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2e85fdf)
2024-07-10 15:12:46 - addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2024-07-10 15:12:46 - addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-07-10 15:12:46 - Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@7682ee24
2024-07-10 15:12:46 - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@7682ee24
2024-07-10 15:12:46 - Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@b9f317d`
2024-07-10 15:12:46 - Adding type registration Duration -> basicType@1(java.time.Duration,2)
2024-07-10 15:12:46 - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
2024-07-10 15:12:46 - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-10 15:12:46 - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-10 15:12:46 - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-10 15:12:46 - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-10 15:12:46 - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-10 15:12:46 - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-10 15:12:46 - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-07-10 15:12:46 - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-07-10 15:12:46 - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-07-10 15:12:46 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4b38df72] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@7b2a2a04]
2024-07-10 15:12:47 - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-10 15:12:47 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4b38df72] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@21fe629]
2024-07-10 15:12:48 - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@21fe629] for TypeConfiguration
2024-07-10 15:12:48 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-10 15:12:48 - Hibernate is in classpath; If applicable, HQL parser will be used.
2024-07-10 15:12:49 - No authentication manager set. Reauthentication of users when changing passwords will not be performed.
2024-07-10 15:12:49 - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@280c47ee, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@47d61d3c, org.springframework.security.web.context.SecurityContextHolderFilter@6ed11d9f, org.springframework.security.web.header.HeaderWriterFilter@6f2d1705, org.springframework.security.web.authentication.logout.LogoutFilter@3195834a, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@6b67916, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@64416af, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7415a36d, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@74877026, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@16e2f784, org.springframework.security.web.access.ExceptionTranslationFilter@6f874164, org.springframework.security.web.access.intercept.AuthorizationFilter@7e27b07d]
2024-07-10 15:12:49 - LiveReload server is running on port 35729
2024-07-10 15:12:49 - Starting ProtocolHandler ["http-nio-5001"]
2024-07-10 15:12:49 - Tomcat started on port(s): 5001 (http) with context path ''
2024-07-10 15:12:49 - Started SpringThymeleafApplication in 5.71 seconds (process running for 6.405)
2024-07-10 15:12:53 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-07-10 15:12:53 - Initializing Servlet 'dispatcherServlet'
2024-07-10 15:12:53 - Completed initialization in 0 ms
2024-07-10 15:12:53 - select n1_0.id,n1_0.cnpj_emissor,n1_0.data_captura,n1_0.data_emissao,n1_0.faixa_horario,n1_0.local_destino,n1_0.municipio_codigo,n1_0.numero_da_nota,n1_0.permissionario_cnpj,n1_0.portaria,n1_0.tipo_veiculo from nota n1_0 order by n1_0.data_captura desc offset ? rows fetch first ? rows only
2024-07-10 15:12:53 - select m1_0.ibge,m1_0.codigo,m1_0.nome,m1_0.uf from municipio m1_0
2024-07-10 15:12:53 - select p1_0.cnpj,p1_0.nome from permissionario p1_0
2024-07-10 15:13:06 - select m1_0.ibge,m1_0.codigo,m1_0.nome,m1_0.uf from municipio m1_0 where m1_0.ibge=?
2024-07-10 15:13:06 - select p1_0.cnpj,p1_0.nome from permissionario p1_0 where p1_0.cnpj=?
2024-07-10 15:13:06 - ID da entidade: null
2024-07-10 15:13:06 - insert into audit_log (entity,entity_id,new_data,old_data,operation,operation_time,username) values (?,?,?,?,?,?,?)
2024-07-10 15:13:06 - LOGG: Auditoria SAVE registrada para entidade: Nota
2024-07-10 15:13:06 - insert into nota (cnpj_emissor,data_captura,data_emissao,faixa_horario,local_destino,municipio_codigo,numero_da_nota,permissionario_cnpj,portaria,tipo_veiculo) values (?,?,?,?,?,?,?,?,?,?)
2024-07-10 15:13:06 - select n1_0.id,n1_0.cnpj_emissor,n1_0.data_captura,n1_0.data_emissao,n1_0.faixa_horario,n1_0.local_destino,n1_0.municipio_codigo,n1_0.numero_da_nota,n1_0.permissionario_cnpj,n1_0.portaria,n1_0.tipo_veiculo from nota n1_0 order by n1_0.data_captura desc offset ? rows fetch first ? rows only
2024-07-10 15:13:06 - select m1_0.ibge,m1_0.codigo,m1_0.nome,m1_0.uf from municipio m1_0
2024-07-10 15:13:06 - select p1_0.cnpj,p1_0.nome from permissionario p1_0
2024-07-10 15:19:20 - Application shutdown requested.
2024-07-10 15:19:20 - Pausing ProtocolHandler ["http-nio-5001"]
2024-07-10 15:19:20 - Stopping service [Tomcat]
2024-07-10 15:19:20 - Destroying Spring FrameworkServlet 'dispatcherServlet'
2024-07-10 15:19:20 - Stopping ProtocolHandler ["http-nio-5001"]
2024-07-10 15:19:20 - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-10 15:19:20 - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@21fe629] for TypeConfiguration
2024-07-10 15:19:20 - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@44d584a3] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@21fe629]
2024-07-10 15:19:20 - HikariPool-1 - Shutdown initiated...
2024-07-10 15:19:20 - HikariPool-1 - Shutdown completed.
